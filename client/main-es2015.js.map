{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/modal-file-upload/modal-file-upload.component.ts","./src/app/components/modal-file-upload/modal-file-upload.component.html","./src/app/components/modal-file-upload/modal-file-upload.service.ts","./src/app/config/global.ts","./src/app/guards/auth.guard.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/procedure.model.ts","./src/app/models/status.model.ts","./src/app/models/user.ts","./src/app/pages/acquisition-request/acquisition-request-form.component.ts","./src/app/pages/acquisition-request/acquisition-request-form.component.html","./src/app/pages/acquisition-request/acquisition-request-view.component.ts","./src/app/pages/acquisition-request/acquisition-request-view.component.html","./src/app/pages/acquisition-request/acquisition-request.component.ts","./src/app/pages/acquisition-request/acquisition-request.component.html","./src/app/pages/adm-condition/adm-condition.component.ts","./src/app/pages/adm-condition/adm-condition.component.html","./src/app/pages/aprobation/aprobation.component.ts","./src/app/pages/aprobation/aprobation.component.html","./src/app/pages/budget-certification/budget-certification-form.component.ts","./src/app/pages/budget-certification/budget-certification-form.component.html","./src/app/pages/budget-certification/budget-certification-view.component.ts","./src/app/pages/budget-certification/budget-certification-view.component.html","./src/app/pages/budget-certification/budget-certification.component.ts","./src/app/pages/budget-certification/budget-certification.component.html","./src/app/pages/company/company-form.component.ts","./src/app/pages/company/company-form.component.html","./src/app/pages/company/company.component.ts","./src/app/pages/company/company.component.html","./src/app/pages/confirm/confirm.component.ts","./src/app/pages/confirm/confirm.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/dashboard/pursue/pursue.component.ts","./src/app/pages/dashboard/pursue/pursue.component.html","./src/app/pages/dashboard/tasks/tasks.component.ts","./src/app/pages/dashboard/tasks/tasks.component.html","./src/app/pages/dashboard/tracing/tracing.component.ts","./src/app/pages/dashboard/tracing/tracing.component.html","./src/app/pages/dashboard/work/work.component.ts","./src/app/pages/dashboard/work/work.component.html","./src/app/pages/document/document.component.ts","./src/app/pages/document/document.component.html","./src/app/pages/file-preview/file-preview.component.ts","./src/app/pages/file-preview/file-preview.component.html","./src/app/pages/firm/firm.component.ts","./src/app/pages/firm/firm.component.html","./src/app/pages/guards/role.guard.ts","./src/app/pages/legal-contract/legal-contract-form.component.ts","./src/app/pages/legal-contract/legal-contract-form.component.html","./src/app/pages/legal-contract/legal-contract.component.ts","./src/app/pages/legal-contract/legal-contract.component.html","./src/app/pages/material/material.module.ts","./src/app/pages/office/office-form.component.ts","./src/app/pages/office/office-form.component.html","./src/app/pages/office/office.component.ts","./src/app/pages/office/office.component.html","./src/app/pages/pages.component.ts","./src/app/pages/pages.component.html","./src/app/pages/pages.module.ts","./src/app/pages/pages.routes.ts","./src/app/pages/performed/detail/detail.component.ts","./src/app/pages/performed/detail/detail.component.html","./src/app/pages/performed/performed.component.ts","./src/app/pages/performed/performed.component.html","./src/app/pages/pipes/estates.pipe.ts","./src/app/pages/pipes/format-date.pipe.ts","./src/app/pages/pipes/truncate-text.pipe.ts","./src/app/pages/position/position-form.component.ts","./src/app/pages/position/position-form.component.html","./src/app/pages/position/position.component.ts","./src/app/pages/position/position.component.html","./src/app/pages/procedure/procedure-form.component.ts","./src/app/pages/procedure/procedure-form.component.html","./src/app/pages/procedure/procedure.component.ts","./src/app/pages/procedure/procedure.component.html","./src/app/pages/process-start/process-start-form.component.ts","./src/app/pages/process-start/process-start-form.component.html","./src/app/pages/process-start/process-start.component.ts","./src/app/pages/process-start/process-start.component.html","./src/app/pages/product/product.component.ts","./src/app/pages/product/product.component.html","./src/app/pages/proposal-comparison/proposal-comparison-form.component.ts","./src/app/pages/proposal-comparison/proposal-comparison-form.component.html","./src/app/pages/proposal-comparison/proposal-comparison.component.ts","./src/app/pages/proposal-comparison/proposal-comparison.component.html","./src/app/pages/proposal-evaluations/proposal-evaluation-form.component.ts","./src/app/pages/proposal-evaluations/proposal-evaluation-form.component.html","./src/app/pages/proposal-evaluations/proposal-evaluations.component.ts","./src/app/pages/proposal-evaluations/proposal-evaluations.component.html","./src/app/pages/proposal-provider/proposal-provider-form.component.ts","./src/app/pages/proposal-provider/proposal-provider-form.component.html","./src/app/pages/proposal-provider/proposal-provider.component.ts","./src/app/pages/proposal-provider/proposal-provider.component.html","./src/app/pages/purchase-order/purchase-order-form.component.ts","./src/app/pages/purchase-order/purchase-order-form.component.html","./src/app/pages/purchase-order/purchase-order.component.ts","./src/app/pages/purchase-order/purchase-order.component.html","./src/app/pages/status/status.component.ts","./src/app/pages/status/status.component.html","./src/app/pages/technical-evaluation/technical-evaluation-form.component.ts","./src/app/pages/technical-evaluation/technical-evaluation-form.component.html","./src/app/pages/technical-evaluation/technical-evaluation.component.ts","./src/app/pages/technical-evaluation/technical-evaluation.component.html","./src/app/pages/technical-report/technical-report-form.component.ts","./src/app/pages/technical-report/technical-report-form.component.html","./src/app/pages/technical-report/technical-report.component.ts","./src/app/pages/technical-report/technical-report.component.html","./src/app/pages/users/users-form/users-form.component.ts","./src/app/pages/users/users-form/users-form.component.html","./src/app/pages/users/users.component.ts","./src/app/pages/users/users.component.html","./src/app/pipes/pdfView.pipe.ts","./src/app/pipes/pipes.module.ts","./src/app/services/acquisitionRequest/acquisition-request.service.ts","./src/app/services/admCondition/adm-condition.service.ts","./src/app/services/auth.service.ts","./src/app/services/budgetCertification/budget-certification.service.ts","./src/app/services/company/company.service.ts","./src/app/services/confirmForm.service.ts","./src/app/services/document/document.service.ts","./src/app/services/legalContract/legal-contract.service.ts","./src/app/services/office/office.service.ts","./src/app/services/position/position.service.ts","./src/app/services/procedure/procedure.service.ts","./src/app/services/processStart/process-start.service.ts","./src/app/services/product/product.service.ts","./src/app/services/proposalComparison/proposal-comparison.service.ts","./src/app/services/proposalEvaluation/proposal-evaluation.service.ts","./src/app/services/proposalProvider/proposal-provider.service.ts","./src/app/services/purchaseOrder/purchase-order.service.ts","./src/app/services/snack.service.ts","./src/app/services/status/status.service.ts","./src/app/services/technicalEvaluation/technical-evaluation.service.ts","./src/app/services/technicalReport/technical-report.service.ts","./src/app/services/token-interceptor.service.ts","./src/app/services/upload-file/upload-file.service.ts","./src/app/services/user.service.ts","./src/app/shared/nopage-found/nopage-found.component.ts","./src/app/shared/nopage-found/nopage-found.component.html","./src/app/store/actions/index.ts","./src/app/store/actions/status.actions.ts","./src/app/store/actions/statuss.actions.ts","./src/app/store/app.reducers.ts","./src/app/store/effects/index.ts","./src/app/store/effects/status.effects.ts","./src/app/store/effects/statuss.effects.ts","./src/app/store/reducers/index.ts","./src/app/store/reducers/status.reducer.ts","./src/app/store/reducers/statuss.reducer.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["var map = {\n\t\"./pages/pages.module\": \"./src/app/pages/pages.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PagesComponent } from './pages/pages.component';\nimport { LoginComponent } from './login/login.component';\nimport { NopageFoundComponent } from './shared/nopage-found/nopage-found.component';\nimport { AuthGuard } from './guards/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PagesComponent,\n    children: [{\n      path: '',\n      loadChildren: './pages/pages.module#PagesModule',\n      canActivate: [AuthGuard]\n    }]\n  },\n    { path: 'login', component: LoginComponent},\n    { path: '**', component: NopageFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n// import { AuthService } from '../../core/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'acquisitons';\n  userForm: FormGroup;\n  formErrors = {\n    email: '',\n    password: ''\n  };\n  validationMessages = {\n    email: {\n      required: '请输入您的邮箱',\n      email: '请输入正确的邮箱'\n    },\n    password: {\n      required: '请输入您的密码',\n      pattern: '密码中必须包含数字和字母',\n      minlength: '请输入大于4个字符',\n      maxlength: '请输入小于25个字符'\n    }\n  };\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.userForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: [\n        '',\n        [\n          Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n          Validators.minLength(6),\n          Validators.maxLength(25)\n        ]\n      ]\n    });\n\n    this.userForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged();\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.userForm) {\n      return;\n    }\n    const form = this.userForm;\n    for (const field in this.formErrors) {\n      if (Object.prototype.hasOwnProperty.call(this.formErrors, field)) {\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (Object.prototype.hasOwnProperty.call(control.errors, key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n  signInWithGoogle() {\n    // this.auth.googleLogin().then(() => this.afterSignIn());\n  }\n\n  signInWithGithub() {\n    // this.auth.githubLogin().then(() => this.afterSignIn());\n  }\n\n  signInWithEmail() {\n    // this.auth\n    //   .emailLogin(this.userForm.value['email'], this.userForm.value['password'])\n    //   .catch(error => console.log('邮箱登录出错：', error));\n  }\n\n  signInAnonymously() {\n    // this.auth.anonymousLogin().then(() => this.afterSignIn());\n  }\n\n  login() {\n    this.signInWithEmail();\n  }\n\n  private afterSignIn() {\n    this.router.navigate(['/']);\n  }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PagesModule } from './pages/pages.module';\nimport { LoginComponent } from './login/login.component';\n\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nimport {FormsModule} from '@angular/forms';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { AuthGuard } from './guards/auth.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\n\n\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\n\n\nimport { appReducers } from './store/app.reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { EffectsArray } from './store/effects/index';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    PagesModule,\n    HttpClientModule,\n    FormsModule,\n    MatCardModule,\n    MatTabsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    ReactiveFormsModule,\n\n    StoreModule.forRoot(appReducers),\n    EffectsModule.forRoot(EffectsArray),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, // Retains last 25 states\n      logOnly: environment.production, // Restrict extension to log-only mode\n    }),\n  ],\n  providers: [\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    },\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UploadFileService } from '../../services/upload-file/upload-file.service';\nimport { ModalFileUploadService } from './modal-file-upload.service';\nimport { SnackService } from 'src/app/services/snack.service';\n\n\n\n@Component({\n  selector: 'app-modal-file-upload',\n  templateUrl: './modal-file-upload.component.html',\n  styles: []\n})\nexport class ModalFileUploadComponent implements OnInit {\n\n  fileUpload: File;\n  iconFile = '../assets/images/icon/file.png';\n\n  constructor(\n    public uploadFileService: UploadFileService,\n    public modalUploadFileService: ModalFileUploadService,\n    public snackService: SnackService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  closeModal() {\n    this.iconFile = '../assets/images/icon/file.png';\n    this.fileUpload = null;\n    this.modalUploadFileService.hideModal();\n\n  }\n\n  selectFile( file: File ) {\n\n    //  console.log('archivo', file);\n\n     if ( !file) {\n      alert('Solo puede subir archivos PDF, DOC o EXCEL');\n      this.fileUpload = null;\n      return;\n    }\n\n     if (file.type.indexOf('application/pdf') < 0 ) {\n      console.error('No se pudo cargar el archivo porque no es un tipo archivo valido ');\n      this.snackService.warn(\"No se pudo cargar el archivo porque no es un tipo archivo valido\");\n      this.fileUpload = null;\n      return;\n    }\n\n     this.fileUpload = file;\n\n     if (file.type.indexOf('pdf') > 0) {\n      this.iconFile = '../assets/images/icon/pdf.png';\n     }\n\n\n  }\n\n  uploadFile() {\n\n    this.uploadFileService.uploadArch(this.fileUpload, this.modalUploadFileService.id)\n            .then( resp => {\n              // console.log( resp );\n              this.modalUploadFileService.modalNotification.emit( resp );\n              this.snackService.success(\"El archivo se subio correctamente\");\n              this.closeModal();\n\n            })\n            .catch( err => {\n              console.log( 'Error en la carga del archivo ');\n              this.snackService.warn(\"Error al cargar el archivo\");\n            });\n  }\n\n}\n","<h1 mat-dialog-title>Subir un archivo</h1>\n\n<div mat-dialog-content>\n\n  <img *ngIf=\"iconFile\" [src]=\"iconFile\" class=\"w150\" alt=\"\">\n  <input (change)=\"selectFile($event.target.files[0])\" type=\"file\">\n\n</div>\n<div mat-dialog-actions>\n  <button (click)=\"uploadFile()\"  mat-button mat-dialog-close > Subir Archivo</button>\n  <button (click)=\"closeModal()\" mat-button mat-dialog-close >Cerrar</button>\n</div>\n","import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalFileUploadService {\n  public type: string;\n  public id: string;\n  public modalNotification = new EventEmitter<any>();\n  \n  constructor() { }\n\n  hideModal() {\n    this.id = null;\n    this.type = null;\n   }\n   showModal( type: string, id: string ) {\n    this.id = id;\n    this.type = type;\n\n   }\n   \n}\n","export const GLOBAL = {\n    uri: 'http://10.245.30.83:3000/api'\n    // uri: 'http://localhost:3000/api'\n  };\n\nexport const routeMap = [\n  {\n    office: 'Unidad Solicitante',\n    routes: [\n              { title: 'Empresas', path: 'companies' },\n              { title: 'Oficinas', path: 'offices' },\n              { title: 'usuarios', path: 'users' },\n              { title: 'procedimientos', path: 'procedures' }\n    ]\n  },\n  {\n    office: 'Unidad Solicitante',\n    routes: [\n              { title: 'Solicitud de adquisición', path: 'acquisitionRequests' },\n              { title: 'Especificaciones técnicas', path: 'technicalReports' },\n              { title: 'Evaluaciones técnicas', path: 'technicalEvaluations' },\n\n    ]\n  },\n  {\n    office: 'Finanzas',\n    routes: [\n              { title: 'Certificaciones presupuestarias', path: 'budgetCertifications' },\n              { title: 'Inicios de proceso', path: 'processStarts' },\n    ]\n  },\n  {\n    office: 'Adquisiciones',\n    routes: [\n              { title: 'Comparación de propuestas', path: 'proposalComparisons' },\n              { title: 'Evaluación de propuestas', path: 'proposalEvaluations' },\n\n    ]\n  },\n  {\n    office: 'Gerencia general',\n    routes: [\n              { title: 'Ordenes de compra', path: 'purchaseOrders' },\n    ]\n  },\n  {\n    office: 'Jurídica',\n    routes: [\n              { title: 'Contratos legales', path: 'legalContracts' },\n\n    ]\n  },\n]\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor( private authService: AuthService, private router: Router) {\n\n  }\n\n  canActivate(): boolean{\n    if ( this.authService.loggedIn() ) {\n      return true;\n    }\n\n    this.router.navigate(['/login']);\n    return false;\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  title = 'demoApp';\n  email: string;\n  password: string;\n  remail: string;\n  rpassword: string;\n  rcpassword: string;\n  user = {\n    name: 'cosa',\n    lastname: 'cosa',\n    email: '',\n    password: '',\n    role: 'USER_ROLE',\n    positionId: '3becc621-690c-4f32-8269-9dfbc2633c2f'\n  };\n  loginUser = {\n    email: '',\n    password: '',\n  };\n\n  constructor(\n              private snackBar: MatSnackBar,\n              private authService: AuthService,\n              private router: Router\n            ) { }\n\n  ngOnInit(): void {\n  }\n  register() {\n\n    this.authService.signUp(this.user)\n        .subscribe(\n          res => {\n            // console.log(res);\n            localStorage.setItem('token', res.Bearer);\n            localStorage.setItem('user', res.user);\n            this.snackBar.open('Se registro correctamente al usuario', 'Registro', { duration: 1000 });\n            this.router.navigate(['/dashboard']);\n          },\n          err => {\n            console.log(err);\n          }\n        );\n\n      }\n  login() {\n\n    this.authService.signIn(this.loginUser)\n        .subscribe(\n          res => {\n            // console.log('respuesta ', res);\n            localStorage.setItem('token', res.Bearer);\n            localStorage.setItem('user', JSON.stringify(res.user));\n            this.snackBar.open('Credenciales correctos', 'Ingresar', { duration: 1000 });\n            this.router.navigate(['/dashboard']);\n          }, err => {\n            console.log(err);\n            this.snackBar.open('Login error', 'ERROR', {duration: 1000});\n          }\n        );\n  }\n}\n","<div class=\"greenBack\" >\n<div class=\"center-content margin-top\">\n  <img src=\"./../../assets/images/logoEAB.png\" alt=\"\" width=\"300\" >\n</div>\n<div class=\"center-content\">\n   \n    <mat-card class=\"example-card\">\n      <mat-card-header>\n        <mat-card-title>Autentificación</mat-card-title>\n        <mat-card-subtitle>Sistema de Adquisiciones</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        \n            <mat-form-field class=\"example-full-width\">\n              <mat-label>Email</mat-label>\n              <input type=\"email\" matInput placeholder=\"Email\" value=\"\" [(ngModel)]=\"loginUser.email\">\n              <mat-icon matSuffix>email</mat-icon>\n            </mat-form-field>\n  \n            <mat-form-field class=\"example-full-width\">\n              <mat-label>Password</mat-label>\n              <input type=\"password\" matInput placeholder=\"Password\" [(ngModel)]=\"loginUser.password\">\n              <mat-icon matSuffix color=\"white\">vpn_key</mat-icon>\n            </mat-form-field>\n            <button mat-button color=\"primary\" (click)=\"login()\">Ingresar</button>\n          \n  \n      </mat-card-content>\n  \n    </mat-card>\n  </div>\n</div>","\nexport class Procedure{\n  constructor(\n    public id: string,\n    public positionId: string,\n    public procedureName: string,\n    public order: number,\n\n  ){}\n}\n","import { Timestamp } from 'rxjs/internal/operators/timestamp';\n\nexport class Status{\n\n  static fromState({id, procedureId, userId, formId, status, dateAt, current, codeRequest, name }): Status {\n      return new Status(id, procedureId, userId, formId, status, dateAt, current, codeRequest, name);\n  }\n\n  constructor(\n    public id: string,\n    public procedureId: string,\n    public userId: string,\n    public formId: string,\n    public status: string,\n    public dateAt: Date,\n    public current: boolean,\n    public codeRequest: string,\n    public name: string,\n  ){}\n}\n","\nexport class User {\n\n    static UsersFromJson( obj: Object ) {\n        return new User(\n            obj['id'],\n            obj['name'],\n            obj['lastname'],\n            obj['email'],\n            obj['password'],\n            obj['role'],\n            obj['positionId'],\n            );\n    }\n\n\n    constructor(\n                public id: string,\n                public name: string,\n                public lastname: string,\n                public email: string,\n                public password: string,\n                public role: string,\n                public positionId: string,\n\n    ) {}\n\n    get fullName() {\n        return `${ this.name } ${ this.lastname }`;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { AcquisitionRequest } from 'src/app/models/acquisitionRequest.model';\nimport { AcquisitionRequestService } from 'src/app/services/acquisitionRequest/acquisition-request.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProductComponent } from '../product/product.component';\nimport { AdmConditionComponent } from '../adm-condition/adm-condition.component';\nimport { Product } from 'src/app/models/product.model';\nimport { AdmCondition } from 'src/app/models/admCondition.model';\nimport { ProductService } from 'src/app/services/product/product.service';\nimport { AdmConditionService } from 'src/app/services/admCondition/adm-condition.service';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { StatusService } from '../../services/status/status.service';\nimport { Status } from '../../models/status.model';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\nimport { User } from '../../models/user';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-acquisition-request-form',\n  templateUrl: './acquisition-request-form.component.html',\n  styleUrls: ['./acquisition-request-form.component.scss']\n})\nexport class AcquisitionRequestFormComponent implements OnInit {\n\n\n  public acquisitionRequest: AcquisitionRequest; // = new AcquisitionRequest(\"\",\"\",\"\",null,\"\",null,\"\",\"\",\"\",\"\",\"\");\n  public acquisitionRequestTest: AcquisitionRequest;\n  public acquisitionRequestForm: FormGroup;\n  currentStatus: Status;\n  currentUser: User;\n  // id: string = 'new';\n  // productDialogRef: MatDialogRef<ProductComponent>;\n  // admConditionDialogRef: MatDialogRef<AdmConditionComponent>;\n  products: Product[] = [];\n  productsTest: Product[] = [];\n  admConditions: AdmCondition[] = [];\n  displayedProducts: string[] = ['name', 'description', 'quantity', 'price','total', 'edit', 'delete'];\n  displayedAdmConditions: string[] = ['priority', 'type', 'warranty', 'edit', 'delete'];\n  constructor(\n    public _acquisitionRequest: AcquisitionRequestService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private dialog: MatDialog,\n    public _product: ProductService,\n    public _admCondition: AdmConditionService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n\n\n    // this.activatedRoute.params\n    // .subscribe( ({ id }) => this.getAcquisitionRequest( id ) );\n\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n\n    this.acquisitionRequestForm = this.formBuilder.group({\n          code: [\"GAF-08-01\"],\n          version: [\"03\"],\n          validity: [new Date('2/13/2019')],\n          numRequest: [null, Validators.required],\n          requestDate: [null, Validators.required],\n          nPac: [null, Validators.required],\n          place: [null, Validators.required],\n          question1: [null, Validators.required],\n          question2: [null, [Validators.required, Validators.minLength(10)]],\n          question3: [null, [Validators.required, Validators.minLength(10)]],\n          coin: [null, Validators.required],\n          title: [null, Validators.required]\n        });\n\n\n\n    this.store.select('status').subscribe(({ status }) => {\n          if (status != null) {\n            // console.log('el estado actual es ', status);\n            this.currentStatus = status;\n            if ( status.formId != null) {\n              this.getAcquisitionRequest( status.formId);\n            } else {\n              this.getAcquisitionRequest( 'new');\n            }\n          }\n        });\n\n  }\n\n  resetForm(formGroup: FormGroup) {\n    let control: AbstractControl = null;\n    formGroup.reset();\n    formGroup.markAsUntouched();\n    Object.keys(formGroup.controls).forEach((name) => {\n      control = formGroup.controls[name];\n      control.setErrors(null);\n    });\n    formGroup.setErrors({ invalid: true });\n  }\n\n  getAcquisitionRequest(id: string){\n    if ( id === 'new'){\n\n      this.acquisitionRequest = null;\n      this.products = null;\n      this.admConditions = null;\n      this.resetForm(this.acquisitionRequestForm);\n        // this.resetForm();\n        // this.acquisitionRequestForm.reset(this.acquisitionRequest);\n        // const {code, version, validity, numRequest, requestDate, nPac, place, question1, question2, question3} = this.acquisitionRequest;\n        // this.acquisitionRequestForm.setValue({code, version, validity, numRequest, requestDate, nPac, place, question1, question2, question3});\n      return;\n    }else {\n      this._acquisitionRequest.getACQRequest(id)\n      .subscribe(acquisitionRequest => {\n        // if(!acquisitionRequest){\n        //   return this.router.navigateByUrl(`/acquisitionRequests`);\n        // }\n        if (acquisitionRequest) {\n          const { admConditions, code, id, nPac, numRequest, place, products, question1, question2, question3, requestDate, validity, version, coin,title} = acquisitionRequest;\n          this.acquisitionRequest = acquisitionRequest;\n          this.products = acquisitionRequest.products;\n          this.admConditions = acquisitionRequest.admConditions;\n          this.acquisitionRequestForm.setValue({code, version, validity, numRequest, requestDate, nPac, place, question1, question2, question3, coin, title});\n        }\n      });\n    }\n\n\n  }\n\n\n  save() {\n    // this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    const {code} = this.acquisitionRequestForm.value;\n\n    if ( this.acquisitionRequest ) {\n      // update\n      const data = {\n        ...this.acquisitionRequestForm.value,\n        id: this.acquisitionRequest.id\n      };\n      this._acquisitionRequest.updateAcquisitionRequest( data )\n        .subscribe( (resp: any) => {\n\n          if (this.currentStatus.procedureId) {\n            const std: Status = Status.fromState( this.currentStatus );\n            std.userId = this.currentUser.id;\n            std.status = 'terminado';\n              // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n          } else {\n            this.router.navigateByUrl('/acquisitionRequests');\n          }\n          // console.log('ssdasd ', resp.acquisitionRequest[0]);\n\n          this.snackService.success('Se ha actualizado correctamente la solicitud de adquisicion ' + `${ code }`);\n\n        });\n\n    } else {\n      // create\n\n      this._acquisitionRequest.createAcquisitionRequest( this.acquisitionRequestForm.value )\n          .subscribe( (resp: any) => {\n            // console.log('solicitud guardada ', resp.acquisitionRequest.id );\n\n            const std: Status = Status.fromState( this.currentStatus );\n            std.formId = resp.acquisitionRequest.id;\n            std.codeRequest = resp.acquisitionRequest.id;\n            std.userId = this.currentUser.id;\n            std.status = 'pendiente';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.initialStatus({ status: std }));\n\n            // this._statusService.addStatus(resp.acquisitionRequest.id, resp.acquisitionRequest.id, 'Primer estado');\n            this.getAcquisitionRequest(resp.acquisitionRequest.id);\n            this.snackService.success('Se ha creado correctamente la solicitud de adquisicion ' + `${code }`);\n\n            // this.router.navigateByUrl(`/acquisitionRequest/${ resp.acquisitionRequest.id }`)\n            // this.router.navigateByUrl(`/`);\n        });\n    }\n\n\n\n  }\n\n\n  delete( id: string ) {\n\n    this._acquisitionRequest.deleteAcquisitionRequest( id )\n            .subscribe ( () =>\n            { this._acquisitionRequest.getAcquisitionRequests();\n              this.snackService.warn('Se ha borrado correctamente la solicitud de adquisicion ');\n            });\n\n  }\n\n  // product\n  getProducts(){\n    this._product.getProducts()\n      .subscribe(products => this.products = products);\n  }\n  openAddProductDialog(){\n    const productDialogRef = this.dialog.open(ProductComponent, {\n      data: { requestId: this.acquisitionRequest.id,\n              productId: 'new'\n      }\n    });\n    productDialogRef.afterClosed().subscribe( result => {\n      this.getAcquisitionRequest(this.acquisitionRequest.id);\n    });\n\n  }\n  openUpdateProductDialog(id: string){\n    const productDialogRef = this.dialog.open(ProductComponent, {\n      data: { productId: id}\n    });\n    productDialogRef.afterClosed().subscribe( result => {\n      this.getAcquisitionRequest(this.acquisitionRequest.id);\n    });\n  }\n  deleteProduct( id: string ) {\n\n    this._product.deleteProduct( id )\n            .subscribe ( () =>\n            { this._product.getProducts();\n              this.snackService.warn('Se ha borrado correctamente el Item ');\n              this.getAcquisitionRequest(this.acquisitionRequest.id);\n            });\n\n  }\n\n  // AdmCondition\n  getAdmConditions(){\n    this._admCondition.getAdmConditions()\n      .subscribe(admConditions => this.admConditions = admConditions);\n  }\n  openAddAdmConditionDialog(){\n    const admConditionDialogRef = this.dialog.open(AdmConditionComponent, {\n      data: { requestId: this.acquisitionRequest.id,\n              admConditionId: 'new'\n      }\n    });\n    admConditionDialogRef.afterClosed().subscribe( result => {\n      this.getAcquisitionRequest(this.acquisitionRequest.id);\n      if (this.currentStatus.procedureId) {\n        const std: Status = Status.fromState( this.currentStatus );\n        std.userId = this.currentUser.id;\n        std.status = 'terminado';\n          // console.log('current status ', std);\n        this.store.dispatch( actions.updateStatus({ status: std }));\n      } else {\n        this.router.navigateByUrl('/acquisitionRequests');\n      }\n\n\n    });\n  }\n\n  openUpdateAdmConditionDialog(id: string){\n    const admConditionDialogRef = this.dialog.open(AdmConditionComponent, {\n      data: { admConditionId: id}\n    });\n    admConditionDialogRef.afterClosed().subscribe( result => {\n      this.getAcquisitionRequest(this.acquisitionRequest.id);\n    });\n  }\n\n  deleteAdmCondition( id: string ) {\n\n    this._admCondition.deleteAdmCondition( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente la Condicion Administrativa ');\n              this.getAcquisitionRequest(this.acquisitionRequest.id);\n            });\n\n  }\n\n\n\n\n\n}\n","\n\n<div class=\"content\">\n  <!--Form Acquisition Request-->\n\n  <mat-card>\n    <mat-card-title>Solicitud de Adquisicion</mat-card-title>\n\n    <mat-card-content>\n      <form [formGroup]=\"acquisitionRequestForm\" (submit)=\"save()\">\n        <div class=\"form\" >\n\n          <div class=\"formLeft\" >\n\n            <mat-form-field>\n              <input matInput placeholder=\"Codigo\" formControlName=\"code\" />\n              <mat-error>Este campo es obligatorio.</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Vigencia\"\n                [matDatepicker]=\"picker1\"\n                formControlName=\"validity\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker1\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #picker1></mat-datepicker>\n              <mat-error>Este campo es obligatorio.</mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Fecha de Solicitud\"\n                [matDatepicker]=\"picker\"\n                formControlName=\"requestDate\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n              <mat-error>Este campo es obligatorio.</mat-error>\n            </mat-form-field>\n            \n            <mat-form-field>\n              <input matInput placeholder=\"Lugar\" formControlName=\"place\" />\n                <mat-error>Este campo es obligatorio.</mat-error>\n              </mat-form-field>\n\n          </div>\n          <div class=\"formRight\">\n            <mat-form-field>\n              <input matInput placeholder=\"Version\" formControlName=\"version\" />\n              <mat-error>Este campo es obligatorio.</mat-error>\n            </mat-form-field>\n  \n              <mat-form-field>\n                <input\n                  matInput\n                  placeholder=\"N de Solicitud\"\n                  formControlName=\"numRequest\"\n                />\n                <mat-error>Este campo es obligatorio.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field>\n                <input matInput placeholder=\"N de Pac\" formControlName=\"nPac\" />\n                <mat-error>Este campo es obligatorio.</mat-error>\n              </mat-form-field>\n              \n              <mat-form-field>\n                <mat-select formControlName=\"coin\" placeholder=\"Moneda\">\n                  <mat-option value=\"Bolivianos\" >Bolivianos</mat-option>\n                  <mat-option value=\"Dolares\" >Dolares</mat-option>\n                  <mat-option value=\"Euros\" >Euros</mat-option>\n                </mat-select>\n                <mat-error>\n                  Este campo es obligatorio.\n                </mat-error>\n              </mat-form-field>\n\n          </div>\n\n        </div>\n        \n    \n      <mat-form-field class=\"full-width\">\n        <textarea\n          matInput\n          placeholder=\"Titulo de la adquisicion\"\n          formControlName=\"title\"\n        ></textarea>\n        <mat-error>Este campo es obligatorio.</mat-error>\n      </mat-form-field>\n      <br />\n\n      <mat-form-field class=\"full-width\">\n        <textarea\n          matInput\n          placeholder=\"¿Para que es necesaria la adquisición del bien o bienes?\"\n          formControlName=\"question1\"\n        ></textarea>\n        <mat-error>Este campo es obligatorio.</mat-error>\n      </mat-form-field>\n      <br />\n      <mat-form-field class=\"full-width\">\n        <textarea\n          matInput\n          placeholder=\"¿En que Oficina / Planta / Proyecto se usará el bien o\n        bienes?\"\n          formControlName=\"question2\"\n        ></textarea>\n        <mat-error>Este campo es obligatorio.</mat-error>\n      </mat-form-field>\n      <br />\n      <mat-form-field class=\"full-width\">\n        <textarea\n          matInput\n          placeholder=\"¿Quién o quiénes harán uso del bien o bienes?\"\n          formControlName=\"question3\"\n        ></textarea>\n        <mat-error>Este campo es obligatorio.</mat-error>\n      </mat-form-field>\n      <br />\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        class=\"button\"\n        [disabled]=\"!acquisitionRequestForm.valid\"\n      >\n        Guardar\n      </button>\n\n\n\n      </form>\n    </mat-card-content>\n  </mat-card>\n  <aside *ngIf=\"acquisitionRequest\">\n    <mat-card-title>\n      <button mat-raised-button class=\"create\" (click)=\"openAddProductDialog()\">\n        <mat-icon>add</mat-icon>Item\n      </button>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"openAddAdmConditionDialog()\"\n        *ngIf=\"admConditions.length<1\"\n      >\n        <mat-icon>add</mat-icon>C. Administrativa\n      </button>\n    </mat-card-title>\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Items</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"products\" class=\"mat-elevation-z8\">\n\n\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Item</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef>Descripcion</th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element.description }}\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef>Cantidad</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.quantity }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef>Precio Unitario</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.price }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"total\">\n            <th mat-header-cell *matHeaderCellDef>Total</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.price*element.quantity }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateProductDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <!-- Delete Column -->\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteProduct(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedProducts\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedProducts\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n\n    <br />\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Condiciones Administrativas</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"admConditions\" class=\"mat-elevation-z8\">\n          <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n          <!-- Position Column -->\n          <ng-container matColumnDef=\"priority\">\n            <th mat-header-cell *matHeaderCellDef>Prioridad</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.priority }}</td>\n          </ng-container>\n\n          <!-- Name Column -->\n          <ng-container matColumnDef=\"type\">\n            <th mat-header-cell *matHeaderCellDef>Modelo/Tipo/Procedencia</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n          </ng-container>\n\n          <!-- Weight Column -->\n          <ng-container matColumnDef=\"warranty\">\n            <th mat-header-cell *matHeaderCellDef>Garantia</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.warranty }}</td>\n          </ng-container>\n\n          <!-- Edit Column -->\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateAdmConditionDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <!-- Delete Column -->\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteAdmCondition(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedAdmConditions\"></tr>\n          <tr\n            mat-row\n            *matRowDef=\"let row; columns: displayedAdmConditions\"\n          ></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </aside>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { AcquisitionRequest } from 'src/app/models/acquisitionRequest.model';\nimport { AcquisitionRequestService } from 'src/app/services/acquisitionRequest/acquisition-request.service';\nimport { Product } from 'src/app/models/product.model';\nimport { AdmCondition } from 'src/app/models/admCondition.model';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { Status } from '../../models/status.model';\nimport { StatusService } from '../../services/status/status.service';\nimport { IStatus } from '../../interfaces/interfaces';\n\n@Component({\n  selector: 'app-acquisition-request-view',\n  templateUrl: './acquisition-request-view.component.html',\n  styles: ['']\n})\nexport class AcquisitionRequestViewComponent implements OnInit {\n\n  // @Input() id: string;\n  currentStatus: Status;\n  tracer: IStatus [] = [];\n  acquisitionRequest: AcquisitionRequest;\n  products: Product;\n  admConditions: AdmCondition;\n  panelOpenState = true;\n  displayedProducts: string[] = ['name', 'description', 'quantity', 'price'];\n  displayedAdmConditions: string[] = ['priority', 'type', 'warranty'];\n\n  constructor(\n    public acquisitionRequestService: AcquisitionRequestService,\n    private statusService: StatusService,\n    public router: Router,\n    private store: Store<AppState>\n  ) {}\n\n  ngOnInit(): void {\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status.codeRequest);\n        this.currentStatus = status;\n        if(status.codeRequest) {\n          this.getAcquisitionRequest(status.codeRequest);\n        }\n        // this.getStatus(status.codeRequest);\n      }\n    });\n    // console.log('ID ingresado', this.id);\n\n  }\n\n  getAcquisitionRequest(id: string){\n    this.acquisitionRequestService.getACQRequest(id)\n      .subscribe(acquisitionRequest => {\n        if (!acquisitionRequest){\n          return;\n        }\n        this.acquisitionRequest = acquisitionRequest;\n        this.products = acquisitionRequest.products;\n        this.admConditions = acquisitionRequest.admConditions;\n\n      });\n  }\n\n\n  getStatus(codeRequest: string) {\n    if (!codeRequest) { return; }\n    this.statusService.getStatusByRequest(codeRequest).subscribe( tracer => {\n      // console.log('traza ', tracer);\n      this.tracer = tracer;\n    } );\n  }\n\n\n}\n","\n<div class=\"container\" >\n\n  <div class=\"panelLeft30\" >\n \n    <mat-card *ngIf=\"acquisitionRequest\">\n    \n      <div class=\"form\" >\n        <div class=\"formLeft\" >\n\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Codigo\"\n              value=\"{{ acquisitionRequest.code }}\"\n            />\n          </mat-form-field>\n    \n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Version\"\n              value=\"{{ acquisitionRequest.version }}\"\n            />\n          </mat-form-field>\n    \n         \n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Vigencia\"\n                [matDatepicker]=\"picker1\"\n                value=\"{{ acquisitionRequest.validity }}\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker1\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #picker1></mat-datepicker>\n            </mat-form-field>\n\n        </div>\n        <div class=\"formRight\" >\n\n\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"N de Solicitud\"\n              value=\"{{ acquisitionRequest.numRequest }}\"\n            />\n          </mat-form-field>\n      \n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Fecha de Solicitud\"\n              [matDatepicker]=\"picker\"\n              value=\"{{ acquisitionRequest.requestDate }}\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n  \n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"N de Pac\"\n              value=\"{{ acquisitionRequest.nPac }}\"\n            />\n          </mat-form-field>\n\n        </div>\n      </div>\n\n\n       \n    <div class=\"formCenter\" >\n\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"Lugar\"\n          value=\"{{ acquisitionRequest.place }}\"\n        />\n      </mat-form-field>\n      <mat-form-field>\n        <textarea\n          matInput\n          placeholder=\"¿Para que es necesaria la adquisición del bien o bienes?\"\n          value=\"{{ acquisitionRequest.question1 }}\"\n        ></textarea>\n      </mat-form-field>\n      <br />\n      <mat-form-field>\n        <textarea\n          matInput\n          placeholder=\"¿En que Oficina / Planta / Proyecto se usará el bien o bienes?\"\n          value=\"{{ acquisitionRequest.question2 }}\"\n        ></textarea>\n      </mat-form-field>\n      <br />\n      <mat-form-field>\n        <textarea\n          matInput\n          placeholder=\"¿Quién o quiénes harán uso del bien o bienes?\"\n          value=\"{{ acquisitionRequest.question3 }}\"\n        ></textarea>\n      </mat-form-field>\n  \n\n    </div>\n\n  </mat-card>\n\n  </div>\n\n\n\n  <div class=\"panelRight60\" >\n    <h3>Items</h3>\n    <table mat-table [dataSource]=\"products\" class=\"mat-elevation-z8\">\n      <!--- Note that these columns can be defined in any order.\n    The actual rendered columns are set as a property on the row definition\" -->\n\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Nombre</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef>Descripcion</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.description }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"quantity\">\n        <th mat-header-cell *matHeaderCellDef>Cantidad</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.quantity }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef>Precio</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.price }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedProducts\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedProducts\"></tr>\n    </table>\n\n    <br>\n    <h3>Condiciones Administrativas</h3>\n    <table mat-table [dataSource]=\"admConditions\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"priority\">\n        <th mat-header-cell *matHeaderCellDef>Prioridad</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.priority }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"type\">\n        <th mat-header-cell *matHeaderCellDef>Tipo</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"warranty\">\n        <th mat-header-cell *matHeaderCellDef>Garantia</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.warranty }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedAdmConditions\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedAdmConditions\"></tr>\n    </table>\n\n  </div>\n\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {AcquisitionRequest} from '../../models/acquisitionRequest.model';\nimport { AcquisitionRequestService } from 'src/app/services/acquisitionRequest/acquisition-request.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { changeFormId } from '../../store/actions/status.actions';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-acquisition-request',\n  templateUrl: './acquisition-request.component.html',\n  styleUrls: ['./acquisition-request.component.scss']\n})\nexport class AcquisitionRequestComponent implements OnInit {\n\n  acquisitionRequests: AcquisitionRequest[] = [];\n  displayedColumns: string[] = ['code', 'version', 'validity', 'numRequest', 'edit', 'delete'];\n  constructor(\n    public _acquisitionRequest: AcquisitionRequestService,\n    public snackService: SnackService,\n    private store: Store<AppState>,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.getAcquisitionRequests();\n  }\n\n  getAcquisitionRequests(){\n    \n    this._acquisitionRequest.getAcquisitionRequests()\n      .subscribe(acquisitionRequests => this.acquisitionRequests = acquisitionRequests);\n      // console.log('entro', this.acquisitionRequests);\n  }\n\n  edit(id: string) {\n    this.store.dispatch( changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/acquisitionRequest/edit')\n  }\n  delete( id: string ) {\n\n    this._acquisitionRequest.deleteAcquisitionRequest( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente la Solicitud de Adquisicion ');\n              this.getAcquisitionRequests();\n            });\n\n  }\n\n\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Solicitudes de adquisición</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Solicitudes de adquisición</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/procedure/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva solicitud\n  </button> -->\n</div>\n\n<table mat-table [dataSource]=\"acquisitionRequests\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef> Codigo </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"version\">\n    <th mat-header-cell *matHeaderCellDef> Version </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.version}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"validity\">\n    <th mat-header-cell *matHeaderCellDef> Vigencia </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.validity}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"numRequest\">\n    <th mat-header-cell *matHeaderCellDef> N Solicitud </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.numRequest}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button  (click)=\"edit(element.id)\"  class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>borrar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { AdmCondition } from 'src/app/models/admCondition.model';\nimport { AdmConditionService } from 'src/app/services/admCondition/adm-condition.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-adm-condition',\n  templateUrl: './adm-condition.component.html',\n  styleUrls: ['./adm-condition.component.scss']\n})\nexport class AdmConditionComponent implements OnInit {\n\n    admCondition: AdmCondition; // = new AdmCondition(\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\");\n    public admConditionForm: FormGroup;\n    requestId: string;\n    admConditionId: string;\n  constructor(\n    public _admCondition: AdmConditionService,\n    public router: Router,\n    public activatedRoute: ActivatedRoute,\n    private admConditionFormBuilder : FormBuilder,\n    private dialogRef: MatDialogRef<AdmConditionComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AdmConditionComponent,\n    public snackService: SnackService,\n  ) {   }\n\n  ngOnInit(): void {\n    if(this.data.admConditionId !== 'new'){\n      this.getAdmCondition(this.data.admConditionId);\n    }\n    this.admConditionForm = this.admConditionFormBuilder.group({\n      priority:[null, Validators.required],\n      type:[null, Validators.required],\n      warranty:[null, Validators.required],\n      deliveryTime:[null, Validators.required],\n      placeDelivery:[null, Validators.required],\n      posibleProviders:[null, Validators.required],\n      requestId:[this.data.requestId],\n\n    });\n  }\n\n  getAdmCondition(id: string){\n    this._admCondition.getAdmCondition(id)\n      .subscribe(admCondition => {\n        if(!admCondition){\n          this.onCloseDialog();\n        }\n        const {priority, type, warranty, deliveryTime, placeDelivery, posibleProviders, requestId} = admCondition;\n        this.admCondition = admCondition;\n        this.admConditionForm.setValue({priority, type, warranty, deliveryTime, placeDelivery, posibleProviders, requestId});\n      })\n  }\n\n  onCloseDialog(){\n    this.dialogRef.close();\n  }\n\n  save() {\n\n    const {priority} = this.admConditionForm.value;\n    // console.log(this.admConditionForm.value);\n    if ( this.admCondition ) {\n      // update\n      const data = {\n        ...this.admConditionForm.value,\n        id: this.admCondition.id,\n        requestId: this.admCondition.requestId\n      }\n      this._admCondition.updateAdmCondition( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la condicion administrativa ' + `${ priority }`);\n          this.onCloseDialog();\n        })\n\n    } else {\n      // create\n\n      this._admCondition.createAdmCondition( this.admConditionForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha actualizado correctamente la condicion administrativa '+ `${priority }`);\n            this.onCloseDialog();\n        })\n    }\n\n\n\n  }\n\n}\n","<!--Form Acquisition Request-->\n\n<mat-toolbar>\n  <div class=\"fill-remaining-space\">\n    <span class=\"fill-remaining-space\">Condicion Administrativa</span>\n  </div>\n</mat-toolbar>\n\n<form [formGroup]=\"admConditionForm\" (submit)=\"save()\">\n  <div class=\"controles-container\">\n\n    <mat-form-field>\n      <mat-select formControlName=\"priority\" placeholder=\"Prioridad\">\n        <mat-option value=\"Alta\" >Alta</mat-option>\n        <mat-option value=\"Media\" >Media</mat-option>\n        <mat-option value=\"Baja\" >Baja</mat-option>\n      </mat-select>\n      <mat-error>\n        Este campo es obligatorio.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput placeholder=\"Tipo\" formControlName=\"type\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"standard\">\n      <input matInput placeholder=\"Garantia\" formControlName=\"warranty\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n  </div>\n  <div class=\"controles-container\">\n    <mat-form-field>\n      <input\n        matInput\n        placeholder=\"Tiempo de Entrega\"\n        formControlName=\"deliveryTime\"\n      />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input\n        matInput\n        placeholder=\"Lugar de Entrega\"\n        formControlName=\"placeDelivery\"\n      />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n        matInput\n        placeholder=\"Posibles Proveedores\"\n        formControlName=\"posibleProviders\"\n      />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n  </div>\n    <div class=\"button-row\">\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        class=\"button\"\n        [disabled]=\"!admConditionForm.valid\"\n      >\n        Guardar\n      </button>\n      <button mat-button mat-dialog-close>Cerrar</button>\n    </div>\n\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { Status } from '../../models/status.model';\nimport { ConfirmFormService } from '../../services/confirmForm.service';\nimport { Store } from '@ngrx/store';\n\nimport { ConfirmForm } from '../../models/confirmForm.model';\nimport * as actions from '../../store/actions/status.actions';\nimport { AppState } from '../../store/app.reducers';\n\n@Component({\n  selector: 'app-aprobation',\n  templateUrl: './aprobation.component.html',\n  styles: ['']\n})\nexport class AprobationComponent implements OnInit {\n\n  currentStatus: Status;\n  activate = false;\n  currentUser: User;\n  confirmation: ConfirmForm;\n\n  constructor(\n    public confirmFormService: ConfirmFormService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.confirmFormService.initializeFormGroup();\n\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status.formId != null) {\n          this.getConfirmForm( status.formId);\n        } else {\n          this.getConfirmForm( 'new');\n        }\n      }\n    });\n  }\n\n  getConfirmForm(formId: string) {\n\n    if ( formId === 'new' ) {\n      console.log('confirmacion nueva');\n      this.confirmFormService.initializeFormGroup();\n\n    } else {\n      // console.log('id formulario ', formId);\n      this.confirmFormService.getConfirmation(formId).subscribe( confirmation => {\n        console.log('confiracion cargada', confirmation);\n        if ( confirmation ){\n        this.confirmFormService.onSetForm(confirmation['confirmation']);\n        }\n      });\n    }\n\n  }\n\n  onChange(value: boolean) {\n    // console.log('value ', value);\n    this.confirmFormService.form.controls['codeRequest'].setValue(this.currentStatus.codeRequest);\n    this.confirmFormService.saveConfirmation(this.confirmFormService.form.value).subscribe( resp => {\n      if ( this.currentStatus.procedureId ) {\n          // console.log('confirm form ', resp );\n          const std: Status = Status.fromState( this.currentStatus );\n          std.formId = resp.id;\n          std.status = 'terminado';\n          // console.log('current status ', std);\n          this.store.dispatch(actions.updateStatus({ status: std }));\n          // this.store.dispatch(actions.resetStatus());\n        }\n    });\n    // console.log('Valor del form ', this.confirmFormService.form.value.userId);\n  }\n\n  onSubmit() {\n\n  }\n}\n","<div class=\"container\" >\n\n    <div class=\"panelLeft\">\n\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n              <div mat-card-avatar class=\"example-header-image\"></div>\n              <mat-card-title>Aprobación de Inicio de proceso</mat-card-title>\n              <mat-card-subtitle>Adqisición de bienes o servicios</mat-card-subtitle>\n            </mat-card-header>\n            \n            <mat-card-content>\n              <p>\n                Los detalles de la solicitud se encuentran en la pestana \"Solicitud\", en este panel se detallan los datos de la solicitud de los bienes y o servicios que se solicita.\n              </p>\n            </mat-card-content>\n            <mat-card-actions>\n              <form [formGroup]=\"confirmFormService.form\"  class=\"normal-form\" (submit)=\"onSubmit()\">\n                <input type=\"hidden\" formControlName=\"id\">\n                \n                \n                \n                <mat-button-toggle-group formControlName=\"refuse\" value=\"refuse\" #group=\"matButtonToggleGroup\" aria-label=\"Confirmación\" (change)=\"onChange(group.value)\">\n                  <mat-button-toggle [value]=\"false\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Aceptar la solicitud\"  >done</mat-icon>\n                    ACEPTAR\n                  </mat-button-toggle>\n                  <mat-button-toggle [value]=\"true\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"No aceptar la Solicitud\">clear</mat-icon> \n                    NO ACEPTAR\n                  </mat-button-toggle>\n                </mat-button-toggle-group>\n\n\n            </form>\n\n            </mat-card-actions>\n          </mat-card>\n\n    </div>\n    <div class=\"panelRight\">\n\n        <!-- <mat-card class=\"example-card\">\n            <mat-card-header>\n              <div mat-card-avatar class=\"example-header-image\"></div>\n              <mat-card-title>Formulario de aprobación</mat-card-title>\n              <mat-card-subtitle>dfasd</mat-card-subtitle>\n            </mat-card-header>\n            <form>\n            <mat-card-content>\n                <mat-form-field appearance=\"fill\" style=\"width: 100%\">\n                    <mat-label>Observaciones</mat-label>\n                    <textarea matInput ></textarea>\n                  </mat-form-field>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-button mat-raised-button  >\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Aceptar la solicitud\">done</mat-icon>\n                    ACEPTAR\n                 </button>\n              <button mat-button mat-raised-button  > \n                  <mat-icon aria-hidden=\"false\" aria-label=\"No aceptar la Solicitud\">clear</mat-icon> \n                  NO ACEPTAR\n              </button>\n              \n            </mat-card-actions>\n            </form>\n\n          </mat-card> -->\n\n    </div>\n</div>\n\n\n","import { Component, OnInit, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { BudgetCertification } from 'src/app/models/budgetCertification.model';\nimport { BudgetCertificationService } from 'src/app/services/budgetCertification/budget-certification.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { DocumentComponent } from '../document/document.component';\nimport { Document } from 'src/app/models/document.model';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Status } from '../../models/status.model';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\nimport { User } from '../../models/user';\nimport { AuthService } from '../../services/auth.service';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-budget-certification-form',\n  templateUrl: './budget-certification-form.component.html',\n  styleUrls: ['./budget-certification-form.component.scss']\n})\nexport class BudgetCertificationFormComponent implements OnInit {\n\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  public budgetCertificationForm: FormGroup;\n  public budgetCertification: BudgetCertification;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document', 'preview', 'name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n\n  constructor(\n    public _budgetCertification: BudgetCertificationService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n\n\n\n    this.budgetCertificationForm = this.formBuilder.group({\n          reserveCode: [null, Validators.required],\n\n        });\n\n    this.store.select('status').subscribe(({ status }) => {\n          if (status != null) {\n            // console.log('el estado actual es ', status);\n            this.currentStatus = status;\n            if ( status.formId != null) {\n              this.getBudgetCertification( status.formId);\n            } else {\n              this.getBudgetCertification( 'new');\n            }\n          }\n        });\n  }\n\n\n  terminate() {\n    // console.log('Documentos cargados', this.documents);\n    if ( this.currentStatus.procedureId) {\n      const std: Status = Status.fromState( this.currentStatus );\n      if (this.documents.length > 0) {\n            std.userId = this.currentUser.id;\n            std.status = 'terminado';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n          }else {\n              std.status = 'pendiente';\n          }\n    }\n  }\n\n  getBudgetCertification(id: string){\n\n    if (id === 'new'){\n      return;\n    }\n    this._budgetCertification.getBC(id)\n      .subscribe(budgetCertification => {\n        // if ( !budgetCertification ) {\n        //   return this.router.navigateByUrl(`/budgetCertifications`);\n        // }\n        // console.log('form certification ', budgetCertification);\n        if (budgetCertification){\n          const {reserveCode} = budgetCertification;\n          this.budgetCertification = budgetCertification;\n          this.documents = budgetCertification.documents;\n          this.budgetCertificationForm.setValue({reserveCode });\n        }\n\n      });\n  }\n\n  save() {\n\n    const {reserveCode} = this.budgetCertificationForm.value;\n\n    if ( this.budgetCertification ) {\n      // update\n      const data = {\n        ...this.budgetCertificationForm.value,\n        id: this.budgetCertification.id\n      };\n      this._budgetCertification.updateBudgetCertification( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la Certificacion Presupuestaria ' + `${ reserveCode }`);\n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/budgetCertifications');\n          } else {\n            this.terminate();\n          }\n        });\n\n    } else {\n      // create\n\n      this._budgetCertification.createBudgetCertification( this.budgetCertificationForm.value )\n          .subscribe( (resp: any) => {\n            // console.log('valor de la certificación guardada', resp);\n            if (this.currentStatus.procedureId){\n              const std: Status = Status.fromState( this.currentStatus );\n              std.formId = resp.budgetCertification.id;\n              std.userId = this.currentUser.id;\n              std.status = 'pendiente';\n              this.store.dispatch( actions.updateStatus({ status: std }));\n            }\n            \n\n            this.getBudgetCertification(resp.budgetCertification.id);\n            this.snackService.success('Se ha creado correctamente la Certificacion Presupuestaria ' + `${reserveCode }`);\n\n        });\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._budgetCertification.deleteBudgetCertification( id )\n            .subscribe ( () =>\n            { this._budgetCertification.getBudgetCertifications();\n              this.snackService.warn('Se ha borrado correctamente la Certificacion Presupuestaria ');\n            });\n\n  }\n\n  // document\n  // getDocuments(){\n  //   this._document.getDocuments()\n  //     .subscribe(documents => this.documents = documents );\n  // }\n\n\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.budgetCertification.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getBudgetCertification(this.budgetCertification.id);\n    });\n  }\n\n\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getBudgetCertification(this.budgetCertification.id);\n      // this.sendEvent();\n      this.terminate();\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getBudgetCertification(this.budgetCertification.id);\n\n\n              this.terminate();\n\n            });\n\n  }\n\n  // sendEvent() {\n  //   // console.log('eniva evento');\n  //   this.eventRefresh.emit(true);\n  // }\n\n  createDocument(){\n    const document: Document = {id:'',name:\"Certificacion Presupuestaria\",type: \"\", formId:this.budgetCertification.id,src:\"./uploads\",status:\"active\",createDate: new Date()};\n    this._document.createDocument(document)\n      .subscribe((resp:any) =>\n      {\n        this._document.getDocuments();\n        this.changeFile(resp.document.id);\n        this.snackService.success('Se ha creado correctamente el documento ');\n        this.getBudgetCertification(this.budgetCertification.id);\n\n        this.terminate();\n\n      }\n      );\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getBudgetCertification(this.budgetCertification.id);\n                  // this.sendEvent();\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src === './uploads') {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n\n\n}\n","<div class=\"container\">\n  <div class=\"panelLeft30\" >\n\n    <mat-card>\n      <mat-card-title>Certificacion Presupuestaria</mat-card-title>\n\n      <mat-card-content>\n        <form [formGroup]=\"budgetCertificationForm\" (submit)=\"save()\">\n          <div class=\"textarea-container\">\n          <mat-form-field>\n            <textarea matInput placeholder=\"Codigo de Reserva\" formControlName=\"reserveCode\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n\n        </div>\n        <div class=\"button-row\">\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!budgetCertificationForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n\n\n  <div class=\"panelRight70\">\n    <mat-card-title>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"createDocument()\"\n        [disabled]=\"!budgetCertification\"\n        *ngIf = \"documents.length<1\"\n      >\n        <mat-icon>add</mat-icon>Documento\n      </button>\n    </mat-card-title>\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Documentos</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"document\">\n            <th mat-header-cell *matHeaderCellDef>Documento</th>\n            <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n              <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef>Ver</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openPreviewDocumentDialog(element.src)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateDocumentDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteDocument(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"sendEvent()\"\n      >\n        <mat-icon>add</mat-icon>Enviar evento\n   </button> -->\n\n\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BudgetCertification } from 'src/app/models/budgetCertification.model';\nimport { Document } from 'src/app/models/document.model';\nimport { BudgetCertificationService } from 'src/app/services/budgetCertification/budget-certification.service';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { AppState } from '../../store/app.reducers';\nimport { Store } from '@ngrx/store';\n@Component({\n  selector: 'app-budget-certification-view',\n  templateUrl: './budget-certification-view.component.html',\n  styleUrls: ['./budget-certification-view.component.scss']\n})\nexport class BudgetCertificationViewComponent implements OnInit {\n\n  budgetCertification: BudgetCertification;\n  documents: Document;\n  id: string = null;\n  displayedDocuments: string[] = ['name', 'type', 'src'];\n  fileView: File;\n  pdfSrc = \"https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf\";\n  pdfSrc1 = \"../../../assets/certificacion.pdf\";\n  pdfSrc2 = \"http://localhost:3000/api/files/19d3b9d2-f2ad-413f-b10e-0ca4befc5be3-544.pdf\"\n  constructor(\n    public _budgetCertification: BudgetCertificationService,\n    public _document: DocumentService,\n    private store: Store<AppState>\n\n  ) { }\n\n  ngOnInit(): void {\n    \n\n    this.store.select('status').subscribe(({ status }) => {\n      console.log('el estado en la certificación es ', status);\n      this.id = status.formId;\n      this.getBudgetCertification(this.id);\n    });\n\n  }\n\n  getBudgetCertification(id: string){\n    this._budgetCertification.getBC(id)\n      .subscribe(budgetCertification => {\n        if ( !budgetCertification ) {\n          return;\n        }\n\n        this.budgetCertification = budgetCertification;\n        this.documents = budgetCertification.documents;\n\n\n      })\n  }\n\n  getFile(src){\n    this._document.getFile(src)\n    .subscribe(resp => {\n      console.log(this.fileView);\n      this.fileView = resp;\n      console.log(this.fileView);\n    })\n  }\n\n}\n","<ng-container *ngIf=\"budgetCertification\">\n<mat-accordion>\n  <mat-expansion-panel hideToggle>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Certificacion Presupuestaria sasd\n      </mat-panel-title>\n      <mat-panel-description>\n        {{budgetCertification.reserveCode}}\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Nombre</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"type\">\n        <th mat-header-cell *matHeaderCellDef>Tipo</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.type }}\n        </td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"src\">\n        <th mat-header-cell *matHeaderCellDef>Src</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.src }}</td>\n      </ng-container>\n\n\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n    </table>\n    <!-- <pdf-viewer [src]=\"'../../../assets/certificacion.pdf'\"\n              [render-text]=\"true\"\n              style=\"display: block;\"\n  ></pdf-viewer> -->\n  </mat-expansion-panel>\n\n</mat-accordion>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { BudgetCertification } from 'src/app/models/budgetCertification.model';\nimport { BudgetCertificationService } from 'src/app/services/budgetCertification/budget-certification.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-budget-certification',\n  templateUrl: './budget-certification.component.html',\n  styleUrls: ['./budget-certification.component.scss']\n})\nexport class BudgetCertificationComponent implements OnInit {\n\n  budgetCertifications: BudgetCertification[] = [];\n  displayedColumns: string[] = ['reserveCode','edit','delete'];\n\n  constructor(\n    public _budgetCertification: BudgetCertificationService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>,\n  ) { }\n\n  ngOnInit(): void {\n    this.getBudgetCertifications();\n  }\n\n  getBudgetCertifications(){\n    this._budgetCertification.getBudgetCertifications()\n      .subscribe(budgetCertifications => this.budgetCertifications = budgetCertifications);\n  }\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/budgetCertification/edit');\n  }\n  delete( id: string ) {\n\n    this._budgetCertification.deleteBudgetCertification( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente la Certificacion Presupuestaria ');\n              this.getBudgetCertifications();\n            });\n\n  }\n\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Certificaciones presupuestarias</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Certificaciones presupuestarias</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/budgetCertification/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva certificación presupuestaria\n  </button> -->\n</div>\n\n<table mat-table [dataSource]=\"budgetCertifications\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"reserveCode\">\n    <th mat-header-cell *matHeaderCellDef> Codigo Reserva </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.reserveCode}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" [routerLink]=\"['/budgetCertification', element.id ]\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>eliminar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { Company } from 'src/app/models/company.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CompanyService } from 'src/app/services/company/company.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { OfficeComponent } from '../office/office.component';\nimport { OfficeFormComponent } from '../office/office-form.component';\nimport { Office } from 'src/app/models/office.model';\nimport { OfficeService } from 'src/app/services/office/office.service';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-company-form',\n  templateUrl: './company-form.component.html',\n  styleUrls: ['./company-form.component.scss']\n})\nexport class CompanyFormComponent implements OnInit {\n\n  company: Company;\n  public companyForm: FormGroup;\n  offices: Office[] = [];\n  displayedOffices: string[] = ['name','supOfficeId','edit', 'delete'];\n  constructor(\n    public _company: CompanyService,\n    public router: Router,\n    public activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    public _office: OfficeService,\n    public snackService: SnackService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params\n    .subscribe( ({ id }) => this.getCompany( id ) );\n\n    this.companyForm = this.formBuilder.group({\n          name:[null, Validators.required],\n          direction:[null, Validators.required],\n          nit:[null, Validators.required],\n          email:[null, Validators.required],\n          phone:[null, Validators.required],\n        });\n    this.getOffices();\n  }\n\n  getCompany(id: string){\n    if(id==='new'){\n      return;\n    }\n    this._company.getCompany(id)\n      .subscribe(company => {\n        if(!company){\n          return this.router.navigateByUrl(`/companies`);\n        }\n        const {name,direction,nit,email,phone} = company;\n        this.company = company;\n        this.companyForm.setValue({name,direction,nit,email,phone});\n      })\n  }\n\n  save() {\n\n    const {name} = this.companyForm.value;\n\n    if ( this.company ) {\n      // update\n      const data = {\n        ...this.companyForm.value,\n        id: this.company.id\n      }\n      this._company.updateCompany( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la empresa ' + `${ name }`);\n        })\n\n    } else {\n      // create\n\n      this._company.createCompany( this.companyForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente la empresa '+ `${name }`);\n            this.router.navigateByUrl(`/company/${ resp.company.id }`)\n        })\n    }\n\n  }\n\n  getOffices(){\n    this._office.getOffices()\n      .subscribe(offices => this.offices = offices);\n  }\n\n  delete( id: string ) {\n\n    this._office.deleteOffice( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente a la Unidad');\n              this.getOffices();\n            });\n\n  }\n\n\n\n}\n","<div class=\"content\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Empresa</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <form [formGroup]=\"companyForm\" (submit)=\"save()\">\n        <div class=\"controles-container\">\n          <mat-form-field appearance=\"standard\">\n            <input matInput placeholder=\"Nombre\" formControlName=\"name\" />\n            <mat-error>Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"standard\">\n            <input\n              matInput\n              placeholder=\"Direccion\"\n              formControlName=\"direction\"\n            />\n            <mat-error>Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n\n          <br />\n\n          <mat-form-field appearance=\"standard\">\n            <input matInput placeholder=\"Nit\" formControlName=\"nit\" />\n            <mat-error>Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"standard\">\n            <input matInput placeholder=\"Email\" formControlName=\"email\" />\n            <mat-error>Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n\n          <br />\n\n          <mat-form-field appearance=\"standard\">\n            <input matInput placeholder=\"Telefono\" formControlName=\"phone\" />\n            <mat-error>Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"button-row\">\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!companyForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n      </form>\n    </mat-card-content>\n  </mat-card>\n  <aside *ngIf=\"company\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Unidades</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"offices\" class=\"mat-elevation-z8\">\n          <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n          <!-- Position Column -->\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n          <!-- Weight Column -->\n          <ng-container matColumnDef=\"supOfficeId\">\n            <th mat-header-cell *matHeaderCellDef>supOfficeId</th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element.supOfficeId }}\n            </td>\n          </ng-container>\n\n          <!-- Edit Column -->\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>edit</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                [routerLink]=\"['/office', element.id]\"\n                class=\"btn btn-primary\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <!-- Delete Column -->\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>delete</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"delete(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedOffices\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedOffices\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </aside>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Company } from 'src/app/models/company.model';\nimport { CompanyService } from 'src/app/services/company/company.service';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.scss']\n})\nexport class CompanyComponent implements OnInit {\n\n  companies: Company[] = [];\n  displayedColumns: string[] = ['name', 'direction','nit', 'email', 'phone','edit','delete'];\n  constructor(\n    public _company: CompanyService,\n    public snackService: SnackService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getCompanies();\n  }\n\n  getCompanies(){\n    this._company.getCompanies()\n    .subscribe(companies => this.companies = companies);\n  }\n\n  delete( id: string ) {\n\n    this._company.deleteCompany( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente a la Empresa');\n              this.getCompanies();\n            });\n\n  }\n\n\n}\n","\n<mat-card-title>\n  <div class=\"button-row\">\n<button mat-raised-button class=\"create\" [routerLink] = \"['/company/new']\">\n        <mat-icon>add</mat-icon>New Company\n</button>\n</div>\n</mat-card-title>\n\n<table mat-table [dataSource]=\"companies\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Nombre </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"direction\">\n    <th mat-header-cell *matHeaderCellDef> Direccion </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.direction}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"nit\">\n    <th mat-header-cell *matHeaderCellDef> Nit </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.nit}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"email\">\n    <th mat-header-cell *matHeaderCellDef> email </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"phone\">\n    <th mat-header-cell *matHeaderCellDef> telefono </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.phone}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button [routerLink]=\"['/company', element.id ]\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>borrar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { Status } from '../../models/status.model';\nimport { ConfirmFormService } from '../../services/confirmForm.service';\nimport { Store } from '@ngrx/store';\n\nimport { ConfirmForm } from '../../models/confirmForm.model';\nimport * as actions from '../../store/actions/status.actions';\nimport { AppState } from '../../store/app.reducers';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styles: ['']\n})\nexport class ConfirmComponent implements OnInit {\n\n  currentStatus: Status;\n  activate = false;\n  currentUser: User;\n  confirmation: ConfirmForm;\n\n  constructor(\n    public confirmFormService: ConfirmFormService,\n    private store: Store<AppState>\n\n     ) { }\n\n  ngOnInit(): void {\n\n    this.confirmFormService.initializeFormGroup();\n\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status.formId != null) {\n          this.getConfirmForm( status.formId);\n        } else {\n          this.getConfirmForm( 'new');\n        }\n      }\n    });\n    // console.log('Valor del form ', this.confirmFormService.form);\n  }\n\n  getConfirmForm(formId: string) {\n\n    if ( formId === 'new' ) {\n      // console.log('confirmacion nueva');\n      this.confirmFormService.initializeFormGroup();\n\n    } else {\n      this.confirmFormService.getConfirmation(formId).subscribe( confirmation => {\n        // console.log('confiracion cargada', confirmation);\n        this.confirmFormService.onSetForm(confirmation['confirmation']);\n      });\n    }\n\n  }\n\n  onChange(value: boolean) {\n    // console.log('value ', value);\n    this.confirmFormService.form.controls['codeRequest'].setValue(this.currentStatus.codeRequest);\n    this.confirmFormService.saveConfirmation(this.confirmFormService.form.value).subscribe( resp => {\n      // console.log('confirm form ', resp );\n      if (this.currentStatus.procedureId) {\n          const std: Status = Status.fromState( this.currentStatus );\n          std.formId = resp.id;\n          std.status = 'terminado';\n          // console.log('current status ', std);\n          this.store.dispatch(actions.updateStatus({ status: std }));\n          // this.store.dispatch(actions.resetStatus());\n        }\n    });\n    // console.log('Valor del form ', this.confirmFormService.form.value.userId);\n  }\n\n  onSubmit() {\n\n  }\n\n}\n","<div class=\"container\" >\n\n    <div class=\"panelLeft\">\n\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n              <div mat-card-avatar class=\"example-header-image\"></div>\n              <mat-card-title>Aprobación de solicitud</mat-card-title>\n              <mat-card-subtitle>Solicitud de adqisición de bienes o servicios</mat-card-subtitle>\n            </mat-card-header>\n            \n            <mat-card-content>\n              <p>\n                Los detalles de la solicitud se encuentran en la pestana \"Solicitud\", en este panel se detallan los datos de la solicitud de los bienes y o servicios que se solicita.\n              </p>\n            </mat-card-content>\n            <mat-card-actions>\n              <form [formGroup]=\"confirmFormService.form\"  class=\"normal-form\" (submit)=\"onSubmit()\">\n                <input type=\"hidden\" formControlName=\"id\">\n                \n                \n                \n                <mat-button-toggle-group formControlName=\"refuse\" value=\"refuse\" #group=\"matButtonToggleGroup\" aria-label=\"Confirmación\" (change)=\"onChange(group.value)\">\n                  <mat-button-toggle [value]=\"false\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Aceptar la solicitud\"  >done</mat-icon>\n                    ACEPTAR\n                  </mat-button-toggle>\n                  <mat-button-toggle [value]=\"true\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"No aceptar la Solicitud\">clear</mat-icon> \n                    NO ACEPTAR\n                  </mat-button-toggle>\n                </mat-button-toggle-group>\n\n\n            </form>\n\n            </mat-card-actions>\n          </mat-card>\n\n    </div>\n    <div class=\"panelRight\">\n\n        <!-- <mat-card class=\"example-card\">\n            <mat-card-header>\n              <div mat-card-avatar class=\"example-header-image\"></div>\n              <mat-card-title>Formulario de aprobación</mat-card-title>\n              <mat-card-subtitle>dfasd</mat-card-subtitle>\n            </mat-card-header>\n            <form>\n            <mat-card-content>\n                <mat-form-field appearance=\"fill\" style=\"width: 100%\">\n                    <mat-label>Observaciones</mat-label>\n                    <textarea matInput ></textarea>\n                  </mat-form-field>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-button mat-raised-button  >\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Aceptar la solicitud\">done</mat-icon>\n                    ACEPTAR\n                 </button>\n              <button mat-button mat-raised-button  > \n                  <mat-icon aria-hidden=\"false\" aria-label=\"No aceptar la Solicitud\">clear</mat-icon> \n                  NO ACEPTAR\n              </button>\n              \n            </mat-card-actions>\n            </form>\n\n          </mat-card> -->\n\n    </div>\n</div>\n\n\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { IStatus } from '../../interfaces/interfaces';\n\n\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor( ) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n <app-tasks></app-tasks>\n  \n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../store/app.reducers';\nimport { Status } from '../../../models/status.model';\nimport * as actions from '../../../store/actions/status.actions';\nimport * as actionss from '../../../store/actions/statuss.actions';\nimport { ProcedureService } from '../../../services/procedure/procedure.service';\nimport { User } from '../../../models/user';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-pursue',\n  templateUrl: './pursue.component.html',\n  styleUrls: ['./pursue.component.scss']\n})\nexport class PursueComponent implements OnInit {\n\n  currentStatus: Status;\n  activate = false;\n  currentUser: User;\n  constructor(\n          private store: Store<AppState>,\n          private procedureService: ProcedureService,\n          private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n      this.store.select('status').subscribe(({status}) => {\n        if (status != null) {\n\n          // console.log('el estado actual es ', status);\n          this.currentStatus = status;\n          if (status.status === 'terminado') {\n            this.switchButtons(true);\n            }else {\n              this.switchButtons(false);\n            }\n          }\n        });\n  }\n\n  switchButtons(active: boolean) {\n    this.activate = active;\n  }\n\n  nextTask() {\n    // console.log('press next');\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    const std: Status = Status.fromState( this.currentStatus );\n    std.current = false;\n            // console.log('current status ', std);\n    this.store.dispatch( actions.updateStatus({ status: std }));\n\n    this.procedureService.getProcedure(std.procedureId).subscribe( currentProcedure => {\n        const nextOrder = currentProcedure.order + 1;\n        this.procedureService.getProcedureByOrder(nextOrder).subscribe( procedure => {\n          const nextstd: Status = Status.fromState( std );\n          nextstd.procedureId = procedure.id;\n          nextstd.name = procedure.procedureName;\n          nextstd.userId = null;\n          nextstd.formId = null;\n          nextstd.status = 'proceso';\n          nextstd.dateAt = new Date();\n          nextstd.current = true;\n          // para cargar correctamente la lista de tareas\n          const currentPID = this.currentStatus.procedureId;\n          // Crear estado y actualizar lista de tareas\n          this.store.dispatch( actions.createStatus({status: nextstd}));\n          this.store.dispatch( actionss.loadStatuss(\n            {\n              positionId: this.currentUser.positionId,\n              procedureId: currentPID,\n              userId: this.currentUser.id\n            }));\n\n          this.store.dispatch( actions.resetStatus());\n        });\n    });\n  }\n\n  refuseTask() {\n\n    console.log('press refuse');\n  }\n \n\n}\n","\n<mat-card style=\"margin-top: 10px;\" *ngIf=\"activate\">\n\n    <form class=\"form\"  >\n        <div class=\"formLeft\"  ><button mat-flat-button color=\"accent\" [disabled]=\"!activate\" (click)=\"refuseTask()\" > <mat-icon aria-hidden=\"false\" aria-label=\"Rechazar\">arrow_back_ios</mat-icon> Regresar </button></div>\n        <div class=\"formRight\" ><button mat-flat-button color=\"primary\" [disabled]=\"!activate\" (click)=\"nextTask()\">Continuar <mat-icon aria-hidden=\"false\" aria-label=\"Continuar con la siguiente tarea\">arrow_forward_ios</mat-icon></button></div>\n    </form>\n</mat-card>\n","import { Component, OnInit, ViewChild, SimpleChanges } from '@angular/core';\nimport { StatusService } from '../../../services/status/status.service';\nimport { Status } from 'src/app/models/status.model';\nimport { IStatus } from '../../../interfaces/interfaces';\nimport { ProcedureService } from '../../../services/procedure/procedure.service';\nimport { PositionService } from '../../../services/position/position.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { User } from '../../../models/user';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../store/app.reducers';\n// import { loadStatuss } from '../../../store/actions/statuss.actions';\nimport * as actions from '../../../store/actions/statuss.actions';\n\n// import { loadStatus } from 'src/app/store/actions';\nimport { loadStatus, requestStatus } from '../../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n\n  // @Output() statusSelect = new EventEmitter<Status>();\n  filters: actions.validFilters [] = ['proceso', 'pendiente', 'terminado'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  user: User;\n  statuss: Status [] = [];\n  data: Status [] = [];\n  status: Status;\n  currentUser: User;\n  refresh = false;\n  currentFilter: actions.validFilters = 'proceso';\n\n  loading: boolean = false;\n  error: any;\n\n\n  page = 0;\n  size = 5;\n\n  constructor(\n    public statusService: StatusService,\n    public procedureService: ProcedureService,\n    public positionService: PositionService,\n    public authService: AuthService,\n    private store: Store<AppState>\n\n  ) {}\n\n  ngOnInit(): void {\n\n    // this.store.select('statuss').subscribe(({ filter }) => {\n    //   // console.log('el estado en filtro es ', filter);\n    //   this.currentFilter = filter;\n\n    // });\n    this.getStatus();\n  }\n\n  newRequest() {\n    this.user = JSON.parse(this.authService.getUser());\n    this.procedureService.getProcedureByOrder(1).subscribe( procedure => {\n      // console.log('Procedimento almacenado ', procedure);\n      this.store.dispatch( requestStatus({ userId: this.user.id, procedureId: procedure.id, name: procedure.procedureName }) );\n    });\n  }\n\n  changeFilter( filter: actions.validFilters ) {\n    // console.log('filtro seleccionado ', filter);\n    this.store.dispatch( actions.setFilterStatus({ filter }));\n  }\n  // ngOnChanges(changes: SimpleChanges): void {\n\n  //   if (changes.refresh.currentValue){\n  //     this.getStatus();\n  //   }\n  // }\n\n  // doRefresh(value: boolean){\n  //   console.log('list refresh ', value);\n  //   if (value) {\n  //     this.statuss = [];\n  //     this.getStatus();\n  //   }\n  // }\n\n  getStatus() {\n\n\n    this.store.select('statuss').subscribe( ({statuss, loading, error, filter}) => {\n\n      let res = statuss.filter( status => status.status === filter);\n      this.statuss = res;\n      this.data = this.statuss;\n      this.loading = loading;\n      this.error = error;\n      this.currentFilter = filter;\n      this.getData({pageIndex: this.page, pageSize: this.size});\n    });\n\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n\n    this.procedureService.getProcedureByOrder(1).subscribe( procedure => {\n      this.store.dispatch( actions.loadStatuss({\n              positionId: this.currentUser.positionId,\n              procedureId: procedure.id,\n              userId: this.currentUser.id\n            }));\n    });\n\n    \n\n  }\n\n\n  // getStatus(){\n  //   console.log('Carga datos de la lista de tareas');\n\n  //   this.currentUser =  JSON.parse(this.authService.getUser()) ;\n\n  //   this.positionService.getPosition(this.currentUser.positionId).subscribe(position => {\n\n  //     this.procedureService.getProcedureByPosition(position.id).subscribe(procedures => {\n\n  //       procedures.forEach( procedure => this.statuss.push(...procedure.status));\n\n  //       this.data = this.statuss;\n  //       this.getData({pageIndex: this.page, pageSize: this.size});\n\n\n\n  //     });\n\n  //   });\n\n  // }\n\n\n\n// opciones para el paginador\n  getData(obj) {\n    let index = 0,\n    startingIndex = obj.pageIndex * obj.pageSize,\n    endingIndex = startingIndex + obj.pageSize;\n\n    this.data = this.statuss.filter(() => {\n      index++;\n      return (index > startingIndex && index <= endingIndex) ? true : false;\n    });\n  }\n\n  sendStatus(status: Status): void {\n    // console.log('estado enviado ', status);\n    this.store.dispatch( loadStatus({ id: status.id }));\n    this.status = status;\n    this.refresh = false;\n    // this.statusSelect.emit(status);\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"'navigation'\"\n      [mode]=\"'side'\"\n      [opened]=\"true\">\n    <mat-toolbar>\n      <span>Options</span>\n    </mat-toolbar>\n\n    <mat-selection-list [multiple]=\"false\">\n      <!-- <div mat-subheader>Folders</div> -->\n      <mat-list-option  *ngFor=\"let filter of filters\" [class.selected] = \"filter === currentFilter\"  (click)=\"changeFilter(filter)\" >\n        <div mat-line >{{ filter | titlecase }}</div>\n\n      </mat-list-option>\n\n\n    </mat-selection-list>\n\n    <!-- <mat-nav-list>\n      <a mat-list-item routerLink=\"/dashboard\">En proceso</a>\n      <a mat-list-item routerLink=\"/status\">Pendientes</a>\n      <a mat-list-item routerLink=\"/status\">Terminados</a>\n    </mat-nav-list> -->\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <button mat-flat-button color=\"primary\" routerLink=\"/dashboard\" routerLinkActive=\"active\" >\n        <mat-icon>fact_check</mat-icon>\n        Tareas</button>\n        <!-- routerLink=\"/acquisitionRequest/new\" -->\n      <button mat-flat-button color=\"primary\"  (click)=\"newRequest()\" routerLinkActive=\"active\">\n        <mat-icon>grading</mat-icon>\n        Solicitud</button>\n\n\n    </mat-toolbar>\n\n\n<div class=\"content\" >\n<aside>\n<mat-card class=\"example-card\">\n    <mat-card-header>\n      \n      <mat-card-title>Filtrar tareas</mat-card-title>\n      <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\n    </mat-card-header>\n    \n    <mat-card-content>\n\n\n      <form class=\"example-form\">\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Buscar</mat-label>\n          <input matInput placeholder=\"Buscar ...\" value=\"\">\n        </mat-form-field>\n        </form>\n    </mat-card-content>\n    <!-- <mat-card-actions>\n      <button mat-button>LIKE</button>\n      <button mat-button>SHARE</button>\n    </mat-card-actions> -->\n  </mat-card>\n  <br>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      \n      <mat-card-title>Lista de tareas</mat-card-title>\n      <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\n    </mat-card-header>\n    \n    <mat-card-content>\n\n      <div class=\"spinner\" *ngIf=\"loading\">\n        <div class=\"bounce1\"></div>\n        <div class=\"bounce2\"></div>\n        <div class=\"bounce3\"></div>\n      </div>\n      \n      <mat-card  *ngIf=\"error\" style=\"background-color: palevioletred; width: 380px; overflow: auto;white-space: nowrap; \">\n        <mat-card-header>\n          <mat-card-title>Error</mat-card-title>\n          <mat-card-subtitle>\n            <pre>\n              {{ error | json }}\n            </pre>\n          </mat-card-subtitle>\n          \n        </mat-card-header>\n      </mat-card>\n\n\n      <mat-card class=\"s-card\" *ngIf=\"!data.length\">\n        <mat-card-header>\n          <mat-card-title>Usted no tiene tareas</mat-card-title>\n          <mat-card-subtitle>No se ha registrado tareas a su cargo </mat-card-subtitle>\n        </mat-card-header>\n      </mat-card>\n\n      <mat-selection-list [multiple]=\"false\" *ngIf=\"!loading\">\n        <!-- <div mat-subheader>Folders</div> -->\n        <mat-list-option *ngFor=\"let std of data  | estates:currentFilter\" (click)=\"sendStatus(std)\"> \n          <mat-icon mat-list-icon color=\"primary\">mail_outline</mat-icon>\n          <div mat-line>{{std.name}}</div>\n          <div mat-line> {{std.dateAt | date}} </div>\n        </mat-list-option>\n       \n  \n      </mat-selection-list>\n\n    </mat-card-content>\n    <mat-card-actions>\n      <mat-paginator [length]=\"statuss.length\"\n          [pageSize]=\"size\"\n          [pageIndex]=\"page\"\n          [pageSizeOptions]=\"[5, 10, 20]\"\n          (page)=\"getData($event)\">\n    </mat-paginator>\n    </mat-card-actions>\n  </mat-card>\n\n</aside>\n<div class=\"info\" >\n \n  <app-work  ></app-work>\n\n</div>\n</div>\n\n<ng-container *ngIf=\"status\"><app-tracing></app-tracing></ng-container>\n\n\n\n</mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit, Input, SimpleChanges, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\nimport { IStatus } from 'src/app/interfaces/interfaces';\nimport { StatusService } from '../../../services/status/status.service';\nimport { ProcedureService } from '../../../services/procedure/procedure.service';\nimport { Procedure } from '../../../models/procedure.model';\nimport { Status } from '../../../models/status.model';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../store/app.reducers';\n\n@Component({\n  selector: 'app-tracing',\n  templateUrl: './tracing.component.html',\n  styleUrls: ['./tracing.component.scss']\n})\nexport class TracingComponent implements OnInit, AfterViewChecked {\n  \n  currentStatus: Status;\n  tracer: IStatus [] = [];\n  procedure: Procedure = new Procedure(null, null, '', 0);\n  @ViewChild('container') private myScrollContainer: ElementRef;\n\n  constructor(\n              private statusService: StatusService,\n              private procedureService: ProcedureService,\n              private store: Store<AppState>\n              ) { }\n\n  ngOnInit(): void {\n\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status == null) { return; }\n        if ( status.codeRequest ) {\n          this.getStatus(this.currentStatus.codeRequest);\n          this.getNextProcedure(this.currentStatus.procedureId);\n        } else {\n          this.tracer = null;\n          this.procedure = null;\n        }\n\n      }\n    });\n    // this.scrollToBottom();\n    // console.log('entro al init');\n  }\n\n  ngAfterViewChecked () {\n    // lo llama varias veces\n    this.scrollToBottom();\n    // console.log('entro al cheked');\n  }\n\n  getStatus(codeRequest: string) {\n    this.statusService.getStatusByRequest(codeRequest).subscribe( tracer => {\n      // console.log('traza ', tracer);\n      this.tracer = tracer;\n    } );\n  }\n\n  getNextProcedure(procedureId: string) {\n    this.procedureService.getProcedure(procedureId).subscribe( currentProcedure => {\n      const newOrder = currentProcedure.order + 1;\n      this.procedureService.getProcedureByOrder(newOrder).subscribe( nextProcedure => {\n        this.procedure = nextProcedure;\n        // console.log('siguiente procedimiento', this.procedure);\n      });\n    });\n  }\n\n  scrollToBottom(): void {\n\n    try {\n        // console.log('estro al scroll', this.myScrollContainer.nativeElement.scrollWidth);\n\n\n        this.myScrollContainer.nativeElement.scrollLeft = this.myScrollContainer.nativeElement.scrollWidth;\n    \n      } catch (err) { console.log('error en le scroll ', err); }\n}\n\n}\n","<div class=\"container\"  id=\"container\" #container>\n   <div class=\"panelCenter\" >\n    <mat-card>\n       \n        <div id=\"flex-scroll\">\n\n        <ul class=\"timeline\" id=\"timeline\">\n        \n        \n        <!-- complete , current -->\n        <li class=\"li\"  *ngFor=\"let trace of tracer\" [ngClass]=\"trace.current ? 'current': 'complete'\" >\n            <div class=\"timestamp\">\n            <span class=\"author\"><strong>{{trace.name | truncateText: 35}}</strong> </span>\n            <span class=\"date\">{{trace.dateAt | date: 'dd MMM yyyy, h:mm a'}}</span>\n            </div>\n            <div class=\"status\">\n            <h4 *ngIf=\"trace.current\"> Actual </h4>\n            <h4 *ngIf=\"!trace.current\"> Completada </h4>\n            </div>\n        </li>\n        <li class=\"li\" *ngIf=\"procedure != null\" >\n            <div class=\"timestamp\">\n            <span class=\"author\"><strong>{{procedure.procedureName | truncateText: 35}}</strong></span>\n            <span class=\"date\">Próximo</span>\n            </div>\n            <div class=\"status\">\n            <h4> Siguiente </h4>\n            </div>\n        </li>\n        </ul>     \n    </div> \n\n</mat-card>\n   \n</div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { IStatus } from 'src/app/interfaces/interfaces';\nimport { FormsIn } from '../../../interfaces/interfaces';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../store/app.reducers';\nimport { Status } from '../../../models/status.model';\n\n\n@Component({\n  selector: 'app-work',\n  templateUrl: './work.component.html',\n  styleUrls: ['./work.component.scss']\n})\nexport class WorkComponent implements OnInit {\n\n  // @Input() status: IStatus;\n  // @Input('childToMaster') masterName: string;\n\n  // @Output() eventRefresh = new EventEmitter<boolean>();\n  currentStatus: Status;\n  formsIn: FormsIn = 'anyForm';\n  infoIn: string;\n  constructor( private store: Store<AppState> ) {\n  }\n\n  ngOnInit(): void {\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status.codeRequest);\n        this.currentStatus = status;\n        this.chargeForms(status);\n      } else {\n        this.formsIn = 'anyForm';\n      }\n\n    });\n    \n  }\n\n  // tslint:disable-next-line:use-lifecycle-interface\n\n  // doRefresh(value: boolean) {\n  //   // console.log(' refresca ', value );\n  //   this.formsIn = 'anyForm';\n  //   this.eventRefresh.emit(true);\n  // }\n\n  chargeForms(status: Status) {\n\n    \n    // console.log('status ', status.name)\n    status.codeRequest != null ? this.infoIn = 'infoReq' : this.infoIn = 'none';\n    \n    if (status.name === 'Solicitud de adquisición de bienes' ) {\n      this.formsIn = 'request';\n    }\n    if (status.name === 'Aprobación Solicitud' ) {\n      this.formsIn = 'confirm';\n    }\n    if (status.name === 'Certificación presupuestaria' ) {\n      this.formsIn = 'certification';\n    }\n    if (status.name === 'Elaborar especificación técnica' ) {\n      this.formsIn = 'technical';\n    }\n    if (status.name === 'Inicio de proceso' ) {\n      this.formsIn = 'initial';\n    }\n    if (status.name === 'Aprobación inicio de proceso' ) {\n      this.formsIn = 'aproved';\n    }\n    if (status.name === 'Recepción de propuestas' ) {\n      this.formsIn = 'proposal';\n    }\n    if (status.name === 'Elabora Informe de evaluación técnica' ) {\n      this.formsIn = 'inform';\n    }\n    if (status.name === 'Elaborar cuadro comparativo' ) {\n      this.formsIn = 'comparative';\n    }\n    if (status.name === 'Elabora contrato' ) {\n      this.formsIn = 'contract';\n    }\n    if (status.name === 'Firma orden de compra' ) {\n      this.formsIn = 'order';\n    }\n    if (status.name === 'Fin del proceso' ) {\n      this.formsIn = 'end';\n    }\n    // console.log('formIn ', this.formsIn)\n    // console.log('valor info', this.infoIn);\n  }\n\n  // ngOnChanges(changes: SimpleChanges): void {\n\n\n  //   // for (const propName in changes) {\n  //   //     const change = changes[propName];\n  //   //     const curVal  = JSON.stringify(change.currentValue);\n  //   //     const prevVal = JSON.stringify(change.previousValue);\n\n  //   //     console.log('actual', curVal);\n  //   //     console.log('previo', prevVal);\n  //   //   }\n\n  //   if (this.currentStatus != null) {\n\n  //   if (changes.status.currentValue){\n  //     // console.log('estado cambia a ', this.status);\n\n\n  //     if (this.currentStatus.name === 'Solicitud de adquisición de bienes' ) {\n  //       this.formsIn = 'request';\n  //     }\n  //     if (this.currentStatus.name === 'Certificación presupuestaria' ) {\n  //       this.formsIn = 'certification';\n  //     }\n  //     if (this.currentStatus.name === 'Elaborar informe de inicio de proceso' ) {\n  //       this.formsIn = 'thecnical';\n  //     }\n  //   }\n\n    \n  // }\n  // }\n\n}\n","<mat-tab-group animationDuration=\"300ms\">\n    <mat-tab label=\"Tarea\">\n      <br>\n\n      <div class=\"container\" *ngIf=\"formsIn === 'anyForm'\" >\n        <div class=\"panelCenter\" >\n          <mat-card class=\"s-card\" >\n            <mat-card-header>\n              <mat-card-title>Seleccione una tarea para continuar</mat-card-title>\n              <mat-card-subtitle>No se leccionó ninguna tarea, seleccioné una tarea de la lista de tareas </mat-card-subtitle>\n            </mat-card-header>\n          </mat-card>\n        </div>\n      </div>\n\n\n\n        <ng-container *ngIf=\"formsIn === 'request'\" > <app-acquisition-request-form></app-acquisition-request-form> </ng-container>\n        <ng-container *ngIf=\"formsIn === 'confirm'\" > <app-confirm  ></app-confirm> </ng-container>\n        <ng-container *ngIf=\"formsIn === 'certification'\" ><app-budget-certification-form ></app-budget-certification-form></ng-container>\n        <ng-container *ngIf=\"formsIn === 'technical'\"> <app-technical-report-form ></app-technical-report-form> </ng-container>\n        <ng-container *ngIf=\"formsIn === 'initial'\" > <app-process-start-form></app-process-start-form> </ng-container>\n        <ng-container *ngIf=\"formsIn === 'aproved'\" ><app-aprobation></app-aprobation></ng-container>\n        <ng-container *ngIf=\"formsIn === 'proposal'\" ><app-proposal-evaluation-form></app-proposal-evaluation-form></ng-container>\n        <ng-container *ngIf=\"formsIn === 'inform'\"> <app-technical-evaluation-form></app-technical-evaluation-form> </ng-container>\n        <ng-container *ngIf=\"formsIn === 'comparative'\" ><app-proposal-comparison-form></app-proposal-comparison-form></ng-container>\n        <ng-container *ngIf=\"formsIn === 'contract'\" ><app-legal-contract-form></app-legal-contract-form></ng-container>\n        <ng-container *ngIf=\"formsIn === 'order'\" ><app-purchase-order-form></app-purchase-order-form></ng-container>\n        \n    \n    </mat-tab>\n\n    <mat-tab label=\"Detalles\" *ngIf=\"infoIn === 'infoReq'\">\n      <div class=\"info\" >\n        <br>\n\n        <h2>\n          <!-- <mat-icon mat-list-icon color=\"primary\">domain_verification</mat-icon> -->\n          Solicitud de Adquisicion\n        </h2>\n        <app-acquisition-request-view ></app-acquisition-request-view>\n\n        <ng-container *ngIf=\"formsIn === 'technical'\">\n          <h2>Certificacion</h2>\n          <!-- <app-budget-certification-view></app-budget-certification-view> -->\n        </ng-container>\n      </div>\n\n\n    </mat-tab>\n\n\n  </mat-tab-group>\n\n  <app-pursue></app-pursue>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Document } from 'src/app/models/document.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-document',\n  templateUrl: './document.component.html',\n  styleUrls: ['./document.component.scss']\n})\nexport class DocumentComponent implements OnInit {\n\n  document: Document;\n  public documentForm: FormGroup;\n  formId: string;\n  documentId: string;\n\n  constructor(\n    public _document: DocumentService,\n    private dialogRef: MatDialogRef<DocumentComponent>,\n    private documentFormBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: DocumentComponent,\n    public snackService: SnackService,\n\n  ) { }\n\n  ngOnInit(): void {\n    if(this.data.documentId !== 'new'){\n      this.getDocument(this.data.documentId);\n    }\n\n    this.documentForm = this.documentFormBuilder.group({\n      name:[null, Validators.required],\n      type:[null],\n      formId:[this.data.formId],\n      src:[null],\n\n\n    });\n  }\n  getDocument(id: string){\n    this._document.getDocument(id)\n      .subscribe(document => {\n        if(!document){\n          this.onCloseDialog();\n        }\n        const {name, type, formId, src} = document;\n        this.document = document;\n        this.documentForm.setValue({name, type, formId, src});\n      })\n  }\n  onCloseDialog(){\n\n    this.dialogRef.close();\n  }\n  save() {\n\n    const {name} = this.documentForm.value;\n    if ( this.document ) {\n      // update\n      const data = {\n        ...this.documentForm.value,\n        id: this.document.id,\n        formId: this.document.formId\n      }\n      console.log(data);\n      this._document.updateDocument( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el documento ' + `${ name }`);\n          this.onCloseDialog();\n        })\n\n    } else {\n      // create\n\n      this._document.createDocument( this.documentForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente el documento '+ `${name }`);\n            this.onCloseDialog();\n        })\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.success('Se ha creado borrado el documento ');\n            });\n\n  }\n\n\n}\n","<mat-toolbar>\n  <div class=\"fill-remaining-space\">\n    <span class=\"fill-remaining-space\">Documento</span>\n  </div>\n</mat-toolbar>\n\n<form [formGroup]=\"documentForm\" (submit)=\"save()\">\n\n\n  <div class=\"controles-container\">\n    <mat-form-field>\n      <input matInput placeholder=\"Nombre\" formControlName=\"name\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n\n  </div>\n\n    <div class=\"button-row\">\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        class=\"button\"\n        [disabled]=\"!documentForm.valid\"\n      >\n        Guardar\n      </button>\n      <button mat-button mat-dialog-close>Cerrar</button>\n    </div>\n\n\n\n</form>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Document } from 'src/app/models/document.model';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DocumentComponent } from 'src/app/pages/document/document.component';\nimport { SnackService } from 'src/app/services/snack.service';\n\n\n@Component({\n  selector: 'app-file-preview',\n  templateUrl: './file-preview.component.html',\n  styleUrls: ['./file-preview.component.scss']\n})\nexport class FilePreviewComponent implements OnInit {\n\n  url: string;\n  src: string;\n  formId: string;\n  document: Document;\n  aux = '518ddd2a-e9b6-459a-8fae-01665ef0661f-788.pdf';\n\n  constructor(\n    public _document: DocumentService,\n    private dialogRef: MatDialogRef<FilePreviewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: FilePreviewComponent,\n    public snackService: SnackService,\n  ) { }\n\n  ngOnInit(): void {\n    if(this.data.src){\n      this.getFileSrc(this.data.src);\n    }\n  }\n  getDocument(id: string){\n    this._document.getDocumentForm(id)\n      .subscribe(document => {\n        if(!document){\n          this.onCloseDialog();\n        }\n\n        this.document = document;\n        this.getFileSrc(this.document.src);\n        console.log(this.url);\n\n\n      })\n  }\n  getFileSrc(src: string){\n    if(src==\"./uploads\"){\n      this.onCloseDialog();\n      this.snackService.warn(\"No se tiene ningun archivo\");\n    }\n    else{\n\n      this.url = src;\n\n    }\n  }\n  onCloseDialog(){\n\n    this.dialogRef.close();\n  }\n}\n","<ng-container *ngIf=\"url\">\n\n  <iframe [src]=\"url | pdfView\" type=\"application/pdf\" style=\"height:700px;width:100%\"></iframe>\n</ng-container>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { Status } from '../../models/status.model';\nimport { ConfirmFormService } from '../../services/confirmForm.service';\nimport { Store } from '@ngrx/store';\nimport { ConfirmForm } from '../../models/confirmForm.model';\nimport * as actions from '../../store/actions/status.actions';\nimport { AppState } from '../../store/app.reducers';\n\n\n@Component({\n  selector: 'app-firm',\n  templateUrl: './firm.component.html',\n  styles: ['']\n})\nexport class FirmComponent implements OnInit {\n\n  currentStatus: Status;\n  activate = false;\n  currentUser: User;\n  confirmation: ConfirmForm;\n\n  constructor(\n    public confirmFormService: ConfirmFormService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.confirmFormService.initializeFormGroup();\n\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status.formId != null) {\n          this.getConfirmForm( status.formId);\n        } else {\n          this.getConfirmForm( 'new');\n        }\n      }\n    });\n  }\n\n  getConfirmForm(formId: string) {\n\n    if ( formId === 'new' ) {\n      console.log('confirmacion nueva');\n      this.confirmFormService.initializeFormGroup();\n\n    } else {\n      // console.log('id formulario ', formId);\n      this.confirmFormService.getConfirmation(formId).subscribe( confirmation => {\n        console.log('confiracion cargada', confirmation);\n        if ( confirmation ){\n        this.confirmFormService.onSetForm(confirmation['confirmation']);\n        }\n      });\n    }\n\n  }\n\n  onChange(value: boolean) {\n    // console.log('value ', value);\n    this.confirmFormService.form.controls['codeRequest'].setValue(this.currentStatus.codeRequest);\n    this.confirmFormService.saveConfirmation(this.confirmFormService.form.value).subscribe( resp => {\n      console.log('confirm form ', resp );\n      const std: Status = Status.fromState( this.currentStatus );\n      std.formId = resp.id;\n      std.status = 'terminado';\n      // console.log('current status ', std);\n      this.store.dispatch(actions.updateStatus({ status: std }));\n      // this.store.dispatch(actions.resetStatus());\n    });\n    // console.log('Valor del form ', this.confirmFormService.form.value.userId);\n  }\n\n  onSubmit() {\n\n  }\n\n}\n","<div class=\"container\" >\n\n    <div class=\"panelLeft\">\n\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n              <div mat-card-avatar class=\"example-header-image\"></div>\n              <mat-card-title>Aprobación de Inicio de proceso</mat-card-title>\n              <mat-card-subtitle>Adqisición de bienes o servicios</mat-card-subtitle>\n            </mat-card-header>\n            \n            <mat-card-content>\n              <p>\n                Los detalles de la solicitud se encuentran en la pestana \"Solicitud\", en este panel se detallan los datos de la solicitud de los bienes y o servicios que se solicita.\n              </p>\n            </mat-card-content>\n            <mat-card-actions>\n              <form [formGroup]=\"confirmFormService.form\"  class=\"normal-form\" (submit)=\"onSubmit()\">\n                <input type=\"hidden\" formControlName=\"id\">\n                \n                \n                \n                <mat-button-toggle-group formControlName=\"refuse\" value=\"refuse\" #group=\"matButtonToggleGroup\" aria-label=\"Confirmación\" (change)=\"onChange(group.value)\">\n                  <mat-button-toggle [value]=\"false\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Aceptar la solicitud\"  >done</mat-icon>\n                    ACEPTAR\n                  </mat-button-toggle>\n                  <mat-button-toggle [value]=\"true\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"No aceptar la Solicitud\">clear</mat-icon> \n                    NO ACEPTAR\n                  </mat-button-toggle>\n                </mat-button-toggle-group>\n\n\n            </form>\n\n            </mat-card-actions>\n          </mat-card>\n\n    </div>\n    <div class=\"panelRight\">\n\n        <!-- <mat-card class=\"example-card\">\n            <mat-card-header>\n              <div mat-card-avatar class=\"example-header-image\"></div>\n              <mat-card-title>Formulario de aprobación</mat-card-title>\n              <mat-card-subtitle>dfasd</mat-card-subtitle>\n            </mat-card-header>\n            <form>\n            <mat-card-content>\n                <mat-form-field appearance=\"fill\" style=\"width: 100%\">\n                    <mat-label>Observaciones</mat-label>\n                    <textarea matInput ></textarea>\n                  </mat-form-field>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-button mat-raised-button  >\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Aceptar la solicitud\">done</mat-icon>\n                    ACEPTAR\n                 </button>\n              <button mat-button mat-raised-button  > \n                  <mat-icon aria-hidden=\"false\" aria-label=\"No aceptar la Solicitud\">clear</mat-icon> \n                  NO ACEPTAR\n              </button>\n              \n            </mat-card-actions>\n            </form>\n\n          </mat-card> -->\n\n    </div>\n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\nimport { routeMap } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n\n  constructor( private authService: AuthService, private router: Router ) {\n    console.log(routeMap);\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      // this.router.navigate(['/login']);\n      console.log('variable next ', next.routeConfig.path);\n      console.log('variable state ', state);\n\n\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { LegalContract } from 'src/app/models/legalContract.model';\nimport { LegalContractService } from 'src/app/services/legalContract/legal-contract.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { DocumentComponent } from '../document/document.component';\nimport { Document } from 'src/app/models/document.model';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Status } from '../../models/status.model';\nimport { User } from '../../models/user';\nimport * as actions from '../../store/actions/status.actions';\nimport { AuthService } from '../../services/auth.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-legal-contract-form',\n  templateUrl: './legal-contract-form.component.html',\n  styleUrls: ['./legal-contract-form.component.scss']\n})\nexport class LegalContractFormComponent implements OnInit {\n\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  public legalContractForm: FormGroup;\n  public legalContract: LegalContract;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document','preview','name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n\n  constructor(\n    public _legalContract: LegalContractService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n\n    this.legalContractForm = this.formBuilder.group({\n          code:[null, Validators.required],\n          description:[null, Validators.required],\n          responsable:[null, Validators.required],\n\n        });\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status.formId != null) {\n          this.getLegalContract( status.formId);\n        } else {\n          this.getLegalContract('new');\n        }\n      }\n    });\n  }\n\n  getLegalContract(id: string){\n\n    if(id === 'new'){\n      return;\n    }\n    this._legalContract.getPCD(id)\n      .subscribe(legalContract => {\n        if ( legalContract ) {\n          const {code, description,responsable} = legalContract;\n          this.legalContract = legalContract;\n          this.documents = legalContract.documents;\n          this.legalContractForm.setValue({code, description,responsable});\n        }\n      })\n  }\n\n  terminate() {\n    if ( this.currentStatus.procedureId ) {\n      const std: Status = Status.fromState( this.currentStatus );\n      if (this.documents.length > 0) {\n            std.userId = this.currentUser.id;\n            std.status = 'terminado';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n          }else {\n              std.status = 'pendiente';\n          }\n    }\n  }\n\n  save() {\n\n    const {code} = this.legalContractForm.value;\n\n    if ( this.legalContract ) {\n      // update\n      const data = {\n        ...this.legalContractForm.value,\n        id: this.legalContract.id\n      }\n      this._legalContract.updateLegalContract( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el Contrato Legal ' + `${ code }`);\n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/legalContracts');\n          } else {\n            this.terminate();\n          }\n        })\n\n    } else {\n      // create\n\n      this._legalContract.createLegalContract( this.legalContractForm.value )\n          .subscribe( (resp: any) => {\n            // console.log('valor de la certificación guardada', resp);\n            if ( this.currentStatus.procedureId ) {\n              const std: Status = Status.fromState( this.currentStatus );\n              std.formId = resp.legalContract.id;\n              std.userId = this.currentUser.id;\n              std.status = 'pendiente';\n              // console.log('current status ', std);\n              this.store.dispatch( actions.updateStatus({ status: std }));\n            }\n            this.getLegalContract(resp.legalContract.id);\n            this.snackService.success('Se ha creado correctamente el Contrato Legal '+ `${code }`);\n\n            // this.router.navigateByUrl(`/legalContract/${ resp.legalContract.id }`)\n        })\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._legalContract.deleteLegalContract( id )\n            .subscribe ( () =>\n            { this._legalContract.getLegalContracts();\n              this.snackService.warn('Se ha borrado correctamente el Contrato Legal ');\n            });\n\n  }\n\n  //document\n  getDocuments(){\n    this._document.getDocuments()\n      .subscribe(documents => this.documents = documents);\n  }\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.legalContract.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n\n      this.getLegalContract(this.legalContract.id);\n      //this.sendEvent();\n\n    });\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getLegalContract(this.legalContract.id);\n      this.terminate();\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src: src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getLegalContract(this.legalContract.id);\n              this.terminate();\n            });\n\n  }\n\n  /* sendEvent() {\n    // console.log('eniva evento');\n    this.eventRefresh.emit(true);\n  } */\n\n  createDocument(){\n\n    const document: Document = {id:'',name:\"Contrato Legal\",type: \"\", formId:this.legalContract.id,src:\"./uploads\", status:\"active\", createDate: new Date()};\n    this._document.createDocument(document)\n      .subscribe(() =>\n      {\n        this._document.getDocuments();\n        this.snackService.success('Se ha creado correctamente el documento ');\n        this.getLegalContract(this.legalContract.id);\n      }\n      )\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getLegalContract(this.legalContract.id);\n                  //this.sendEvent();\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src == \"./uploads\") {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n\n}\n","<div class=\"container\">\n  <div class=\"panelLeft30\" >\n\n    <mat-card>\n      <mat-card-title>Contrato Legal</mat-card-title>\n\n      <mat-card-content>\n        <form [formGroup]=\"legalContractForm\" (submit)=\"save()\">\n          \n          <mat-form-field>\n            <textarea matInput placeholder=\"Codigo\" formControlName=\"code\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <textarea matInput placeholder=\"Responsable\" formControlName=\"responsable\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <textarea matInput placeholder=\"Descripcion\" formControlName=\"description\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n        <div class=\"button-row\">\n          <br>\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!legalContractForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n\n\n  <div class=\"panelRight70\">\n    <mat-card-title>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"createDocument()\"\n        [disabled]=\"!legalContract\"\n      >\n        <mat-icon>add</mat-icon>Documento\n      </button>\n    </mat-card-title>\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Documentos</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"document\">\n            <th mat-header-cell *matHeaderCellDef>Documento</th>\n            <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n              <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef>Ver</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openPreviewDocumentDialog(element.src)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateDocumentDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteDocument(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"sendEvent()\"\n      >\n        <mat-icon>add</mat-icon>Enviar evento\n   </button> -->\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LegalContract } from 'src/app/models/legalContract.model';\nimport { LegalContractService } from 'src/app/services/legalContract/legal-contract.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-legal-contract',\n  templateUrl: './legal-contract.component.html',\n  styleUrls: ['./legal-contract.component.scss']\n})\nexport class LegalContractComponent implements OnInit {\n\n  legalContracts: LegalContract[] = [];\n  displayedColumns: string[] = ['code','description','edit','delete'];\n\n  constructor(\n    public _legalContract: LegalContractService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.getLegalContracts();\n  }\n\n  getLegalContracts(){\n    this._legalContract.getLegalContracts()\n      .subscribe(legalContracts => this.legalContracts = legalContracts);\n  }\n\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/legalContract/edit');\n  }\n\n  delete(id: string){\n    this._legalContract.deleteLegalContract(id)\n      .subscribe(() =>\n      {\n        this.snackService.warn('Se ha borrado correctamente el Contrato Legal ');\n        this.getLegalContracts();\n      })\n  }\n\n}\n","\n<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2> Contratos legales </h2> \n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Contratos legales </a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/legalContract/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nuevo contrato legal\n  </button> -->\n</div>  \n\n<table mat-table [dataSource]=\"legalContracts\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef> Codigo de Todo </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef> Descripcion </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>eliminar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule\n  ]\n})\nexport class AllMaterialModule {}\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Office } from 'src/app/models/office.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { OfficeService } from 'src/app/services/office/office.service';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { PositionComponent } from '../position/position.component';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PositionFormComponent } from '../position/position-form.component';\nimport { PositionService } from 'src/app/services/position/position.service';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-office-form',\n  templateUrl: './office-form.component.html',\n  styleUrls: ['./office-form.component.scss']\n})\nexport class OfficeFormComponent implements OnInit {\n\n  office: Office;\n  public officeForm: FormGroup;\n  companyId: string;\n  positionDialogRef: MatDialogRef<PositionComponent>;\n  //positionFormDialogRef: MatDialogRef<PositionFormComponent>;\n  positions: Position[] = [];\n  displayedColumns: string[] = ['name', 'active','edit', 'delete'];\n  constructor(\n    public _office: OfficeService,\n    private officeFormBuilder: FormBuilder,\n    private dialog: MatDialog,\n    public router: Router,\n    public activatedRoute: ActivatedRoute,\n    public _position: PositionService,\n    public snackService: SnackService,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.activatedRoute.params\n    .subscribe( ({ id }) => this.getOffice( id ) );\n    this.officeForm = this.officeFormBuilder.group({\n      name:[null, Validators.required],\n      companyId:[null],\n      supOfficeId:[null],\n\n\n    });\n\n  }\n\n  getOffice(id: string){\n    if(id==='new'){\n      return;\n    }\n    this._office.getOF(id)\n      .subscribe(office => {\n        if(!office){\n          return this.router.navigateByUrl(`/offices`);\n        }\n        const {name, companyId, supOfficeId} = office;\n        this.office = office;\n        this.positions = office.positions;\n        this.officeForm.setValue({name, companyId, supOfficeId });\n      })\n  }\n\n  save() {\n\n    const {name} = this.officeForm.value;\n    if ( this.office ) {\n      // update\n      const data = {\n        ...this.officeForm.value,\n        id: this.office.id,\n        companyId: this.office.companyId\n      }\n      console.log(data);\n      this._office.updateOffice( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la Unidad ' + `${ name }`);\n        })\n\n    } else {\n      // create\n\n      this._office.createOffice( this.officeForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente la Unidad ' + `${ name }`);\n            this.router.navigateByUrl(`/office/${ resp.office.id }`)\n        })\n    }\n\n\n\n  }\n\n  openViewPositionDialog(){\n    this.positionDialogRef = this.dialog.open(PositionComponent);\n  }\n\n  openAddPositionDialog(){\n    const positionFormDialogRef = this.dialog.open(PositionFormComponent, {\n      data: { officeId: this.office.id,\n              positionId: 'new'\n      }\n    });\n    positionFormDialogRef.afterClosed().subscribe( result => {\n      this.getOffice(this.office.id);\n    });\n  }\n\n  openUpdatePositionDialog(id: string){\n    const positionFormDialogRef = this.dialog.open(PositionFormComponent, {\n      data: { positionId: id}\n    });\n    positionFormDialogRef.afterClosed().subscribe( result => {\n      this.getOffice(this.office.id);\n    });\n\n  }\n\n  getPositions(){\n    this._position.getPositions()\n    .subscribe(positions => this.positions = positions);\n}\n\ndeletePosition( id: string ) {\n\n  this._position.deletePosition( id )\n          .subscribe ( () =>\n          { this.getOffice(this.office.id);\n            this.snackService.warn('Se ha borrado correctamente el cargo ');\n          });\n\n}\n\n}\n","<!--Form Acquisition Request-->\n<div class=\"content\">\n  <mat-card>\n  <mat-card-header>\n    <mat-card-title>Unidad</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form [formGroup]=\"officeForm\" (submit)=\"save()\" >\n      <div class=\"controles-container\">\n    <mat-form-field appearance=\"standard\">\n\n      <input matInput placeholder=\"Nombre\" formControlName=\"name\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n  </div>\n    <div class=\"button-row\">\n    <button mat-raised-button color=\"primary\" type=\"submit\" class=\"button\" [disabled]=\"!officeForm.valid\" >Guardar</button>\n    </div>\n  </form>\n  </mat-card-content>\n  <br>\n\n</mat-card>\n\n<aside *ngIf=\"office\">\n  <mat-card-title>\n    <button mat-raised-button class=\"create\" (click)=\"openAddPositionDialog()\">\n      <mat-icon>add</mat-icon>Cargo\n    </button>\n  </mat-card-title>\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Cargos</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <table mat-table [dataSource]=\"positions\" class=\"mat-elevation-z8\">\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef> Nombre </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"active\">\n          <th mat-header-cell *matHeaderCellDef> Activo </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.active}} </td>\n        </ng-container>\n\n        <!-- Edit Column -->\n        <ng-container matColumnDef=\"edit\">\n          <th mat-header-cell *matHeaderCellDef> editar </th>\n          <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"openUpdatePositionDialog(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n          </button>  </td>\n        </ng-container>\n\n        <!-- Delete Column -->\n        <ng-container matColumnDef=\"delete\">\n          <th mat-header-cell *matHeaderCellDef>eliminar</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button\n              mat-button\n              class=\"btn btn-primary\"\n              color=\"warn\"\n              (click)=\"deletePosition(element.id)\"\n            >\n            <mat-icon>delete_outline</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </mat-card-content>\n  </mat-card>\n</aside>\n\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Office } from 'src/app/models/office.model';\nimport { OfficeService } from 'src/app/services/office/office.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-office',\n  templateUrl: './office.component.html',\n  styleUrls: ['./office.component.scss']\n})\nexport class OfficeComponent implements OnInit {\n\n  offices: Office[] = [];\n  displayedColumns: string[] = ['name', 'companyId', 'supOfficeId','edit', 'delete'];\n\n  constructor(\n    public _office: OfficeService,\n    public snackService: SnackService,\n    //private dialogRef: MatDialogRef<OfficeComponent>,\n  ) { }\n\n  ngOnInit(): void {\n    this.getOffices()\n  }\n\n  getOffices(){\n    this._office.getOffices()\n    .subscribe(offices => this.offices = offices);\n}\n\ndelete( id: string ) {\n\n  this._office.deleteOffice( id )\n          .subscribe ( () =>\n          { this._office.getOffices();\n            this.snackService.warn('Se ha borrado correctamente la Unidad ');\n          });\n\n}\n\n\n\n\n\n}\n","<table mat-table [dataSource]=\"offices\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Nombre </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"companyId\">\n    <th mat-header-cell *matHeaderCellDef> CompanyId </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.companyId}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"supOfficeId\">\n    <th mat-header-cell *matHeaderCellDef> supOfficeId </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.supOfficeId}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button [routerLink]=\"['/office', element.id ]\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>borrar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button\n        mat-button\n        class=\"btn btn-primary\"\n        color=\"warn\"\n        (click)=\"delete(element.id)\"\n      >\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../store/app.reducers';\nimport { resetStatus} from '../store/actions/status.actions';\nimport { routeMap } from '../config/global';\nimport { PositionService } from '../services/position/position.service';\nimport { OfficeService } from '../services/office/office.service';\n\n\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.scss']\n})\nexport class PagesComponent implements OnInit {\n  user: User;\n  routeMap = routeMap;\n  currentOffice = 'NONE';\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private positionService: PositionService,\n              private officeService: OfficeService,\n              private store: Store<AppState>\n              ) { }\n\n  ngOnInit(): void {\n\n    this.user = this.userService.user;\n    // console.log('Usuario actual ', this.user)\n    this.refresh();\n  }\n\n  logout(){\n    this.store.dispatch( resetStatus());\n    this.authService.logout();\n  }\n\n  refresh() {\n    this.user = JSON.parse(this.authService.getUser());\n\n    if (this.user) {\n      this.positionService.getPosition(this.user.positionId).subscribe( myPosition => {\n        this.officeService.getOffice(myPosition.officeId).subscribe( myOffice => {\n          // console.log('mi officina es ', myOffice.name);\n\n          if ( this.user.role === 'ADMIN_ROLE' ) {\n            this.currentOffice = myOffice.name;\n          } else {\n            this.currentOffice = 'NONE';\n          }\n\n        });\n      });\n    }\n\n  }\n}\n","<nav>\n    <mat-toolbar >\n      <mat-toolbar-row>\n        <span>\n          <img src=\"./../../assets/images/logoEA.png\" alt=\"\" width=\"155\" style=\"margin-top: 10px;\" >\n\n        </span>\n\n\n        <span class=\"example-spacer\"></span>\n        <button mat-flat-button color=\"primary\" routerLink=\"/dashboard\" routerLinkActive=\"active\"> <mat-icon>fact_check</mat-icon> Tareas</button>\n        <button mat-button [matMenuTriggerFor]=\"menu\" [matMenuTriggerData]=\"{name: user.name+' '+ user.lastname}\">\n          <mat-icon>account_circle</mat-icon>\n          {{user.name}} {{user.lastname}}\n          <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <ng-template matMenuContent let-name=\"name\">\n            <button mat-menu-item>Perfil de usuario</button>\n            <button mat-menu-item>Cambiar password</button>\n            <button mat-menu-item [routerLink] = \"['/performed']\" >Tareas terminadas</button>\n            <button mat-menu-item (click)=\"logout()\" >Cerar sessión {{name}}</button>\n          </ng-template>\n\n        </mat-menu>\n\n        <!-- <button mat-button >Finanzas</button> -->\n        \n        <button mat-icon-button [matMenuTriggerFor]=\"appMenu\" *ngIf=\"user.role == 'ADMIN_ROLE'\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n\n        <mat-menu #appMenu=\"matMenu\">\n\n          <div *ngFor=\"let menu of routeMap\"  >\n\n            <ng-template  [ngIf]=\"menu.office === currentOffice\">\n              <!-- <mat-list>\n                <mat-list-item>{{menu.office}}</mat-list-item>\n              </mat-list> -->\n              <button *ngFor=\"let submenu of menu.routes\" mat-menu-item [routerLink] = \"['/'+submenu.path]\">{{submenu.title}}</button>\n            </ng-template>\n          </div>\n\n\n           \n          </mat-menu>\n\n\n\n      </mat-toolbar-row>\n\n\n    </mat-toolbar>\n\n  </nav>\n\n  <div class=\"contenedor\" >\n\n\n        <!-- Add Content Here -->\n        <router-outlet></router-outlet>\n\n\n\n  </div>\n\n\n\n  <!-- <footer class=\"footer-distributed\">\n\n    <div class=\"footer-right\">\n\n      <a [routerLink] = \"['/dashboard']\"><i class=\"fa fa-facebook\"></i></a>\n      <a [routerLink] = \"['/dashboard']\"><i class=\"fa fa-twitter\"></i></a>\n      <a [routerLink] = \"['/dashboard']\"><i class=\"fa fa-linkedin\"></i></a>\n      <a [routerLink] = \"['/dashboard']\"><i class=\"fa fa-github\"></i></a>\n\n    </div>\n\n    <div class=\"footer-left\">\n\n      <p class=\"footer-links\">\n        <a class=\"link-1\" [routerLink] = \"['/dashboard']\">Tareas</a>\n\n        <a [routerLink] = \"['/dashboard']\">Nueva Solicitud</a>\n\n        <a [routerLink] = \"['/dashboard']\">Tareas del usuario</a>\n\n\n      </p>\n\n      <p>Ende Andina &copy; 2020</p>\n    </div>\n\n  </footer> -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { SharedModule } from '../shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxExtendedPdfViewerModule } from 'ngx-extended-pdf-viewer';\nimport { AllMaterialModule } from './material/material.module';\n\n\nimport { pagesRoutes } from './pages.routes';\nimport { PagesComponent } from './pages.component';\n\n\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UsersComponent } from './users/users.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptorService } from '../services/token-interceptor.service';\nimport { ModalFileUploadComponent } from '../components/modal-file-upload/modal-file-upload.component';\nimport { FilePreviewComponent } from './file-preview/file-preview.component';\nimport { PipesModule } from '../pipes/pipes.module';\n\nimport { UsersFormComponent } from './users/users-form/users-form.component';\nimport { TechnicalReportComponent } from './technical-report/technical-report.component';\nimport { AcquisitionRequestComponent } from './acquisition-request/acquisition-request.component';\nimport { AcquisitionRequestFormComponent } from './acquisition-request/acquisition-request-form.component';\nimport { TechnicalReportFormComponent } from './technical-report/technical-report-form.component';\nimport { ProductComponent } from './product/product.component';\nimport { AdmConditionComponent } from './adm-condition/adm-condition.component';\nimport { OfficeComponent } from './office/office.component';\nimport { OfficeFormComponent } from './office/office-form.component';\nimport { PositionComponent } from './position/position.component';\nimport { PositionFormComponent } from './position/position-form.component';\nimport { CompanyComponent } from './company/company.component';\nimport { CompanyFormComponent } from './company/company-form.component';\nimport { DocumentComponent } from './document/document.component';\nimport { BudgetCertificationComponent } from './budget-certification/budget-certification.component';\nimport { StatusComponent } from './status/status.component';\nimport { ProcedureComponent } from './procedure/procedure.component';\nimport { BudgetCertificationFormComponent } from './budget-certification/budget-certification-form.component';\nimport { ProcedureFormComponent } from './procedure/procedure-form.component';\nimport { TasksComponent } from './dashboard/tasks/tasks.component';\nimport { WorkComponent } from './dashboard/work/work.component';\nimport { AcquisitionRequestViewComponent } from './acquisition-request/acquisition-request-view.component';\nimport { BudgetCertificationViewComponent } from './budget-certification/budget-certification-view.component';\nimport { TracingComponent } from './dashboard/tracing/tracing.component';\nimport { PursueComponent } from './dashboard/pursue/pursue.component';\nimport { EstatesPipe } from './pipes/estates.pipe';\nimport { ProposalEvaluationsComponent } from './proposal-evaluations/proposal-evaluations.component';\nimport { ProposalProviderComponent } from './proposal-provider/proposal-provider.component';\nimport { ProposalProviderFormComponent } from './proposal-provider/proposal-provider-form.component';\nimport { ProposalEvaluationFormComponent } from './proposal-evaluations/proposal-evaluation-form.component';\nimport { ProposalComparisonComponent } from './proposal-comparison/proposal-comparison.component';\nimport { ProposalComparisonFormComponent } from './proposal-comparison/proposal-comparison-form.component';\nimport { ProcessStartComponent } from './process-start/process-start.component';\nimport { ProcessStartFormComponent } from './process-start/process-start-form.component';\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { PurchaseOrderFormComponent } from './purchase-order/purchase-order-form.component';\nimport { TechnicalEvaluationComponent } from './technical-evaluation/technical-evaluation.component';\nimport { TechnicalEvaluationFormComponent } from './technical-evaluation/technical-evaluation-form.component';\nimport { ConfirmComponent } from './confirm/confirm.component';\nimport { AprobationComponent } from './aprobation/aprobation.component';\nimport { LegalContractComponent } from './legal-contract/legal-contract.component';\nimport { LegalContractFormComponent } from './legal-contract/legal-contract-form.component';\nimport { FirmComponent } from './firm/firm.component';\nimport { PerformedComponent } from './performed/performed.component';\nimport { DetailComponent } from './performed/detail/detail.component';\nimport { TruncateTextPipe } from './pipes/truncate-text.pipe';\nimport { FormatDatePipe } from './pipes/format-date.pipe';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    PagesComponent,\n    DashboardComponent,\n    UsersComponent,\n    UsersFormComponent,\n    ModalFileUploadComponent,\n    FilePreviewComponent,\n    TechnicalReportComponent,\n    AcquisitionRequestComponent,\n    AcquisitionRequestFormComponent,\n    TechnicalReportFormComponent,\n    ProductComponent,\n    AdmConditionComponent,\n    OfficeComponent,\n    OfficeFormComponent,\n    PositionComponent,\n    PositionFormComponent,\n    CompanyComponent,\n    CompanyFormComponent,\n    DocumentComponent,\n    BudgetCertificationComponent,\n    StatusComponent,\n    ProcedureComponent,\n    BudgetCertificationFormComponent,\n    ProcedureFormComponent,\n    TasksComponent,\n    WorkComponent,\n    AcquisitionRequestViewComponent,\n    BudgetCertificationViewComponent,\n    TracingComponent,\n    PursueComponent,\n    EstatesPipe,\n    ProposalEvaluationsComponent,\n    ProposalProviderComponent,\n    ProposalProviderFormComponent,\n    ProposalEvaluationFormComponent,\n    ProposalComparisonComponent,\n    ProposalComparisonFormComponent,\n    ProcessStartComponent,\n    ProcessStartFormComponent,\n    PurchaseOrderComponent,\n    PurchaseOrderFormComponent,\n    TechnicalEvaluationComponent,\n    TechnicalEvaluationFormComponent,\n    ConfirmComponent,\n    AprobationComponent,\n    LegalContractComponent,\n    LegalContractFormComponent,\n    FirmComponent,\n    PerformedComponent,\n    DetailComponent,\n    TruncateTextPipe,\n    FormatDatePipe\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    AllMaterialModule,\n    PipesModule,\n    // SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxExtendedPdfViewerModule,\n    RouterModule.forChild(pagesRoutes)\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    },\n   \n  ],\n  exports: [\n    PagesComponent,\n  ]\n})\nexport class PagesModule { }\n","import { Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UsersComponent } from './users/users.component';\nimport { TechnicalReportComponent } from './technical-report/technical-report.component';\nimport { AcquisitionRequestComponent } from './acquisition-request/acquisition-request.component';\nimport { AcquisitionRequestFormComponent } from './acquisition-request/acquisition-request-form.component';\nimport { TechnicalReportFormComponent } from './technical-report/technical-report-form.component';\nimport { CompanyComponent } from './company/company.component';\nimport { CompanyFormComponent } from './company/company-form.component';\nimport { OfficeComponent } from './office/office.component';\nimport { OfficeFormComponent } from './office/office-form.component';\nimport { ProcedureComponent } from './procedure/procedure.component';\nimport { BudgetCertificationComponent } from './budget-certification/budget-certification.component';\nimport { BudgetCertificationFormComponent } from './budget-certification/budget-certification-form.component';\nimport { ProcedureFormComponent } from './procedure/procedure-form.component';\nimport { StatusComponent } from './status/status.component';\nimport { ProposalEvaluationsComponent } from './proposal-evaluations/proposal-evaluations.component';\nimport { ProposalEvaluationFormComponent } from './proposal-evaluations/proposal-evaluation-form.component';\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { PurchaseOrderFormComponent } from './purchase-order/purchase-order-form.component';\nimport { ProposalComparisonComponent } from './proposal-comparison/proposal-comparison.component';\nimport { ProposalComparisonFormComponent } from './proposal-comparison/proposal-comparison-form.component';\nimport { ProcessStartComponent } from './process-start/process-start.component';\nimport { ProcessStartFormComponent } from './process-start/process-start-form.component';\nimport { TechnicalEvaluationComponent } from './technical-evaluation/technical-evaluation.component';\nimport { TechnicalEvaluationFormComponent } from './technical-evaluation/technical-evaluation-form.component';\nimport { LegalContractComponent } from './legal-contract/legal-contract.component';\nimport { LegalContractFormComponent } from './legal-contract/legal-contract-form.component';\nimport { PerformedComponent } from './performed/performed.component';\nimport { RoleGuard } from './guards/role.guard';\n\n\n\n\nexport const pagesRoutes: Routes = [\n    { path: 'dashboard', component: DashboardComponent, data: {titulo: 'Dashboard'} },\n    { path: 'users', component: UsersComponent, data: {titulo: 'Mantenimiento de usuarios'}  },\n    { path: 'technicalReports', component: TechnicalReportComponent, data: {titulo: 'Informe Tecnico'}  },\n    { path: 'technicalReport/:id', component: TechnicalReportFormComponent, data: {titulo: 'Formulario Informe Tecnico'}  },\n    { path: 'acquisitionRequests', component: AcquisitionRequestComponent, data: {titulo: 'Solicitudes de Adquisicion'}  },\n    { path: 'acquisitionRequest/:id', component: AcquisitionRequestFormComponent, data: {titulo: 'Formulario Solicitud de Adquisicion'}  },\n    { path: 'budgetCertifications', component: BudgetCertificationComponent, data: {titulo: 'Certificacion Presupuestaria'}  },\n    { path: 'budgetCertification/:id', component: BudgetCertificationFormComponent, data: {titulo: 'Formulario Certificacion Presupuestaria'}  },\n    { path: 'companies', component: CompanyComponent, data: {titulo: 'Empresa'}  },\n    { path: 'company/:id', component: CompanyFormComponent, data: {titulo: 'Empresa'}  },\n    { path: 'offices', component: OfficeComponent, canActivate: [RoleGuard], data: {titulo: 'Unidad'}  },\n    { path: 'office/:id', component: OfficeFormComponent, canActivate: [RoleGuard], data: {titulo: 'Formulario Unidad'}  },\n    { path: 'procedures', component: ProcedureComponent, data: {titulo: 'Proceso'}  },\n    { path: 'procedure/:id', component: ProcedureFormComponent, data: {titulo: 'Formulario Proceso'}  },\n    { path: 'status', component: StatusComponent, data: {titulo: 'Estados'}  },\n    { path: 'proposalEvaluations', component: ProposalEvaluationsComponent, data: {titulo: 'Evaluacion Propuesta'}  },\n    { path: 'proposalEvaluation/:id', component: ProposalEvaluationFormComponent, data: {titulo: 'Formulario Evaluacion Propuesta'}  },\n    { path: 'purchaseOrders', component: PurchaseOrderComponent, data: {titulo: 'Orden Compra'}  },\n    { path: 'purchaseOrder/:id', component: PurchaseOrderFormComponent, data: {titulo: 'Formulario Orden Compra'}  },\n    { path: 'proposalComparisons', component: ProposalComparisonComponent, data: {titulo: 'Comparacion Propuesta'}  },\n    { path: 'proposalComparison/:id', component: ProposalComparisonFormComponent, data: {titulo: 'Formulario Comparacion Propuesta'}  },\n    { path: 'processStarts', component: ProcessStartComponent, data: {titulo: 'Inicio Proceso'}  },\n    { path: 'processStart/:id', component: ProcessStartFormComponent, data: {titulo: 'Formulario Inicio Proceso'}  },\n    { path: 'technicalEvaluations', component: TechnicalEvaluationComponent, data: {titulo: 'Evaluacion Tecnica'}  },\n    { path: 'technicalEvaluation/:id', component: TechnicalEvaluationFormComponent, data: {titulo: 'Formulario Evaluacion Tecnica'}  },\n    { path: 'legalContracts', component: LegalContractComponent, data: {titulo: 'Contrato Legal'}  },\n    { path: 'legalContract/:id', component: LegalContractFormComponent, data: {titulo: 'Formulario Contrato Legal'}  },\n    { path: 'performed', component: PerformedComponent, data: {titulo: 'Historial de actividades'}  },\n    { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\n];\n","import { Component, OnInit } from '@angular/core';\nimport { SnackService } from '../../../services/snack.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Product } from '../../../models/product.model';\nimport { AdmCondition } from '../../../models/admCondition.model';\nimport { AcquisitionRequest } from '../../../models/acquisitionRequest.model';\nimport { StatusService } from '../../../services/status/status.service';\nimport { Status } from '../../../models/status.model';\nimport { AcquisitionRequestService } from '../../../services/acquisitionRequest/acquisition-request.service';\nimport { PositionService } from '../../../services/position/position.service';\nimport { OfficeService } from '../../../services/office/office.service';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n\n  displayedProducts: string[] = ['name', 'description', 'quantity', 'price'];\n  displayedAdmConditions: string[] = ['priority', 'type', 'warranty'];\n  acquisitionRequest: AcquisitionRequest;\n  products: Product;\n  admConditions: AdmCondition;\n  status: Status;\n  currentOffice: string;\n  constructor(\n    public snackService: SnackService,\n    private statusService: StatusService,\n    private positionService: PositionService,\n    private officeService: OfficeService,\n    public acquisitionRequestService: AcquisitionRequestService,\n    public dialogRef: MatDialogRef<DetailComponent>\n  ) { }\n\n  ngOnInit(): void {\n    this.status = this.statusService.selectedStatus;\n    console.log('estado seleccionado ', this.status)\n    this.getAcquisitionRequest(this.status.codeRequest);\n    this.getCurrentState(this.status.codeRequest);\n  }\n\n  getAcquisitionRequest(id: string){\n    this.acquisitionRequestService.getACQRequest(id)\n      .subscribe(acquisitionRequest => {\n        if (!acquisitionRequest){\n          return;\n        }\n        this.acquisitionRequest = acquisitionRequest;\n        this.products = acquisitionRequest.products;\n        this.admConditions = acquisitionRequest.admConditions;\n\n      });\n  }\n\n  onClose(){\n    // this.userService.form.reset();\n    // this.userService.initializeFormGroup();\n    this.dialogRef.close();\n  }\n  \n  getCurrentState(codeRequest){\n    this.statusService.getCurrentStatus(codeRequest).subscribe( currentStatus => {\n      console.log('actual estado', currentStatus);\n      this.positionService.getPosition(currentStatus.procedure.positionId).subscribe(position => {\n          this.officeService.getOffice(position.officeId).subscribe(office => {\n            this.currentOffice = office.name;\n          });\n      })\n    });\n    // this._position.getPositions().subscribe(positions => this.positions = positions);\n  }\n}\n","<mat-toolbar>\n    <div class=\"fill-remaining-space\">\n        <span class=\"fill-remaining-space\">Detalle del Proceso</span>\n        <button class=\"btn-dialog-close\" mat-stroked-button (click)=\"onClose()\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n    </div>\n\n  </mat-toolbar>\n\n  <div class=\"container\" >\n\n    <div class=\"panelLeft30\" >\n   \n      <mat-card *ngIf=\"acquisitionRequest\">\n      \n        <div class=\"form\" >\n          <div class=\"formLeft\" >\n  \n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Codigo\"\n                value=\"{{ acquisitionRequest.code }}\"\n              />\n            </mat-form-field>\n      \n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Version\"\n                value=\"{{ acquisitionRequest.version }}\"\n              />\n            </mat-form-field>\n      \n           \n              <mat-form-field>\n                <input\n                  matInput\n                  placeholder=\"Vigencia\"\n                  [matDatepicker]=\"picker1\"\n                  value=\"{{ acquisitionRequest.validity }}\"\n                />\n                <mat-datepicker-toggle\n                  matSuffix\n                  [for]=\"picker1\"\n                ></mat-datepicker-toggle>\n                <mat-datepicker #picker1></mat-datepicker>\n              </mat-form-field>\n  \n          </div>\n          <div class=\"formRight\" >\n  \n  \n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"N de Solicitud\"\n                value=\"{{ acquisitionRequest.numRequest }}\"\n              />\n            </mat-form-field>\n        \n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Fecha de Solicitud\"\n                [matDatepicker]=\"picker\"\n                value=\"{{ acquisitionRequest.requestDate }}\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n    \n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"N de Pac\"\n                value=\"{{ acquisitionRequest.nPac }}\"\n              />\n            </mat-form-field>\n  \n          </div>\n        </div>\n  \n  \n         \n      <div class=\"formCenter\" >\n  \n        <mat-form-field>\n          <input\n            matInput\n            placeholder=\"Lugar\"\n            value=\"{{ acquisitionRequest.place }}\"\n          />\n        </mat-form-field>\n        <mat-form-field>\n          <textarea\n            matInput\n            placeholder=\"¿Para que es necesaria la adquisición del bien o bienes?\"\n            value=\"{{ acquisitionRequest.question1 }}\"\n          ></textarea>\n        </mat-form-field>\n        <br />\n        <mat-form-field>\n          <textarea\n            matInput\n            placeholder=\"¿En que Oficina / Planta / Proyecto se usará el bien o bienes?\"\n            value=\"{{ acquisitionRequest.question2 }}\"\n          ></textarea>\n        </mat-form-field>\n        <br />\n        <mat-form-field>\n          <textarea\n            matInput\n            placeholder=\"¿Quién o quiénes harán uso del bien o bienes?\"\n            value=\"{{ acquisitionRequest.question3 }}\"\n          ></textarea>\n        </mat-form-field>\n    \n  \n      </div>\n  \n    </mat-card>\n  \n    </div>\n  \n  \n  \n    <div class=\"panelRight60\" >\n      <h3>Items</h3>\n      <table mat-table [dataSource]=\"products\" class=\"mat-elevation-z8\">\n        <!--- Note that these columns can be defined in any order.\n      The actual rendered columns are set as a property on the row definition\" -->\n  \n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef>Nombre</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"description\">\n          <th mat-header-cell *matHeaderCellDef>Descripcion</th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element.description }}\n          </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"quantity\">\n          <th mat-header-cell *matHeaderCellDef>Cantidad</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.quantity }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"price\">\n          <th mat-header-cell *matHeaderCellDef>Precio</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.price }}</td>\n        </ng-container>\n  \n        <tr mat-header-row *matHeaderRowDef=\"displayedProducts\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedProducts\"></tr>\n      </table>\n  \n      <br>\n      <h3>Condiciones Administrativas</h3>\n      <table mat-table [dataSource]=\"admConditions\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"priority\">\n          <th mat-header-cell *matHeaderCellDef>Prioridad</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.priority }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"type\">\n          <th mat-header-cell *matHeaderCellDef>Tipo</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"warranty\">\n          <th mat-header-cell *matHeaderCellDef>Garantia</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.warranty }}</td>\n        </ng-container>\n  \n        <tr mat-header-row *matHeaderRowDef=\"displayedAdmConditions\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedAdmConditions\"></tr>\n      </table>\n  \n    </div>\n  \n  </div>\n\n  <mat-toolbar>\n    <div class=\"fill-remaining-space\">\n        <span class=\"fill-remaining-space\">Actualmente le proceso esta en</span>\n       \n    </div>\n\n  </mat-toolbar>\n\n  <table>\n      <thead>\n          <tr>\n            <th>Tarea Actual</th>\n            <th>Oficina Actual</th>\n            <th>Fecha Inicio</th>\n          </tr>\n          \n      </thead>\n      <tbody>\n          <tr>\n            <td>{{status.name}}</td>\n            <td>{{currentOffice}}</td>\n            <td>{{status.dateAt}}</td>\n          </tr>\n           \n      </tbody>\n  </table>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { StatusService } from '../../services/status/status.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Status } from '../../models/status.model';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { IStatus } from '../../interfaces/interfaces';\nimport { DetailComponent } from './detail/detail.component';\n\n@Component({\n  selector: 'app-performed',\n  templateUrl: './performed.component.html',\n  styleUrls: ['./performed.component.scss']\n})\nexport class PerformedComponent implements OnInit {\n\n  listData: MatTableDataSource<any>;\n  displayedColumns: string[] = ['name', 'dateAt', 'status', 'actions'];\n  data: Status [] = [];\n  statuss: Status[] = [];\n  loading = false;\n  error: any;\n  detailComp: DetailComponent;\n\n  page = 0;\n  size = 5;\n\n  // @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  \n  constructor( public dialog: MatDialog, public statusService: StatusService ) { }\n\n  ngOnInit(): void {\n    this.submit();\n  }\n\n  submit() {\n    this.statusService.getStatusByUserId(this.statusService.searchform.value)\n          .subscribe(\n              (data) => {\n                // console.log('Se envio el form', data);\n                this.statuss = data.status;\n                this.data = this.statuss;\n                this.getData({pageIndex: this.page, pageSize: this.size});\n              },\n              (error: HttpErrorResponse) => {\n                console.log(error);\n              }\n          )\n  }\n\n\n// opciones para el paginador\n  getData(obj) {\n    let index = 0,\n    startingIndex = obj.pageIndex * obj.pageSize,\n    endingIndex = startingIndex + obj.pageSize;\n\n    this.data = this.statuss.filter(() => {\n      index++;\n      return (index > startingIndex && index <= endingIndex) ? true : false;\n    });\n  }\n\n  detail( row) {\n    this.statusService.reciveStatus(row);\n    // this.userService.populateForm(row);\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '60%';\n    const dialogRef = this.dialog.open(DetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // this.getUsers();\n    });\n  }\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Histórico de transacciones por fecha</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Transacciones usuario</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nuevo proceso\n  </button> -->\n</div>\n\n<div class=\"contenido\" >\n<h2></h2>\n<div class=\"searchBox\">\n    \n    <form [formGroup]=\"statusService.searchform\" (ngSubmit)=\"submit()\">\n        <input type=\"hidden\" formControlName=\"userId\">\n        \n        <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Desde\"\n              [matDatepicker]=\"startDate\"\n              formControlName=\"startDate\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"startDate\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #startDate></mat-datepicker>\n            <mat-error>La fecha desde no puede ser mayor a la fecha hasta.</mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Hasta\"\n              [matDatepicker]=\"endDate\"\n              formControlName=\"endDate\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"endDate\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #endDate></mat-datepicker>\n            <mat-error>La fecha hasta no puede ser menor a la fecha desde.</mat-error>\n          </mat-form-field>\n    \n          \n            <button mat-raised-button  [disabled] =\"!statusService.searchform.valid\" type=\"submit\"> Buscar</button>\n    </form>\n</div>\n\n</div>\n\n  <table mat-table [dataSource]=\"statuss\" class=\"mat-elevation-z8\"  >\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\" sticky>\n      <th mat-header-cell *matHeaderCellDef> PROCESO </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"dateAt\" sticky>\n      <th mat-header-cell *matHeaderCellDef> Fecha </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.dateAt}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"status\" sticky>\n      <th mat-header-cell *matHeaderCellDef> Estado </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.status}} </td>\n    </ng-container>\n\n    \n\n    \n      <!-- Star Column -->\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef> DETALLES </th>\n      <td mat-cell *matCellDef=\"let row\">\n        \n        <button mat-flat-button color=\"primary\" (click)=\"detail(row)\">Detalles</button>\n        \n      </td>\n    </ng-container>\n\n    \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    \n  </table>\n  <mat-paginator class=\"mat-elevation-z8\" [pageSizeOptions]=\"[5, 10, 25, 100]\" [pageSize]=\"10\" showFirstLastButtons></mat-paginator>","import { Pipe, PipeTransform } from '@angular/core';\nimport { Status } from '../../models/status.model';\nimport { validFilters } from '../../store/actions/statuss.actions';\n\n@Pipe({\n  name: 'estates'\n})\nexport class EstatesPipe implements PipeTransform {\n\n  transform(statuss: Status[], filter: validFilters ): Status[] {\n    // console.log('Estado entrante ', filter);\n    switch ( filter ) {\n      case 'proceso':\n        return statuss.filter( status => status.status === 'proceso');\n      case 'pendiente':\n        return statuss.filter( status => status.status === 'pendiente');\n      case 'terminado':\n        return statuss.filter( status => status.status === 'terminado');\n      default:\n        return statuss;\n    }\n\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatDate'\n})\nexport class FormatDatePipe implements PipeTransform {\n\n  transform(date: string, args: string): any {\n    console.log('fecha ', date)\n    if (!date) { return ''; }\n    if (!args ) { return date; }\n    const months = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'];\n    // console.log('argumento ', args);\n    const date1 = new Date(date);\n    let result;\n\n    if ( args === 'day' ) {\n      result = date1.getDate();\n    } else if ( args === 'month' ) {\n      result = months[date1.getMonth()];\n    } else {\n      result = date1.getFullYear();\n    }\n\n    return result;\n\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncateText'\n})\nexport class TruncateTextPipe implements PipeTransform {\n  transform(value: string, length: number): string {\n    // https://en.wikipedia.org/wiki/Longest_word_in_English\n    const biggestWord = 50;\n    const elipses = '...';\n\n\n    if (typeof value === 'undefined') { return value; }\n    if (value.length <= length) { return value; }\n\n    // .. truncate to about correct lenght\n    let truncatedText = value.slice(0, length + biggestWord);\n\n    // .. now nibble ends till correct length\n    while (truncatedText.length > length - elipses.length) {\n        const lastSpace = truncatedText.lastIndexOf(' ');\n\n        if (lastSpace === -1) { break; }\n\n        truncatedText = truncatedText.slice(0, lastSpace).replace(/[!,.?]$/, '');\n\n    }\n\n   //  console.log((truncatedText + elipses).length);\n\n    return truncatedText + elipses;\n }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Position } from 'src/app/models/position.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { PositionService } from 'src/app/services/position/position.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SnackService } from 'src/app/services/snack.service';\n\n\n@Component({\n  selector: 'app-position-form',\n  templateUrl: './position-form.component.html',\n  styleUrls: ['./position-form.component.scss']\n})\nexport class PositionFormComponent implements OnInit {\n\n  position: Position;\n  public positionForm: FormGroup;\n  officeId: string;\n  positionId: string;\n  constructor(\n    public _position: PositionService,\n    private positionFormBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<PositionFormComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: PositionFormComponent,\n    public snackService: SnackService,\n  ) { }\n\n  ngOnInit(): void {\n    if(this.data.positionId !== 'new'){\n      this.getPosition(this.data.positionId);\n    }\n\n    this.positionForm = this.positionFormBuilder.group({\n      name:[null, Validators.required],\n      officeId:[this.data.officeId],\n      active:[null, Validators.required],\n\n    });\n  }\n  getPosition(id: string){\n    this._position.getPosition(id)\n      .subscribe(position => {\n        if(!position){\n          this.onCloseDialog();\n        }\n        const {name, officeId, active} = position;\n        this.position = position;\n        this.positionForm.setValue({name, officeId, active });\n      })\n  }\n  onCloseDialog(){\n    this.dialogRef.close();\n  }\n\n  save() {\n\n    const {name} = this.positionForm.value;\n    if ( this.position ) {\n      // update\n      const data = {\n        ...this.positionForm.value,\n        id: this.position.id,\n        officeId: this.position.officeId\n      }\n\n      this._position.updatePosition( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el cargo ' + `${ name }`);\n          this.onCloseDialog();\n        })\n\n    } else {\n      // create\n\n      this._position.createPosition( this.positionForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente el cargo '+ `${name }`);\n            this.onCloseDialog();\n        })\n    }\n\n\n\n  }\n\n\n}\n","<mat-toolbar>\n  <div class=\"fill-remaining-space\">\n    <span class=\"fill-remaining-space\">Cargo</span>\n  </div>\n</mat-toolbar>\n\n<form [formGroup]=\"positionForm\" (submit)=\"save()\">\n  <div class=\"controles-container\">\n  <mat-form-field>\n    <input matInput placeholder=\"Nombre\" formControlName=\"name\" />\n    <mat-error>Este campo es obligatorio.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-select formControlName=\"active\" placeholder=\"Activo\">\n\n\n        <mat-option value=\"true\">Si</mat-option>\n        <mat-option value=\"false\">No</mat-option>\n\n    </mat-select>\n    <mat-error>Este campo es obligatorio.</mat-error>\n  </mat-form-field>\n  </div>\n  <div class=\"button-row\">\n  <button\n    mat-raised-button\n    color=\"primary\"\n    type=\"submit\"\n    class=\"button\"\n    [disabled]=\"!positionForm.valid\"\n  >\n    Guardar\n  </button>\n  <button mat-button mat-dialog-close>Cerrar</button>\n  </div>\n  </form>\n","import { Component, OnInit } from '@angular/core';\nimport { Position } from 'src/app/models/position.model';\nimport { PositionService } from 'src/app/services/position/position.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-position',\n  templateUrl: './position.component.html',\n  styleUrls: ['./position.component.scss']\n})\nexport class PositionComponent implements OnInit {\n\n  positions: Position[] = [];\n  displayedColumns: string[] = ['name', 'officeId', 'active','edit'];\n\n  constructor(\n    public _position: PositionService,\n    private dialogRef: MatDialogRef<PositionComponent>\n  ) { }\n\n  ngOnInit(): void {\n    this.getPositions();\n  }\n\n  getPositions(){\n    this._position.getPositions()\n    .subscribe(positions => this.positions = positions);\n}\n\nonCloseDialog(){\n\n  this.dialogRef.close();\n}\n\n}\n","<table mat-table [dataSource]=\"positions\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"officeId\">\n    <th mat-header-cell *matHeaderCellDef> OfficeId </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.officeId}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"active\">\n    <th mat-header-cell *matHeaderCellDef> Active </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.active}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> edit </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button [routerLink]=\"['/acquisitionRequest', element.id ]\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Procedure } from 'src/app/models/procedure.model';\nimport { ProcedureService } from 'src/app/services/procedure/procedure.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PositionService } from 'src/app/services/position/position.service';\nimport { Position } from 'src/app/models/position.model';\n\n@Component({\n  selector: 'app-procedure-form',\n  templateUrl: './procedure-form.component.html',\n  styleUrls: ['./procedure-form.component.scss']\n})\nexport class ProcedureFormComponent implements OnInit {\n\n  public procedureForm:FormGroup;\n  public procedure: Procedure;\n  public positions: Position [] = [];\n  constructor(\n    public _procedure: ProcedureService,\n    public _position: PositionService,\n    public router: Router,\n    public activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    public snackService: SnackService,\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params\n        .subscribe( ({ id }) => this.getProcedure( id ) );\n\n    this.procedureForm = this.formBuilder.group({\n          positionId:[null, Validators.required],\n          procedureName:[null, Validators.required],\n          order:[null, Validators.required],\n\n        });\n    this.getPositions();\n  }\n\n  getProcedure(id: string){\n\n    if(id === 'new'){\n      return;\n    }\n    this._procedure.getProcedure(id)\n      .subscribe(procedure => {\n        if ( !procedure ) {\n          return this.router.navigateByUrl(`/procedures`);\n        }\n        const {positionId, procedureName, order} = procedure;\n        this.procedure = procedure;\n        this.procedureForm.setValue({positionId, procedureName, order });\n      })\n  }\n\n  save() {\n\n    const {procedureName} = this.procedureForm.value;\n\n    if ( this.procedure ) {\n      // update\n      const data = {\n        ...this.procedureForm.value,\n        id: this.procedure.id\n      }\n      this._procedure.updateProcedure( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el Proceso ' + `${ procedureName }`);\n        })\n\n    } else {\n      // create\n\n      this._procedure.createProcedure( this.procedureForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente el Proceso '+ `${procedureName }`);\n            this.router.navigateByUrl(`/procedure/${ resp.procedure.id }`)\n        })\n    }\n\n\n\n  }\n\n  getPositions(){\n    this._position.getPositions().subscribe(positions => this.positions = positions);\n  }\n\n}\n","<div class=\"content\">\n  <mat-card>\n    <mat-card-title>Proceso</mat-card-title>\n\n    <mat-card-content>\n      <form [formGroup]=\"procedureForm\" (submit)=\"save()\">\n        <div class=\"textarea-container\">\n          <mat-form-field>\n            <mat-select formControlName=\"positionId\" placeholder=\"Cargo\">\n              <mat-option>None</mat-option>\n              <ng-container *ngFor=\"let position of positions\">\n                <mat-option value=\"{{position.id}}\">{{position.name}}</mat-option>\n              </ng-container>\n            </mat-select>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n        <mat-form-field>\n          <textarea matInput placeholder=\"Nombre del Proceso\" formControlName=\"procedureName\"></textarea>\n          <mat-error>\n            El campo es requerido.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <textarea matInput placeholder=\"Order\" formControlName=\"order\"></textarea>\n          <mat-error>\n            El campo es requerido.\n          </mat-error>\n        </mat-form-field>\n\n\n      </div>\n      <div class=\"button-row\">\n        <button\n          mat-raised-button\n          color=\"primary\"\n          type=\"submit\"\n          class=\"button\"\n          [disabled]=\"!procedureForm.valid\"\n        >\n          Guardar\n        </button>\n      </div>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Procedure } from 'src/app/models/procedure.model';\nimport { ProcedureService } from 'src/app/services/procedure/procedure.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { PositionService } from 'src/app/services/position/position.service';\nimport { Position } from 'src/app/models/position.model';\n\n@Component({\n  selector: 'app-procedure',\n  templateUrl: './procedure.component.html',\n  styleUrls: ['./procedure.component.scss']\n})\nexport class ProcedureComponent implements OnInit {\n\n  procedures: Procedure [] = [];\n  displayedColumns: string[] = ['positionId', 'procedureName', 'order', 'edit', 'delete'];\n  positions: Position [] = [];\n  position: Position;\n  name: string;\n\n  constructor(\n    public _procedure: ProcedureService,\n    public snackService: SnackService,\n    public _position: PositionService,\n  ) { }\n\n\n  ngOnInit(): void {\n    this.getProcedures();\n    this.getPositions();\n  }\n  getProcedures(){\n    this._procedure.getProcedures()\n      .subscribe(procedures => this.procedures = procedures);\n  }\n\n  delete( id: string ) {\n\n    this._procedure.deleteProcedure( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente el Proceso ');\n              this.getProcedures();\n            });\n\n  }\n  getPositions(){\n    this._position.getPositions()\n      .subscribe(positions => this.positions = positions);\n  }\n\n  getNamePosition(id: string){\n    return this.position = this.positions.find(p => p.id === id);\n\n  }\n\n  namePosition(id: string){\n    console.log('procedimiento ', this.getNamePosition(id));\n    this.name = this.getNamePosition(id).name;\n  }\n\n}\n","<table mat-table [dataSource]=\"procedures\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"positionId\">\n    <th mat-header-cell *matHeaderCellDef> Cargo </th>\n    <!-- {{namePosition(element.positionId)}}{{name}}   -->\n    <td mat-cell *matCellDef=\"let element\"> {{element.positionId}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"procedureName\">\n    <th mat-header-cell *matHeaderCellDef> Nombre Proceso </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.procedureName}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"order\">\n    <th mat-header-cell *matHeaderCellDef> Orden </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.order}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button [routerLink]=\"['/procedure', element.id ]\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>borrar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, FormControl } from '@angular/forms';\nimport { ProcessStart } from 'src/app/models/processStart.model';\nimport { ProcessStartService } from 'src/app/services/processStart/process-start.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { Document } from 'src/app/models/document.model';\nimport { DocumentComponent } from '../document/document.component';\nimport { AuthService } from '../../services/auth.service';\nimport * as actions from '../../store/actions/status.actions';\nimport { Status } from '../../models/status.model';\nimport { User } from '../../models/user';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-process-start-form',\n  templateUrl: './process-start-form.component.html',\n  styleUrls: ['./process-start-form.component.scss']\n})\nexport class ProcessStartFormComponent implements OnInit {\n\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  public processStartForm: FormGroup;\n  public processStart: ProcessStart;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document','preview','name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n  error:any={isError:false,errorMessage:''};\n\n  constructor(\n    public _processStart: ProcessStartService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    this.processStartForm = this.formBuilder.group({\n      category:[null, Validators.required],\n      startDate:[null, Validators.required],\n      endDate:[null, [Validators.required]],\n\n    }, {validator: this.MustMatch( 'startDate', 'endDate')} );\n\n    this.store.select('status').subscribe(({ status }) => {\n          if (status != null) {\n            // console.log('el estado actual es ', status);\n            this.currentStatus = status;\n            if ( status.formId != null) {\n              this.getProcessStart( status.formId);\n            } else {\n              this.getProcessStart( 'new');\n            }\n          }\n        });\n\n  }\n\n\n\n  getProcessStart(id: string){\n\n    if (id === 'new'){\n      return;\n    }\n    this._processStart.getPSD(id)\n      .subscribe(processStart => {\n\n        if ( processStart ){\n        const {category, startDate, endDate} = processStart;\n        this.processStart = processStart;\n        this.documents = processStart.documents;\n        this.processStartForm.setValue({category, startDate, endDate});\n        }\n      });\n  }\n\n  terminate() {\n    if (this.currentStatus.procedureId) {\n        const std: Status = Status.fromState( this.currentStatus );\n        if (this.documents.length > 0) {\n              std.userId = this.currentUser.id;\n              std.status = 'terminado';\n              // console.log('current status ', std);\n              this.store.dispatch( actions.updateStatus({ status: std }));\n            }else {\n                std.status = 'pendiente';\n            }\n    }\n  }\n\n  save() {\n\n    const {category} = this.processStartForm.value;\n\n    if ( this.processStart ) {\n      // update\n      const data = {\n        ...this.processStartForm.value,\n        id: this.processStart.id\n      };\n      this._processStart.updateProcessStart( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el Inicio de Proceso ' + `${ category }`);\n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/processStarts');\n          } else {\n            this.terminate();\n          }\n        });\n\n    } else {\n      // create\n\n      this._processStart.createProcessStart( this.processStartForm.value )\n          .subscribe( (resp: any) => {\n            if (this.currentStatus.procedureId) {\n                const std: Status = Status.fromState( this.currentStatus );\n                std.formId = resp.processStart.id;\n                std.userId = this.currentUser.id;\n                std.status = 'pendiente';\n                // console.log('current status ', std);\n                this.store.dispatch( actions.updateStatus({ status: std }));\n            }\n            this.getProcessStart(resp.processStart.id);\n            this.snackService.success('Se ha creado correctamente el Inicio de Proceso ' + `${category }`);\n\n            // this.router.navigateByUrl(`/processStart/${ resp.processStart.id }`)\n        });\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._processStart.deleteProcessStart( id )\n            .subscribe ( () =>\n            { this._processStart.getProcessStarts();\n              this.snackService.warn('Se ha borrado correctamente el Inicio de Proceso ');\n            });\n\n  }\n\n\nMustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n          // return if another validator has already found an error on the matchingControl\n          return;\n      }\n\n      // set error on matchingControl if validation fails\n      if (control.value > matchingControl.value) {\n          matchingControl.setErrors({ mustMatch: true });\n      } else {\n          matchingControl.setErrors(null);\n      }\n  }\n}\n\n// compareTwoDates(){\n//    if(new Date(this.processStartForm.controls['endDate'].value)<new Date(this.processStartForm.controls['startDate'].value)){\n//       return null;\n//    }\n//    else{\n//      return true;\n//    }\n// }\n\n  //document\n  getDocuments(){\n    this._document.getDocuments()\n      .subscribe(documents => this.documents = documents);\n  }\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.processStart.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n\n      this.getProcessStart(this.processStart.id);\n      // this.sendEvent();\n\n    });\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getProcessStart(this.processStart.id);\n      console.log('Documentos cargados', this.documents);\n      this.terminate();\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src: src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getProcessStart(this.processStart.id);\n              console.log('Documentos cargados', this.documents);\n              this.terminate();\n            });\n\n  }\n\n  /* sendEvent() {\n    // console.log('eniva evento');\n    this.eventRefresh.emit(true);\n  } */\n\n  createDocument(){\n    const document: Document = {id:'',name:\"Inicio Proceso\",type: \"\", formId:this.processStart.id,src:\"./uploads\", status: \"active\", createDate: new Date()};\n    this._document.createDocument(document)\n      .subscribe(() =>\n      {\n        this._document.getDocuments();\n        this.snackService.success('Se ha creado correctamente el documento ');\n        this.getProcessStart(this.processStart.id);\n\n      }\n      );\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getProcessStart(this.processStart.id);\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src == \"./uploads\") {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n}\n","\n<div class=\"formHeader\" >\n  <div class=\"title\" >\n  <h2>Inicio de proceso</h2>\n  <h3><strong>Solicitud: </strong>Compra de material del seguridad industrial</h3>\n</div>\n</div>\n\n<div class=\"container\">\n \n  <div class=\"panelLeft30\" >\n\n    <mat-card>\n      <!-- <mat-card-title>Inicio Proceso</mat-card-title> -->\n     \n      <mat-card-content>\n        \n        <form [formGroup]=\"processStartForm\" (submit)=\"save()\" style=\"margin: 30px 0 0 0;\">\n\n          <mat-form-field>\n            <mat-select formControlName=\"category\" placeholder=\"Categoria\" width=\"100%\">\n              <mat-option value=\"categoria 1\" >Categoria 1</mat-option>\n              <mat-option value=\"categoria 1\" >Categoria 2</mat-option>\n            </mat-select>\n            <mat-error>\n              Este campo es obligatorio.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Fecha Inicio\"\n              [matDatepicker]=\"picker1\"\n              formControlName=\"startDate\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"picker1\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker1></mat-datepicker>\n            <mat-error> Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Fecha Final\"\n              [matDatepicker]=\"picker\"\n              formControlName=\"endDate\"\n\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error>Este campo es obligatorio y no puede ser menor a la fecha de inicio. </mat-error>\n          </mat-form-field>\n\n\n        <div class=\"button-row\">\n          <br>\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!processStartForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n\n\n  <div class=\"panelRight70\">\n    <mat-card-title>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"createDocument()\"\n        [disabled]=\"!processStart\"\n      >\n        <mat-icon>add</mat-icon>Documento\n      </button>\n    </mat-card-title>\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Documentos</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"document\">\n            <th mat-header-cell *matHeaderCellDef>Documento</th>\n            <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n              <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef>Ver</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openPreviewDocumentDialog(element.src)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateDocumentDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteDocument(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"sendEvent()\"\n      >\n        <mat-icon>add</mat-icon>Enviar evento\n   </button> -->\n\n\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ProcessStart } from 'src/app/models/processStart.model';\nimport { ProcessStartService } from 'src/app/services/processStart/process-start.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n\n@Component({\n  selector: 'app-process-start',\n  templateUrl: './process-start.component.html',\n  styleUrls: ['./process-start.component.scss']\n})\nexport class ProcessStartComponent implements OnInit {\n\n  processStarts: ProcessStart[] = [];\n  displayedColumns: string[] = ['category','startDate', 'endDate','edit','delete'];\n\n  constructor(\n    public _processStart: ProcessStartService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.getProcessStarts();\n  }\n\n  getProcessStarts(){\n    this._processStart.getProcessStarts()\n      .subscribe(processStarts => this.processStarts = processStarts);\n  }\n\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/processStart/edit');\n  }\n\n  delete(id: string){\n    this._processStart.deleteProcessStart(id)\n      .subscribe(() =>\n      {\n        this.snackService.warn('Se ha borrado correctamente la Orden de Compra ');\n        this.getProcessStarts();\n      })\n  }\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Inicios de proceso</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Inicios de proceso</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/processStart/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva inicio de proceso\n  </button> -->\n</div>  \n\n<table mat-table [dataSource]=\"processStarts\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"category\">\n    <th mat-header-cell *matHeaderCellDef> Categoria </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.category}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"startDate\">\n    <th mat-header-cell *matHeaderCellDef> Fecha Inicio </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.startDate}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"endDate\">\n    <th mat-header-cell *matHeaderCellDef> Fecha Final </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.endDate}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>eliminar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Product } from 'src/app/models/product.model';\nimport { ProductService } from 'src/app/services/product/product.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n\n  product: Product;// = new Product(\"\",\"\",\"\",\"\",null,\"\");\n  public productForm: FormGroup;\n  requestId: string;\n  productId: string;\n  constructor(\n    public _product: ProductService,\n    public router: Router,\n    public activatedRoute: ActivatedRoute,\n    private dialogRef: MatDialogRef<ProductComponent>,\n    private productFormBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: ProductComponent,\n    public snackService: SnackService,\n\n  ) {  }\n\n  ngOnInit(): void {\n    if(this.data.productId !== 'new'){\n      this.getProduct(this.data.productId);\n    }\n\n    this.productForm = this.productFormBuilder.group({\n      name:[null, Validators.required],\n      description:[null, Validators.required],\n      quantity:[null, Validators.required],\n      price:[null, [Validators.required, Validators.pattern(/^(0|[1-9]\\d*)(\\.\\d+)?$/)]],\n      requestId:[this.data.requestId],\n\n    });\n  }\n  getProduct(id: string){\n    this._product.getProduct(id)\n      .subscribe(product => {\n        if(!product){\n          this.onCloseDialog();\n        }\n        const {name, description, quantity, price, requestId} = product;\n        this.product = product;\n        this.productForm.setValue({name, description, quantity, price, requestId });\n      })\n  }\n  onCloseDialog(){\n\n    this.dialogRef.close();\n  }\n  save() {\n\n    const {name} = this.productForm.value;\n    if ( this.product ) {\n      // update\n      const data = {\n        ...this.productForm.value,\n        id: this.product.id,\n        requestId: this.product.requestId\n      }\n      console.log(data);\n      this._product.updateProduct( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el Item ' + `${ name }`);\n          this.onCloseDialog();\n        })\n\n    } else {\n      // create\n\n      this._product.createProduct( this.productForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente el Item '+ `${name }`);\n            this.onCloseDialog();\n        })\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._product.deleteProduct( id )\n            .subscribe ( () =>\n            { this._product.getProducts();\n              this.snackService.warn('Se ha eliminado correctamente el Item ');\n            });\n\n  }\n\n\n\n}\n","<!--Form Acquisition Request-->\n\n<mat-toolbar>\n  <div class=\"fill-remaining-space\">\n    <span class=\"fill-remaining-space\">Item</span>\n  </div>\n</mat-toolbar>\n\n<form [formGroup]=\"productForm\" (submit)=\"save()\">\n  <mat-grid-list cols=\"2\" rowHeight=\"1:1\">\n\n  <div class=\"controles-container\">\n    <mat-form-field>\n      <input matInput placeholder=\"Nombre\" formControlName=\"name\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput placeholder=\"Descripcion\" formControlName=\"description\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n  </div>\n\n  <div class=\"controles-container\">\n    <mat-form-field>\n      <input matInput placeholder=\"Cantidad\" formControlName=\"quantity\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput type=\"number\" placeholder=\"Price\" formControlName=\"price\" />\n      <mat-error>Este campo es obligatorio, debe ser un numero.</mat-error>\n    </mat-form-field>\n  </div>\n\n    <div class=\"button-row\">\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        class=\"button\"\n        [disabled]=\"!productForm.valid\"\n      >\n        Guardar\n      </button>\n      <button mat-button mat-dialog-close>Cerrar</button>\n    </div>\n\n\n</mat-grid-list>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProposalComparison } from 'src/app/models/proposalComparison.model';\nimport { ProposalComparisonService } from 'src/app/services/proposalComparison/proposal-comparison.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { DocumentComponent } from '../document/document.component';\nimport { Document } from 'src/app/models/document.model';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Status } from '../../models/status.model';\nimport * as actions from '../../store/actions/status.actions';\nimport { User } from '../../models/user';\nimport { AuthService } from '../../services/auth.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-proposal-comparison-form',\n  templateUrl: './proposal-comparison-form.component.html',\n  styleUrls: ['./proposal-comparison-form.component.scss']\n})\nexport class ProposalComparisonFormComponent implements OnInit {\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n  public proposalComparisonForm: FormGroup;\n  public proposalComparison: ProposalComparison;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document', 'preview', 'name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n\n  constructor(\n    public _proposalComparison: ProposalComparisonService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    this.proposalComparisonForm = this.formBuilder.group({\n          code: [null, Validators.required],\n          description: [null],\n          provider: [null, Validators.required],\n\n        });\n    this.store.select('status').subscribe(({ status }) => {\n          if (status != null) {\n            // console.log('el estado actual es ', status);\n            this.currentStatus = status;\n            if ( status.formId != null) {\n              this.getProposalComparison( status.formId);\n            } else {\n              this.getProposalComparison( 'new');\n            }\n          }\n        });\n  }\n\n  getProposalComparison(id: string){\n\n    if (id === 'new'){\n      return;\n    }\n    this._proposalComparison.getPCD(id)\n      .subscribe(proposalComparison => {\n\n        if ( proposalComparison ) {\n          const {code, description,provider} = proposalComparison;\n          this.proposalComparison = proposalComparison;\n          this.documents = proposalComparison.documents;\n          this.proposalComparisonForm.setValue({code, description,provider});\n        }\n      });\n  }\n\n  terminate() {\n    if (this.currentStatus.procedureId) {\n      const std: Status = Status.fromState( this.currentStatus );\n      if (this.documents.length > 0) {\n            std.userId = this.currentUser.id;\n            std.status = 'terminado';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n          }else {\n              std.status = 'pendiente';\n          }\n    }\n  }\n\n  save() {\n\n    const {code} = this.proposalComparisonForm.value;\n\n    if ( this.proposalComparison ) {\n      // update\n      const data = {\n        ...this.proposalComparisonForm.value,\n        id: this.proposalComparison.id\n      };\n      this._proposalComparison.updateProposalComparison( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la Comparacion Propuesta ' + `${ code }`);\n          \n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/proposalComparisons');\n          } else {\n            this.terminate();\n          }\n        });\n\n    } else {\n      // create\n\n      this._proposalComparison.createProposalComparison( this.proposalComparisonForm.value )\n          .subscribe( (resp: any) => {\n            // console.log('valor de la certificación guardada', resp);\n            if (this.currentStatus.procedureId) {\n              const std: Status = Status.fromState( this.currentStatus );\n              std.formId = resp.proposalComparison.id;\n              std.userId = this.currentUser.id;\n              std.status = 'pendiente';\n              // console.log('current status ', std);\n              this.store.dispatch( actions.updateStatus({ status: std }));\n            }\n\n            this.getProposalComparison(resp.proposalComparison.id);\n            this.snackService.success('Se ha creado correctamente la Comparacion Propuesta ' + `${code }`);\n\n            // this.router.navigateByUrl(`/proposalComparison/${ resp.proposalComparison.id }`)\n        });\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._proposalComparison.deleteProposalComparison( id )\n            .subscribe ( () =>\n            { this._proposalComparison.getProposalComparisons();\n              this.snackService.warn('Se ha borrado correctamente la Comparacion Propuesta ');\n            });\n\n  }\n\n  // document\n  getDocuments(){\n    this._document.getDocuments()\n      .subscribe(documents => this.documents = documents);\n  }\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.proposalComparison.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n\n      this.getProposalComparison(this.proposalComparison.id);\n      // this.sendEvent();\n    });\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getProposalComparison(this.proposalComparison.id);\n      this.terminate();\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getProposalComparison(this.proposalComparison.id);\n              this.terminate();\n            });\n\n  }\n\n  /* sendEvent() {\n    // console.log('eniva evento');\n    this.eventRefresh.emit(true);\n  } */\n\n  createDocument(){\n    const document: Document = {id:'',name:\"Comparacion Propuesta\",type: \"\", formId:this.proposalComparison.id,src:\"./uploads\", status:\"active\", createDate: new Date()};\n    this._document.createDocument(document)\n      .subscribe(() =>\n      {\n        this._document.getDocuments();\n        this.snackService.success('Se ha creado correctamente el documento ');\n        this.getProposalComparison(this.proposalComparison.id);\n      }\n      );\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getProposalComparison(this.proposalComparison.id);\n                  // this.sendEvent();\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src === './uploads') {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n\n}\n","<div class=\"container\">\n  <div class=\"panelLeft30\" >\n\n    <mat-card>\n      <mat-card-title>Tabla Comparativa</mat-card-title>\n\n      <mat-card-content>\n        <form [formGroup]=\"proposalComparisonForm\" (submit)=\"save()\">\n          \n          <mat-form-field>\n            <textarea matInput placeholder=\"Codigo\" formControlName=\"code\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n        \n          <mat-form-field>\n            <textarea matInput placeholder=\"Proveedor Ganador\" formControlName=\"provider\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <textarea matInput placeholder=\"Observacion\" formControlName=\"description\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n       \n\n        <div class=\"button-row\">\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!proposalComparisonForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n\n\n  <div class=\"panelRight70\">\n    <mat-card-title>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"createDocument()\"\n        [disabled]=\"!proposalComparison\"\n      >\n        <mat-icon>add</mat-icon>Documento\n      </button>\n    </mat-card-title>\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Documentos</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"document\">\n            <th mat-header-cell *matHeaderCellDef>Documento</th>\n            <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n              <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef>Ver</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openPreviewDocumentDialog(element.src)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateDocumentDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteDocument(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"sendEvent()\"\n      >\n        <mat-icon>add</mat-icon>Enviar evento\n   </button> -->\n\n\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ProposalComparison } from 'src/app/models/proposalComparison.model';\nimport { ProposalComparisonService } from 'src/app/services/proposalComparison/proposal-comparison.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-proposal-comparison',\n  templateUrl: './proposal-comparison.component.html',\n  styleUrls: ['./proposal-comparison.component.scss']\n})\nexport class ProposalComparisonComponent implements OnInit {\n\n  proposalComparisons: ProposalComparison[] = [];\n  displayedColumns: string[] = ['code','description','edit','delete'];\n\n  constructor(\n    public _proposalComparison: ProposalComparisonService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.getProposalComparisons();\n  }\n\n  getProposalComparisons(){\n    this._proposalComparison.getProposalComparisons()\n      .subscribe(proposalComparisons => this.proposalComparisons = proposalComparisons);\n  }\n\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/proposalComparison/edit');\n  }\n\n  delete(id: string){\n    this._proposalComparison.deleteProposalComparison(id)\n      .subscribe(() =>\n      {\n        this.snackService.warn('Se ha borrado correctamente la Propuesta Comparacion ');\n        this.getProposalComparisons();\n      })\n  }\n\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Comparaciones de propuestas</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Comparaciones de propuestas</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/proposalComparison/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva comparación de propuesta\n  </button> -->\n</div>  \n\n<table mat-table [dataSource]=\"proposalComparisons\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef> Codigo de Todo </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef> Descripcion </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>eliminar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ProposalEvaluation } from 'src/app/models/proposalEvaluation.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProposalProvider } from 'src/app/models/proposalProvider.model';\nimport { ProposalProviderService } from 'src/app/services/proposalProvider/proposal-provider.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProposalEvaluationService } from 'src/app/services/proposalEvaluation/proposal-evaluation.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DocumentComponent } from '../document/document.component';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Status } from '../../models/status.model';\nimport * as actions from '../../store/actions/status.actions';\nimport { User } from '../../models/user';\nimport { AuthService } from '../../services/auth.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\n\n@Component({\n  selector: 'app-proposal-evaluation-form',\n  templateUrl: './proposal-evaluation-form.component.html',\n  styleUrls: ['./proposal-evaluation-form.component.scss']\n})\nexport class ProposalEvaluationFormComponent implements OnInit {\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n  public proposalEvaluationForm: FormGroup;\n  public proposalEvaluation: ProposalEvaluation;\n  proposalProviders: ProposalProvider [] = [];\n  displayedProposalProviders: string[] = ['name', 'nit', 'edit', 'delete'];\n\n  iconFile = '../assets/images/icon/add-file.png';\n\n  constructor(\n   public _proposalProvider: ProposalProviderService,\n   private authService: AuthService,\n   private formBuilder: FormBuilder,\n   private router: Router,\n   private dialog: MatDialog,\n   public _proposalEvaluation: ProposalEvaluationService,\n   public snackService: SnackService,\n   public modalFileUploadService: ModalFileUploadService,\n   private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n\n  this.currentUser =  JSON.parse(this.authService.getUser());\n  this.proposalEvaluationForm = this.formBuilder.group({\n    code: [null, Validators.required],\n\n  });\n\n  this.store.select('status').subscribe(({ status }) => {\n    if (status != null) {\n      // console.log('el estado actual es ', status);\n      this.currentStatus = status;\n      if ( status.formId != null) {\n        this.getProposalEvaluation( status.formId);\n      } else {\n        this.getProposalEvaluation( 'new');\n      }\n    }\n  });\n\n\n}\n\ngetProposalEvaluation(id: string){\n\n  if (id === 'new'){\n    return;\n  }\n  this._proposalEvaluation.getPEP(id)\n    .subscribe(proposalEvaluation => {\n      // if ( !proposalEvaluation ) {\n      //   return this.router.navigateByUrl(`/proposalEvaluations`);\n      // }\n      if ( proposalEvaluation ){\n      const {code} = proposalEvaluation;\n      this.proposalEvaluation = proposalEvaluation;\n\n      this.proposalProviders = proposalEvaluation.proposalProviders;\n\n      this.proposalEvaluationForm.setValue({code });\n      }\n\n    });\n}\n\n\nsave() {\n\n  const {reserveCode} = this.proposalEvaluationForm.value;\n\n  if ( this.proposalEvaluation ) {\n    // update\n    const data = {\n      ...this.proposalEvaluationForm.value,\n      id: this.proposalEvaluation.id\n    };\n    this._proposalEvaluation.updateProposalEvaluation( data )\n      .subscribe( resp => {\n        this.snackService.success('Se ha actualizado correctamente la Evaluacion ' + `${ reserveCode }`);\n        if (!this.currentStatus.procedureId) {\n          this.router.navigateByUrl('/budgetCertifications');\n        } else {\n          // analizar la forma cambiar de estado cuando modifica\n          // this.terminate();\n        }\n      });\n\n  } else {\n    // create\n\n    this._proposalEvaluation.createProposalEvaluation( this.proposalEvaluationForm.value )\n        .subscribe( (resp: any) => {\n          // console.log('valor de la certificación guardada', resp);\n\n          if (this.currentStatus.procedureId){\n            const std: Status = Status.fromState( this.currentStatus );\n            std.formId = resp.proposalEvaluation.id;\n            std.userId = this.currentUser.id;\n            std.status = 'pendiente';\n              // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n          }\n\n          this.getProposalEvaluation(resp.proposalEvaluation.id);\n          this.snackService.success('Se ha creado correctamente la Evaluacion ' + `${reserveCode }`);\n\n          // this.router.navigateByUrl(`/proposalEvaluation/${ resp.proposalEvaluation.id }`)\n      });\n  }\n\n\n\n}\n\ndelete( id: string ) {\n\n  this._proposalEvaluation.deleteProposalEvaluation( id )\n          .subscribe ( () =>\n          { this._proposalEvaluation.getProposalEvaluations();\n            this.snackService.warn('Se ha borrado correctamente la Certificacion Presupuestaria ');\n          });\n\n}\n\n\nopenAddDocumentDialog(){\n  const documentDialogRef = this.dialog.open(DocumentComponent, {\n    data: { formId: this.proposalEvaluation.id,\n            documentId: 'new'\n    }\n  });\n  documentDialogRef.afterClosed().subscribe( result => {\n\n    this.getProposalEvaluation(this.proposalEvaluation.id);\n\n\n  });\n}\nopenUpdateDocumentDialog(id: string){\n  const documentDialogRef = this.dialog.open(DocumentComponent, {\n    data: { documentId: id}\n  });\n  documentDialogRef.afterClosed().subscribe( result => {\n    this.getProposalEvaluation(this.proposalEvaluation.id);\n    console.log('cierra dialog')\n  });\n}\n\n\nchangeFile(id: string) {\n  this.dialog.open(ModalFileUploadComponent);\n  this.modalFileUploadService.showModal( 'docs', id );\n\n  this.modalFileUploadService.modalNotification\n              .subscribe( (resp: any) => {\n                // console.log(resp);\n\n                this.changeIcon(resp.document.src);\n                this.getProposalEvaluation(this.proposalEvaluation.id);\n              });\n}\n\nchangeIcon(src) {\n\n  if (src === './uploads') {\n    this.iconFile = '../assets/images/icon/add-file.png';\n    return;\n  }\n  const ext = src.split('.');\n  // console.log('extencion', ext);\n\n  if (ext[1] === 'pdf') {\n    this.iconFile = '../assets/images/icon/pdf.png';\n  }\n\n\n}\n\n}\n","<div class=\"container\">\n  <div class=\"panelLeft30\" >\n\n    <mat-card>\n      <mat-card-title>Evaluacion Propuesta</mat-card-title>\n\n      <mat-card-content>\n        <form [formGroup]=\"proposalEvaluationForm\" (submit)=\"save()\">\n          <div class=\"textarea-container\">\n          <mat-form-field>\n            <textarea matInput placeholder=\"Codigo\" formControlName=\"code\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n\n        </div>\n        <div class=\"button-row\">\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!proposalEvaluationForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n  <!-- <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"sendEvent()\"\n      >\n        <mat-icon>add</mat-icon>Enviar evento\n   </button> -->\n   <div class=\"panelRight70\">\n   <mat-card>\n    <mat-card-header>\n      <mat-card-title>Proveedores</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <ng-container *ngIf = proposalEvaluation>\n        <!-- [id]=\"proposalEvaluation.id\" -->\n        <app-proposal-provider ></app-proposal-provider>\n      </ng-container>\n    </mat-card-content>\n\n    </mat-card>\n  </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ProposalEvaluationService } from 'src/app/services/proposalEvaluation/proposal-evaluation.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ProposalEvaluation } from 'src/app/models/proposalEvaluation.model';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-proposal-evaluations',\n  templateUrl: './proposal-evaluations.component.html',\n  styleUrls: ['./proposal-evaluations.component.scss']\n})\nexport class ProposalEvaluationsComponent implements OnInit {\n\n  proposalEvaluations: ProposalEvaluation[] = [];\n  displayedColumns: string[] = ['code','edit','delete'];\n\n  constructor(\n    public _proposalEvaluation: ProposalEvaluationService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n\n  ) { }\n\n  ngOnInit(): void {\n    this.getProposalEvaluations();\n  }\n\n  getProposalEvaluations(){\n    this._proposalEvaluation.getProposalEvaluations()\n      .subscribe(proposalEvaluations => this.proposalEvaluations = proposalEvaluations);\n  }\n\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/proposalEvaluation/edit');\n  }\n\n  delete( id: string ) {\n\n    this._proposalEvaluation.deleteProposalEvaluation( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente la Evaluacion Propuestas ');\n              this.getProposalEvaluations();\n            });\n\n  }\n\n}\n","\n<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2> Evaluaciones de propuestas </h2> \n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Evaluaciones de propuestas </a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/proposalEvaluation/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva evaluación de propuesta\n  </button> -->\n</div>  \n\n\n<table mat-table [dataSource]=\"proposalEvaluations\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef> Codigo de Todo </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>eliminar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { ProposalProvider } from 'src/app/models/proposalProvider.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProposalProviderService } from 'src/app/services/proposalProvider/proposal-provider.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Document } from 'src/app/models/document.model';\nimport { DocumentService } from 'src/app/services/document/document.service';\n\n@Component({\n  selector: 'app-proposal-provider-form',\n  templateUrl: './proposal-provider-form.component.html',\n  styleUrls: ['./proposal-provider-form.component.scss']\n})\nexport class ProposalProviderFormComponent implements OnInit {\n\n  proposalProvider: ProposalProvider;\n  public proposalProviderForm: FormGroup;\n  formId: string;\n  proposalProviderId: string;\n\n  constructor(\n    public _proposalProvider: ProposalProviderService,\n    private dialogRef: MatDialogRef<ProposalProviderFormComponent>,\n    private proposalProviderFormBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: ProposalProviderFormComponent,\n    public snackService: SnackService,\n    public _document: DocumentService,\n  ) { }\n\n  ngOnInit(): void {\n    if(this.data.proposalProviderId !== 'new'){\n      this.getProposalProvider(this.data.proposalProviderId);\n    }\n\n    this.proposalProviderForm = this.proposalProviderFormBuilder.group({\n      name:[null, Validators.required],\n      nit:[null, Validators.required],\n      date:[null, Validators.required],\n      formId:[this.data.formId],\n\n    });\n  }\n\n  getProposalProvider(id: string){\n    this._proposalProvider.getProposalProvider(id)\n      .subscribe(proposalProvider => {\n        if(!proposalProvider){\n          this.onCloseDialog();\n        }\n        const {name, nit, date, formId} = proposalProvider;\n        this.proposalProvider = proposalProvider;\n        this.proposalProviderForm.setValue({name, nit, date, formId });\n      })\n  }\n\n  onCloseDialog(){\n\n    this.dialogRef.close();\n  }\n  save() {\n\n    const {name} = this.proposalProviderForm.value;\n    if ( this.proposalProvider ) {\n      // update\n      const data = {\n        ...this.proposalProviderForm.value,\n        id: this.proposalProvider.id,\n        formId: this.proposalProvider.formId\n      }\n      console.log(data);\n      this._proposalProvider.updateProposalProvider( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el Proveedor ' + `${ name }`);\n          this.onCloseDialog();\n        })\n\n    } else {\n      // create\n\n      this._proposalProvider.createProposalProvider( this.proposalProviderForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente el Proveedor '+ `${name }`);\n            this.onCloseDialog();\n\n\n        })\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._proposalProvider.deleteProposalProvider( id )\n            .subscribe ( () =>\n            { this._proposalProvider.getProposalProviders();\n              this.snackService.warn('Se ha eliminado correctamente el Proveedor ');\n            });\n\n  }\n\n\n\n}\n","<!--Form Acquisition Request-->\n\n<mat-toolbar>\n  <div class=\"fill-remaining-space\">\n    <span class=\"fill-remaining-space\">Propuesta Proveedor</span>\n  </div>\n</mat-toolbar>\n\n<form [formGroup]=\"proposalProviderForm\" (submit)=\"save()\">\n  <mat-grid-list cols=\"2\" rowHeight=\"1:1\">\n\n  <div class=\"controles-container\">\n    <mat-form-field>\n      <input matInput placeholder=\"Nombre\" formControlName=\"name\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput placeholder=\"Nit\" formControlName=\"nit\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n  </div>\n\n  <div class=\"controles-container\">\n    <mat-form-field>\n      <input\n        matInput\n        placeholder=\"Fecha de Registro\"\n        [matDatepicker]=\"picker\"\n        formControlName=\"date\"\n      />\n      <mat-datepicker-toggle\n        matSuffix\n        [for]=\"picker\"\n      ></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n  </div>\n\n    <div class=\"button-row\">\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        class=\"button\"\n        [disabled]=\"!proposalProviderForm.valid\"\n      >\n        Guardar\n      </button>\n      <button mat-button mat-dialog-close>Cerrar</button>\n    </div>\n\n\n</mat-grid-list>\n</form>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ProposalProvider } from 'src/app/models/proposalProvider.model';\nimport { ProposalProviderService } from 'src/app/services/proposalProvider/proposal-provider.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { ProposalProviderFormComponent } from './proposal-provider-form.component';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { Document } from 'src/app/models/document.model';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { DocumentComponent } from '../document/document.component';\nimport { Status } from '../../models/status.model';\nimport { User } from '../../models/user';\nimport { AuthService } from '../../services/auth.service';\nimport * as actions from '../../store/actions/status.actions';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\n\n@Component({\n  selector: 'app-proposal-provider',\n  templateUrl: './proposal-provider.component.html',\n  styleUrls: ['./proposal-provider.component.scss']\n})\nexport class ProposalProviderComponent implements OnInit {\n\n  // @Input() id: string;\n  id: string;\n  proposalProviders: ProposalProvider[] = [];\n  proposalProvidersDoc: ProposalProvider[] = [];\n  displayedColumns: string[] = ['document', 'preview', 'name', 'nit', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n  document: Document;\n  panelOpenState = false;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document','preview','name', 'edit', 'delete'];\n  formId: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  constructor(\n    public _proposalProvider: ProposalProviderService,\n    private authService: AuthService,\n    public snackService: SnackService,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser =  JSON.parse(this.authService.getUser());\n    // if (this.id)\n    // {\n    //   this.getProposalProviders(this.id);\n\n    // }\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status.formId != null) {\n          this.id = status.formId;\n          this.getProposalProviders( status.formId);\n        }\n      }\n    });\n\n\n  }\n\n  getProposalProviders(id: string){\n    this._proposalProvider.getPPForm(id)\n      .subscribe(proposalProviders => {\n\n        this.proposalProviders = proposalProviders;\n        this.getDocuments();\n      });\n\n\n  }\n\n  terminate() {\n    // console.log('Documentos cargados', this.document);\n    if (this.currentStatus.procedureId) {\n      const std: Status = Status.fromState( this.currentStatus );\n      std.userId = this.currentUser.id;\n      std.status = 'terminado';\n      // console.log('current status ', std);\n      this.store.dispatch( actions.updateStatus({ status: std }));\n    }\n  }\n\n  delete( id: string ) {\n\n    this._proposalProvider.deleteProposalProvider( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente el Proveedor ');\n              this.getProposalProviders(this.id);\n            });\n\n  }\n\n  openAddProposalProviderDialog(){\n    const proposalProviderDialogRef = this.dialog.open(ProposalProviderFormComponent, {\n      data: { formId: this.id,\n              proposalProviderId: 'new'\n      }\n    });\n    proposalProviderDialogRef.afterClosed().subscribe( result => {\n      this.getProposalProviders(this.id);\n      // console.log('Documentos cargados', this.document);\n      this.terminate();\n    });\n\n  }\n\n  openUpdateProposalProviderDialog(id: string){\n    const proposalProviderDialogRef = this.dialog.open(ProposalProviderFormComponent, {\n      data: {\n              proposalProviderId: id\n      }\n    });\n    proposalProviderDialogRef.afterClosed().subscribe( result => {\n      this.getProposalProviders(this.id);\n      this.terminate();\n    });\n\n  }\n\n  /* openPreviewDocument(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  openPreviewDocumentDialog(id: string){\n    this._document.getDocumentForm(id).subscribe(document => {\n      this.document = document;\n      this.openPreviewDocument(this.document.src);\n    });\n  } */\n  getDocuments(){\n    this._document.getDocuments().subscribe(documents => {\n      this.documents = documents;\n    })\n  }\n  getDocumentsProviders(id:string){\n    this._document.getDocumentForm(id).subscribe(documents => {\n      this.documents = documents;\n    })\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getDocuments();\n      this.terminate();\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src: src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( document: Document ) {\n    document.status = 'inactive';\n    this._document.updateDocument( document )\n            .subscribe ( () =>\n            { this.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n\n            });\n\n  }\n\n  createDocument(id: string){\n    const date = new Date();\n    const document: Document = {id:'',name:\"Documento Proveedor\",type: \"\", formId: id,src:\"./uploads\", status:\"active\", createDate: date};\n    this._document.createDocument(document)\n      .subscribe( (resp: any) =>\n      {\n        this.getDocuments();\n        this.snackService.success('Se ha creado correctamente el documento ');\n\n      })\n  }\n\n  createDocumentReplace(id:string){\n    const documentR: Document = {id:'', name:\"Documento Proveedor\",type: \"\", formId: id, src:\"./uploads\", status:\"active\", createDate: new Date};\n    this._document.createDocument(documentR)\n    .subscribe( (resp: any) =>\n    {\n      console.log(resp.document);\n      this.changeFile(resp.document.id);\n\n\n\n    })\n  }\n\n  updateStatusDocument(document: Document){\n    document.status=\"replaced\";\n    this.formId=document.formId;\n    this._document.updateDocument(document)\n      .subscribe((resp:any) => {\n        console.log(resp.document.name);\n        this.createDocumentReplace(this.formId);\n\n      })\n  }\n\n  replaceFile(document: Document){\n    this.updateStatusDocument(document);\n\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log( resp);\n                  this.snackService.success('Se ha modificado correctamente el adjunto del documento ');\n                  this.changeIcon(resp.document.src);\n                  this.getDocuments();\n                  //this.sendEvent();\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src == \"./uploads\") {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n\n\n\n}\n","\n<div class=\"panelRight70\">\n  <mat-card-title>\n    <button\n      mat-raised-button\n      class=\"create\"\n      [disabled]=\"!proposalProviders\"\n      (click)=\"openAddProposalProviderDialog()\"\n    >\n      <mat-icon>add</mat-icon>Propuesta Proveedor\n    </button>\n  </mat-card-title>\n\n\n</div>\n\n<ng-container *ngFor=\"let provider of proposalProviders\" >\n\n  <mat-accordion>\n    <mat-expansion-panel hideToggle>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Proveedor: {{provider.name}}\n        </mat-panel-title>\n        <mat-panel-description>\n          NIT: {{provider.nit}}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <h3>Documentos del Proveedor</h3>\n      <div class=\"panelRight70\">\n        <mat-card-title>\n          <button\n            mat-raised-button\n            class=\"create\"\n            (click)=\"createDocument(provider.id)\"\n\n          >\n            <mat-icon>add</mat-icon>Documento\n          </button>\n        </mat-card-title>\n\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title>Documentos</mat-card-title>\n          </mat-card-header>\n          <br />\n          <mat-card-content>\n            <table class=\"mat-elevation-z8\">\n              <thead>\n                <tr>\n                  <th>Documento</th>\n                  <th>Ver</th>\n                  <th>Nombre</th>\n                  <th>Estado</th>\n                  <th>Editar</th>\n                  <th>Eliminar</th>\n                </tr>\n              </thead>\n              <tbody>\n                  <tr *ngFor=\"let doc of documents\">\n                    <ng-container *ngIf=\"doc.formId === provider.id\">\n                    <td>\n                      {{ changeIcon(doc.src) }}\n                      <ng-container *ngIf=\"doc.src === './uploads'\" >\n\n                        <img (click)=\"changeFile(doc.id)\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n                      </ng-container>\n\n                      <ng-container *ngIf=\"doc.src != './uploads'\" >\n\n                        <img (click)=\"replaceFile(doc)\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n                      </ng-container>\n                    </td>\n\n                    <td>\n                      <button\n                      mat-button\n                      class=\"btn btn-primary\"\n                      (click)=\"openPreviewDocumentDialog(doc.src)\"\n                      >\n                    <mat-icon>launch</mat-icon>\n                    </button>\n                    </td>\n                    <td>\n                      {{doc.name}}\n                    </td>\n                    <td>\n                      {{doc.status}}\n                    </td>\n\n                    <td>\n                      <button\n                      mat-button\n                      class=\"btn btn-primary\"\n                      (click)=\"openUpdateDocumentDialog(doc.id)\"\n                     >\n                     <mat-icon>launch</mat-icon>\n                      </button>\n                    </td>\n\n                    <td>\n                      <button\n                        mat-button\n                        class=\"btn btn-primary\"\n                        color=\"warn\"\n                        (click)=\"deleteDocument(doc)\"\n                       >\n                       <mat-icon>delete_outline</mat-icon>\n              </button>\n                    </td>\n                  </ng-container>\n                  </tr>\n\n              </tbody>\n\n            </table>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </mat-expansion-panel>\n\n  </mat-accordion>\n</ng-container>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { PurchaseOrder } from 'src/app/models/purchaseOrder.model';\nimport { Document } from 'src/app/models/document.model';\nimport { PurchaseOrderService } from 'src/app/services/purchaseOrder/purchase-order.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { DocumentComponent } from '../document/document.component';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Status } from '../../models/status.model';\nimport { User } from '../../models/user';\nimport * as actions from '../../store/actions/status.actions';\nimport { AuthService } from '../../services/auth.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-purchase-order-form',\n  templateUrl: './purchase-order-form.component.html',\n  styleUrls: ['./purchase-order-form.component.scss']\n})\nexport class PurchaseOrderFormComponent implements OnInit {\n\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  public purchaseOrderForm: FormGroup;\n  public purchaseOrder: PurchaseOrder;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document','preview','name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n\n  constructor(\n    public _purchaseOrder: PurchaseOrderService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    this.purchaseOrderForm = this.formBuilder.group({\n          code:[null, Validators.required],\n          description:[null, Validators.required],\n\n        });\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status.formId != null) {\n          this.getPurchaseOrder( status.formId);\n        } else {\n          this.getPurchaseOrder( 'new');\n        }\n      }\n    });\n  }\n\n  getPurchaseOrder(id: string){\n\n    if(id === 'new'){\n      return;\n    }\n    this._purchaseOrder.getPOD(id)\n      .subscribe(purchaseOrder => {\n        if ( purchaseOrder ) {\n          const {code, description} = purchaseOrder;\n          this.purchaseOrder = purchaseOrder;\n          this.documents = purchaseOrder.documents;\n          this.purchaseOrderForm.setValue({code, description});\n        }\n      });\n  }\n\n  terminate() {\n    if (this.currentStatus.procedureId) {\n      const std: Status = Status.fromState( this.currentStatus );\n      if (this.documents.length > 0) {\n            std.userId = this.currentUser.id;\n            std.status = 'terminado';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n          }else {\n              std.status = 'pendiente';\n          }\n    }\n  }\n\n  save() {\n\n    const {code} = this.purchaseOrderForm.value;\n\n    if ( this.purchaseOrder ) {\n      // update\n      const data = {\n        ...this.purchaseOrderForm.value,\n        id: this.purchaseOrder.id\n      }\n      this._purchaseOrder.updatePurchaseOrder( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la Orden de Compra ' + `${ code }`);\n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/purchaseOrders');\n          } else {\n            this.terminate();\n          }\n        })\n\n    } else {\n      // create\n\n      this._purchaseOrder.createPurchaseOrder( this.purchaseOrderForm.value )\n          .subscribe( (resp: any) => {\n            if (this.currentStatus.procedureId) {\n              const std: Status = Status.fromState( this.currentStatus );\n              std.formId = resp.purchaseOrder.id;\n              std.userId = this.currentUser.id;\n              std.status = 'pendiente';\n              // console.log('current status ', std);\n              this.store.dispatch( actions.updateStatus({ status: std }));\n            }\n            this.getPurchaseOrder(resp.purchaseOrder.id);\n            this.snackService.success('Se ha creado correctamente la Orden de Compra '+ `${code }`);\n\n            // this.router.navigateByUrl(`/purchaseOrder/${ resp.purchaseOrder.id }`)\n        });\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n    this._purchaseOrder.deletePurchaseOrder( id )\n            .subscribe ( () =>\n            { this._purchaseOrder.getPurchaseOrders();\n              this.snackService.warn('Se ha borrado correctamente la Orden Compra ');\n            });\n  }\n\n  //document\n  getDocuments(){\n    this._document.getDocuments()\n      .subscribe(documents => this.documents = documents);\n  }\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.purchaseOrder.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n\n      this.getPurchaseOrder(this.purchaseOrder.id);\n      //this.sendEvent();\n\n    });\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getPurchaseOrder(this.purchaseOrder.id);\n      console.log('Documentos cargados', this.documents);\n      this.terminate();\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src: src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getPurchaseOrder(this.purchaseOrder.id);\n\n              this.terminate();\n            });\n  }\n\n  createDocument(){\n    const document: Document = {id:'',name:\"Orden Compra\",type: \"\", formId:this.purchaseOrder.id,src:\"./uploads\", status:\"active\", createDate:new Date()};\n    this._document.createDocument(document)\n      .subscribe(() =>\n        {\n          this._document.getDocuments();\n          this.snackService.success('Se ha creado correctamente el documento ');\n          this.getPurchaseOrder(this.purchaseOrder.id);\n        }\n      );\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getPurchaseOrder(this.purchaseOrder.id);\n                  //this.sendEvent();\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src == \"./uploads\") {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"panelLeft30\" >\n\n    <mat-card>\n      <mat-card-title>Orden Compra</mat-card-title>\n\n      <mat-card-content>\n        <form [formGroup]=\"purchaseOrderForm\" (submit)=\"save()\">\n          <div class=\"textarea-container\">\n          <mat-form-field>\n            <textarea matInput placeholder=\"Codigo\" formControlName=\"code\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n\n        </div>\n        <div class=\"textarea-container\">\n\n          <mat-form-field>\n            <textarea matInput placeholder=\"Descripcion\" formControlName=\"description\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"button-row\">\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!purchaseOrderForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n\n\n  <div class=\"panelRight70\">\n    <mat-card-title>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"createDocument()\"\n        [disabled]=\"!purchaseOrder\"\n      >\n        <mat-icon>add</mat-icon>Documento\n      </button>\n    </mat-card-title>\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Documentos</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"document\">\n            <th mat-header-cell *matHeaderCellDef>Documento</th>\n            <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n              <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef>Ver</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openPreviewDocumentDialog(element.src)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateDocumentDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <!-- Delete Column -->\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteDocument(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"sendEvent()\"\n      >\n        <mat-icon>add</mat-icon>Enviar evento\n   </button> -->\n\n\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { PurchaseOrder } from 'src/app/models/purchaseOrder.model';\nimport { PurchaseOrderService } from 'src/app/services/purchaseOrder/purchase-order.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-purchase-order',\n  templateUrl: './purchase-order.component.html',\n  styleUrls: ['./purchase-order.component.scss']\n})\nexport class PurchaseOrderComponent implements OnInit {\n\n  purchaseOrders: PurchaseOrder[] = [];\n  displayedColumns: string[] = ['code','description','edit','delete'];\n\n  constructor(\n    public _purchaseOrder: PurchaseOrderService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.getPurchaseOrders();\n  }\n\n  getPurchaseOrders(){\n    this._purchaseOrder.getPurchaseOrders()\n      .subscribe(purchaseOrders => this.purchaseOrders = purchaseOrders);\n  }\n\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/purchaseOrder/edit');\n  }\n\n  delete(id: string){\n    this._purchaseOrder.deletePurchaseOrder(id)\n      .subscribe(() =>\n      {\n        this.snackService.warn('Se ha borrado correctamente la Orden de Compra ');\n        this.getPurchaseOrders();\n      })\n  }\n\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2> Ordenes de compra </h2> \n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Ordenes de compra </a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/purchaseOrder/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva orden de compra\n  </button> -->\n</div> \n\n<table mat-table [dataSource]=\"purchaseOrders\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef> Codigo </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef> Descripcion </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>eliminar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { Status } from 'src/app/models/status.model';\nimport { StatusService } from 'src/app/services/status/status.service';\n\n\n\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.scss']\n})\nexport class StatusComponent implements OnInit {\n\n  status: Status [] = [];\n\n\n  constructor(\n    public _status: StatusService,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.getStatus();\n  }\n\n  getStatus(){\n    this._status.getStatuss().subscribe(status => this.status = status);\n  }\n\n\n\n}\n","<div class=\"content\" >\n  <aside>\n\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n\n        <mat-card-title>Filtrar tareas</mat-card-title>\n        <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\n      </mat-card-header>\n\n      <mat-card-content>\n        <form class=\"example-form\">\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>Buscar</mat-label>\n            <input matInput placeholder=\"Buscar ...\" value=\"\">\n          </mat-form-field>\n          </form>\n      </mat-card-content>\n      <!-- <mat-card-actions>\n        <button mat-button>LIKE</button>\n        <button mat-button>SHARE</button>\n      </mat-card-actions> -->\n    </mat-card>\n    <br>\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n\n        <mat-card-title>Lista de tareas</mat-card-title>\n        <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\n      </mat-card-header>\n\n      <mat-card-content>\n        <mat-nav-list>\n          <!-- <div mat-subheader>Folders</div> -->\n          <a mat-list-item routerLink=\"/\" *ngFor=\"let element of status\">\n            <mat-icon mat-list-icon color=\"primary\">mail_outline</mat-icon>\n            <div mat-line>{{element.name}}</div>\n            <div mat-line> {{element.dateAt | date}} </div>\n          </a>\n\n\n        </mat-nav-list>\n      </mat-card-content>\n      <mat-card-actions>\n        <mat-paginator [length]=\"100\"\n              [pageSize]=\"5\"\n              [pageSizeOptions]=\"[5, 10, 25, 100]\">\n        </mat-paginator>\n      </mat-card-actions>\n    </mat-card>\n\n\n\n\n\n\n  </aside>\n  <div class=\"info\" >\n\n    <mat-tab-group animationDuration=\"0ms\">\n      <mat-tab label=\"Información\">\n        <div class=\"info\" >\n          <br>\n\n          <h2>\n            <mat-icon mat-list-icon color=\"primary\">domain_verification</mat-icon>\n            Informacion\n          </h2>\n\n\n        </div>\n\n\n      </mat-tab>\n      <mat-tab label=\"Formulario\">\n        <br>\n          <h2>Formulario</h2>\n      </mat-tab>\n\n    </mat-tab-group>\n\n\n\n\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TechnicalEvaluation } from 'src/app/models/technicalEvaluation.model';\nimport { TechnicalEvaluationService } from 'src/app/services/technicalEvaluation/technical-evaluation.service';\nimport { StatusService } from 'src/app/services/status/status.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { DocumentComponent } from '../document/document.component';\nimport { Document } from 'src/app/models/document.model';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { User } from '../../models/user';\nimport * as actions from '../../store/actions/status.actions';\nimport { Status } from '../../models/status.model';\nimport { AuthService } from '../../services/auth.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\n\n@Component({\n  selector: 'app-technical-evaluation-form',\n  templateUrl: './technical-evaluation-form.component.html',\n  styleUrls: ['./technical-evaluation-form.component.scss']\n})\nexport class TechnicalEvaluationFormComponent implements OnInit {\n\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  // technicalEvaluation: TechnicalEvaluation= new TechnicalEvaluation(\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\");\n  public technicalEvaluationForm: FormGroup;\n  public technicalEvaluation: TechnicalEvaluation;\n  // documentDialogRef: MatDialogRef<DocumentComponent>;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document', 'preview', 'name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n  constructor(\n    public _technicalEvaluation: TechnicalEvaluationService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n\n  ) {   }\n\n  ngOnInit(): void {\n\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    this.technicalEvaluationForm = this.formBuilder.group({\n          to: [null, Validators.required],\n          via: [null, Validators.required],\n          whose: [null, Validators.required],\n          number: [null, Validators.required],\n          date: [null, Validators.required],\n\n        });\n    this.store.select('status').subscribe(({ status }) => {\n          if (status != null) {\n            // console.log('el estado actual es ', status);\n            this.currentStatus = status;\n            if ( status.formId != null) {\n              this.getTechnicalEvaluation( status.formId);\n            } else {\n              this.getTechnicalEvaluation( 'new');\n            }\n          }\n        });\n\n  }\n\n /*  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.status.currentValue){\n      this.codeRequest = this.status.codeRequest;\n      // console.log('el estado recibido', this.status);\n    }\n\n  } */\n  getTechnicalEvaluation(id: string){\n\n    if (id === 'new'){\n      return;\n    }\n    this._technicalEvaluation.getTED(id)\n      .subscribe(technicalEvaluation => {\n        // if ( !technicalEvaluation ) {\n        //   return this.router.navigateByUrl(`/technicalEvaluations`);\n        // }\n        if ( technicalEvaluation ) {\n        const {to, via, whose, number, date } = technicalEvaluation;\n        this.technicalEvaluation = technicalEvaluation;\n        this.documents = technicalEvaluation.documents;\n        this.technicalEvaluationForm.setValue({to, via, whose, number, date });\n        }\n      });\n  }\n\n  terminate() {\n    // console.log('Documentos cargados', this.documents);\n   if ( this.currentStatus.procedureId ) {\n    const std: Status = Status.fromState( this.currentStatus );\n    if (this.documents.length > 0) {\n           std.userId = this.currentUser.id;\n           std.status = 'terminado';\n           // console.log('current status ', std);\n           this.store.dispatch( actions.updateStatus({ status: std }));\n         }else {\n            std.status = 'pendiente';\n         }\n    }\n  }\n\n  save() {\n\n    const {number} = this.technicalEvaluationForm.value;\n\n    if ( this.technicalEvaluation ) {\n      // update\n      const data = {\n        ...this.technicalEvaluationForm.value,\n        id: this.technicalEvaluation.id\n      };\n      this._technicalEvaluation.updateTechnicalEvaluation( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la Evaluacion Tecnica ' + `${ number }`);\n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/technicalEvaluations');\n          } else {\n            this.terminate();\n          }\n        });\n\n    } else {\n      // create\n\n      this._technicalEvaluation.createTechnicalEvaluation( this.technicalEvaluationForm.value )\n          .subscribe( (resp: any) => {\n            // this._statusService.addStatus(this.codeRequest, resp.technicalEvaluation.id, 'Certificación');\n            if ( this.currentStatus.procedureId ) {\n              const std: Status = Status.fromState( this.currentStatus );\n              std.formId = resp.technicalEvaluation.id;\n              std.userId = this.currentUser.id;\n              std.status = 'pendiente';\n              // console.log('current status ', std);\n              this.store.dispatch( actions.updateStatus({ status: std }));\n\n              this.getTechnicalEvaluation(resp.technicalEvaluation.id);\n              this.snackService.success('Se ha creado correctamente la Evaluacion Tecnica ' + `${number }`);\n              }\n            // this.router.navigateByUrl(`/technicalEvaluation/${ resp.technicalEvaluation.id }`)\n        });\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._technicalEvaluation.deleteTechnicalEvaluation( id )\n            .subscribe ( () =>\n            { this._technicalEvaluation.getTechnicalEvaluations();\n              this.snackService.warn('Se ha borrado correctamente la Evaluacion Tecnica ');\n            });\n\n  }\n\n  // document\n  getDocuments(){\n    this._document.getDocuments()\n      .subscribe(documents => this.documents = documents);\n  }\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.technicalEvaluation.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getTechnicalEvaluation(this.technicalEvaluation.id);\n\n    });\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getTechnicalEvaluation(this.technicalEvaluation.id);\n      this.terminate();\n\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getTechnicalEvaluation(this.technicalEvaluation.id);\n              this.terminate();\n\n            });\n\n  }\n\n  createDocument(){\n    const date = new Date();\n    const document: Document = {id:'',name:\"Evaluacion Tecnica\",type: \"\", formId:this.technicalEvaluation.id,src:\"./uploads\",status:\"active\",createDate: date};\n    this._document.createDocument(document)\n      .subscribe(() =>\n      {\n        this._document.getDocuments();\n        this.snackService.success('Se ha creado correctamente el documento ');\n        this.getTechnicalEvaluation(this.technicalEvaluation.id);\n      }\n      );\n  }\n\n  /* sendEvent() {\n    // console.log('eniva evento');\n    this.eventRefresh.emit(true);\n  } */\n\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getTechnicalEvaluation(this.technicalEvaluation.id);\n                  // this.sendEvent();\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src === './uploads') {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n}\n","<div class=\"container\">\n\n  <div class=\"panelLeft\" >\n    <mat-card>\n      <mat-card-title>Evaluacion Tecnica</mat-card-title>\n\n      <mat-card-content>\n        <form [formGroup]=\"technicalEvaluationForm\" (submit)=\"save()\">\n        <div class=\"form\"  >\n          <div class=\"formLeft\" >\n\n\n          <mat-form-field>\n            <textarea matInput placeholder=\"A quien: \" formControlName=\"to\"></textarea>\n            <mat-error>\n              El campo es requerido, debe tener al menos 10 caracteres.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n\n            <textarea matInput placeholder=\"Via quien: \" formControlName=\"via\"></textarea>\n            <mat-error>\n              El campo es requerido, debe tener al menos 10 caracteres.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n\n            <textarea matInput placeholder=\"De quien: \" formControlName=\"whose\"></textarea>\n            <mat-error>\n              El campo es requerido, debe tener al menos 10 caracteres.\n            </mat-error>\n          </mat-form-field>\n\n\n        </div>\n\n\n        <div class=\"formRight\" >\n\n          <mat-form-field>\n\n            <textarea placeholder=\"Numero\" matInput formControlName=\"number\"></textarea>\n            <mat-error>\n              El campo es requerido, debe tener al menos 10 caracteres.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Fecha \"\n              [matDatepicker]=\"picker\"\n              formControlName=\"date\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error>Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n\n\n        </div>\n      </div>\n\n        <div class=\"form\" >\n          <div class=\"formCenter\" >\n\n            <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!technicalEvaluationForm.valid\"\n          >\n            Guardar\n          </button>\n\n          </div>\n\n        </div>\n\n\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n  <div class=\"panelRight\" >\n\n    <mat-card-title>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"createDocument()\"\n        [disabled]=\"!technicalEvaluation\"\n      >\n        <mat-icon>add</mat-icon>Documento\n      </button>\n    </mat-card-title>\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Documentos</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"document\">\n            <th mat-header-cell *matHeaderCellDef>Documento</th>\n            <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n              <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef>Ver</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openPreviewDocumentDialog(element.src)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateDocumentDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteDocument(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n\n\n  </div>\n\n\n\n\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { TechnicalEvaluation } from 'src/app/models/technicalEvaluation.model';\nimport { TechnicalEvaluationService } from 'src/app/services/technicalEvaluation/technical-evaluation.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-technical-evaluation',\n  templateUrl: './technical-evaluation.component.html',\n  styleUrls: ['./technical-evaluation.component.scss']\n})\nexport class TechnicalEvaluationComponent implements OnInit {\n\n  technicalEvaluations: TechnicalEvaluation[] = [];\n  displayedColumns: string[] = ['number', 'date',  'to','edit', 'delete'];\n\n  constructor(\n    public _technicalEvaluation: TechnicalEvaluationService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.getTechnicalEvaluations();\n  }\n\n\n  getTechnicalEvaluations(){\n    this._technicalEvaluation.getTechnicalEvaluations()\n      .subscribe(technicalEvaluations => this.technicalEvaluations = technicalEvaluations);\n  }\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/technicalEvaluation/edit');\n  }\n\n  delete( id: string ) {\n\n    this._technicalEvaluation.deleteTechnicalEvaluation( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente la Evaluacion Tecnica ');\n              this.getTechnicalEvaluations();\n            });\n\n  }\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Evaluaciones técnicas</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Evaluaciones técnicas</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/technicalEvaluation/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva evaluación técnica\n  </button> -->\n</div>\n\n<table mat-table [dataSource]=\"technicalEvaluations\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"number\">\n    <th mat-header-cell *matHeaderCellDef> numero </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.number}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"date\">\n    <th mat-header-cell *matHeaderCellDef> fecha </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.date}} </td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"to\">\n    <th mat-header-cell *matHeaderCellDef> a quien </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.to}} </td>\n  </ng-container>\n\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> edit </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>delete</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n\n\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { TechnicalReport } from 'src/app/models/technicalReport.model';\nimport { TechnicalReportService } from 'src/app/services/technicalReport/technical-report.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentComponent } from '../document/document.component';\nimport { Document } from 'src/app/models/document.model';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { IStatus } from '../../interfaces/interfaces';\nimport { StatusService } from '../../services/status/status.service';\nimport { Status } from '../../models/status.model';\nimport { User } from '../../models/user';\nimport * as actions from '../../store/actions/status.actions';\nimport { AuthService } from '../../services/auth.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\n\n\n@Component({\n  selector: 'app-technical-report-form',\n  templateUrl: './technical-report-form.component.html',\n  styleUrls: ['./technical-report-form.component.scss']\n})\nexport class TechnicalReportFormComponent implements OnInit {\n\n  // @Input() status: IStatus;\n  // @Output() eventRefresh = new EventEmitter<boolean>();\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  // technicalReport: TechnicalReport= new TechnicalReport(\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\");\n  public technicalReportForm: FormGroup;\n  public technicalReport: TechnicalReport;\n  // documentDialogRef: MatDialogRef<DocumentComponent>;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document', 'preview', 'name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n  constructor(\n    public _technicalReport: TechnicalReportService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) {   }\n\n  ngOnInit(): void {\n    // this.activatedRoute.params.subscribe(\n    //   params=>{\n    //     let id = params['id'];\n    //     if( id ){\n    // this.activatedRoute.params\n    //     .subscribe( ({ id }) => this.getTechnicalReport( id ) );\n    //     }\n    //   })\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    this.technicalReportForm = this.formBuilder.group({\n          background: [null, Validators.required],\n          acquisitionObjetive: [null, Validators.required],\n          testInspection: [null, Validators.required],\n          supportDocument: [null, Validators.required],\n          technicalQuarantee: [null, Validators.required],\n          technicalService: [null, Validators.required],\n          placeDelivery: [null, Validators.required],\n          deliveryTerm: [null, Validators.required],\n          price: [null, [Validators.required]],\n        });\n\n    this.store.select('status').subscribe(({ status }) => {\n          if (status != null) {\n            // console.log('el estado actual es ', status);\n            this.currentStatus = status;\n            if ( status.formId != null) {\n              this.getTechnicalReport( status.formId);\n            } else {\n              this.getTechnicalReport( 'new');\n            }\n          }\n        });\n\n\n  }\n\n  terminate() {\n    console.log('Documentos cargados', this.documents);\n    const std: Status = Status.fromState( this.currentStatus );\n    if (this.documents.length > 0) {\n           std.userId = this.currentUser.id;\n           std.status = 'terminado';\n           // console.log('current status ', std);\n           this.store.dispatch( actions.updateStatus({ status: std }));\n         }else {\n            std.status = 'pendiente';\n         }\n  }\n\n  getTechnicalReport(id: string){\n\n    if (id === 'new'){\n      return;\n    }\n    this._technicalReport.getTR(id)\n      .subscribe(technicalReport => {\n        // if ( !technicalReport ) {\n        //   return this.router.navigateByUrl(`/technicalReports`);\n        // }\n        if (technicalReport) {\n          const {background, acquisitionObjetive, testInspection, supportDocument, technicalQuarantee, technicalService, placeDelivery, deliveryTerm, price } = technicalReport;\n          this.technicalReport = technicalReport;\n          this.documents = technicalReport.documents;\n          this.technicalReportForm.setValue({background, acquisitionObjetive, testInspection, supportDocument, technicalQuarantee, technicalService, placeDelivery, deliveryTerm, price });\n        }\n\n      });\n  }\n\n  save() {\n\n    const {background} = this.technicalReportForm.value;\n\n    if ( this.technicalReport ) {\n      // update\n      const data = {\n        ...this.technicalReportForm.value,\n        id: this.technicalReport.id\n      };\n      this._technicalReport.updateTechnicalReport( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la Especificacion Tecnica ' + `${ background }`);\n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/technicalReports');\n          } else {\n            this.terminate();\n          }\n        });\n\n    } else {\n      // create\n\n      this._technicalReport.createTechnicalReport( this.technicalReportForm.value )\n          .subscribe( (resp: any) => {\n            // console.log('reporte guardado', resp.technicalReport);\n            const std: Status = Status.fromState( this.currentStatus );\n            std.formId = resp.technicalReport.id;\n            std.userId = this.currentUser.id;\n            std.status = 'pendiente';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n\n            this.getTechnicalReport(resp.technicalReport.id);\n            this.snackService.success('Se ha creado correctamente la Especificacion Tecnica ' + `${background }`);\n\n            // this.router.navigateByUrl(`/technicalReport/${ resp.technicalReport.id }`)\n        });\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._technicalReport.deleteTechnicalReport( id )\n            .subscribe ( () =>\n            { this._technicalReport.getTechnicalReports();\n              this.snackService.warn('Se ha borrado correctamente la Especificacion Tecnica ');\n            });\n\n  }\n\n  // document\n  getDocuments(){\n    this._document.getDocuments()\n      .subscribe(documents => this.documents = documents);\n  }\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.technicalReport.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getTechnicalReport(this.technicalReport.id);\n\n    });\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getTechnicalReport(this.technicalReport.id);\n\n      this.terminate();\n\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src: src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getTechnicalReport(this.technicalReport.id);\n\n              this.terminate();\n            });\n\n  }\n\n  createDocument(){\n    const date = new Date();\n    const document: Document = {id:'',name:\"Especificacion Tecnica\",type: \"\", formId:this.technicalReport.id,src:\"./uploads\",status:\"active\",createDate: date};\n    this._document.createDocument(document)\n      .subscribe(() =>\n      {\n        this._document.getDocuments();\n        this.snackService.success('Se ha creado correctamente el documento ');\n        this.getTechnicalReport(this.technicalReport.id);\n      }\n      );\n  }\n\n  // sendEvent() {\n  //   // console.log('eniva evento');\n  //   this.eventRefresh.emit(true);\n  // }\n\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getTechnicalReport(this.technicalReport.id);\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src === './uploads') {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n}\n\n\n\n\n","<div class=\"container\">\n\n<div class=\"panelLeft\" >\n  <mat-card>\n    <mat-card-title>Especificaciones Tecnicas</mat-card-title>\n\n    <mat-card-content>\n      <form [formGroup]=\"technicalReportForm\" (submit)=\"save()\">\n      <div class=\"form\"  >\n        <div class=\"formLeft\" >\n\n\n        <mat-form-field>\n          <textarea matInput placeholder=\"Antecedentes\" formControlName=\"background\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Ensayos, inspección y pruebas \" formControlName=\"testInspection\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Garantías técnicas\" formControlName=\"technicalQuarantee\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Lugar de entrega\" formControlName=\"placeDelivery\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Precio\" formControlName=\"price\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n      </div>\n\n\n      <div class=\"formRight\" >\n\n        <mat-form-field>\n\n          <textarea placeholder=\"Objeto de la adquisición\" matInput formControlName=\"acquisitionObjetive\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Documentación y soporte\" formControlName=\"supportDocument\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Capacitación y servicio técnico\" formControlName=\"technicalService\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Plazo de entrega\" formControlName=\"deliveryTerm\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n      </div>\n    </div>\n\n      <div class=\"form\" >\n        <div class=\"formCenter\" >\n\n          <button\n          mat-raised-button\n          color=\"primary\"\n          type=\"submit\"\n          class=\"button\"\n          [disabled]=\"!technicalReportForm.valid\"\n        >\n          Guardar\n        </button>\n\n        </div>\n\n      </div>\n\n\n      </form>\n    </mat-card-content>\n  </mat-card>\n\n</div>\n\n<div class=\"panelRight\" >\n\n  <mat-card-title>\n    <button\n      mat-raised-button\n      class=\"create\"\n      (click)=\"createDocument()\"\n      [disabled]=\"!technicalReport\"\n    >\n      <mat-icon>add</mat-icon>Documento\n    </button>\n  </mat-card-title>\n\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Documentos</mat-card-title>\n    </mat-card-header>\n    <br />\n    <mat-card-content>\n      <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"document\">\n          <th mat-header-cell *matHeaderCellDef>Documento</th>\n          <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n            <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"preview\">\n          <th mat-header-cell *matHeaderCellDef>Ver</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button\n              mat-button\n              class=\"btn btn-primary\"\n              (click)=\"openPreviewDocumentDialog(element.src)\"\n            >\n              <mat-icon>launch</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef>Nombre</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n        </ng-container>\n\n\n        <ng-container matColumnDef=\"edit\">\n          <th mat-header-cell *matHeaderCellDef>editar</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button\n              mat-button\n              class=\"btn btn-primary\"\n              (click)=\"openUpdateDocumentDialog(element.id)\"\n            >\n              <mat-icon>launch</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n\n        <ng-container matColumnDef=\"delete\">\n          <th mat-header-cell *matHeaderCellDef>borrar</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button\n              mat-button\n              class=\"btn btn-primary\"\n              color=\"warn\"\n              (click)=\"deleteDocument(element.id)\"\n            >\n              <mat-icon>delete_outline</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n      </table>\n    </mat-card-content>\n  </mat-card>\n\n\n</div>\n\n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TechnicalReport } from 'src/app/models/technicalReport.model';\nimport { TechnicalReportService } from 'src/app/services/technicalReport/technical-report.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-technical-report',\n  templateUrl: './technical-report.component.html',\n  styleUrls: ['./technical-report.component.scss']\n})\nexport class TechnicalReportComponent implements OnInit {\n\n  technicalReports: TechnicalReport[] = [];\n  displayedColumns: string[] = ['background', 'acquisitionObjetive', 'testInspection', 'supportDocument','edit', 'delete'];\n  constructor(\n    public _technicalReport: TechnicalReportService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.getTechnicalReports();\n  }\n\n\n  getTechnicalReports(){\n    this._technicalReport.getTechnicalReports()\n      .subscribe(technicalReports => this.technicalReports = technicalReports);\n  }\n\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/technicalReport/edit');\n  }\n\n  delete( id: string ) {\n\n    this._technicalReport.deleteTechnicalReport( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente la Especificacion Tecnica ');\n              this.getTechnicalReports();\n            });\n\n  }\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Especificaciones técnicas</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Especificaciones técnicas</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/technicalReport/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva especificación técnica\n  </button> -->\n</div>\n\n<table mat-table [dataSource]=\"technicalReports\" class=\"mat-elevation-z8\">\n\n\n  <ng-container matColumnDef=\"background\">\n    <th mat-header-cell *matHeaderCellDef> background </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.background}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"acquisitionObjetive\">\n    <th mat-header-cell *matHeaderCellDef> acquisitionObjetive </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.acquisitionObjetive}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"testInspection\">\n    <th mat-header-cell *matHeaderCellDef> testInspection </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.testInspection}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"supportDocument\">\n    <th mat-header-cell *matHeaderCellDef> supportDocument </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.supportDocument}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> edit </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>delete</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../services/user.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SnackService } from '../../../services/snack.service';\nimport { Position } from 'src/app/models/position.model';\nimport { PositionService } from 'src/app/services/position/position.service';\n\n\n@Component({\n  selector: 'app-users-form',\n  templateUrl: './users-form.component.html',\n  styleUrls: ['./users-form.component.scss']\n})\nexport class UsersFormComponent implements OnInit {\n\n  public positions: Position[] = [];\n\n  public roles = [\n    {value: 'ADMIN_ROLE', viewValue: 'ADMIN_ROLE'},\n    {value: 'USER_ROLE', viewValue: 'USER_ROLE'}\n  ];\n\n  constructor(\n              public userService: UserService,\n              public snackService: SnackService,\n              public dialogRef: MatDialogRef<UsersFormComponent>,\n              public _position: PositionService,\n              ) {\n\n               }\n\n  ngOnInit(): void {\n    this.getPositions();\n  }\n\n  onSubmit() {\n\n    if (this.userService.form.valid) {\n      if (!this.userService.form.get('id').value) {\n        this.userService.saveUser(this.userService.form.value).subscribe( resp =>  this.snackService.success(':: Se ha creado correctamente al usuario'));\n       }\n      else {\n      this.userService.updateUser(this.userService.form.value).subscribe( resp => this.snackService.success(':: Se editado correctamente al usuario'));\n      }\n      this.userService.form.reset();\n      this.userService.initializeFormGroup();\n\n      this.onClose();\n    }\n  }\n\n  onClear() {\n    this.userService.form.reset();\n    this.userService.initializeFormGroup();\n    this.snackService.success(':: Se limpio el formulario');\n  }\n\n  onClose(){\n    this.userService.form.reset();\n    this.userService.initializeFormGroup();\n    this.dialogRef.close();\n  }\n\n  getPositions(){\n    this._position.getPositions().subscribe(positions => this.positions = positions);\n  }\n}\n","<mat-toolbar>\n    <div class=\"fill-remaining-space\">\n        <span class=\"fill-remaining-space\">Nuevo Ususario</span>\n        <button class=\"btn-dialog-close\" mat-stroked-button (click)=\"onClose()\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n    </div>\n\n  </mat-toolbar>\n  <form [formGroup]=\"userService.form\"  class=\"normal-form\" (submit)=\"onSubmit()\"  >\n    <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n        <mat-grid-tile>\n          <div class=\"controles-container\">\n            <input type=\"hidden\" formControlName=\"id\">\n            <mat-form-field>\n              <input formControlName=\"name\" matInput placeholder=\"Nombres\">\n              <mat-error>Este campo es obligatorio.</mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input formControlName=\"lastname\" matInput placeholder=\"Apellidos\">\n                <mat-error>Este campo es obligatorio.</mat-error>\n              </mat-form-field>\n\n            <mat-form-field>\n              <input formControlName=\"email\" matInput placeholder=\"Email\">\n              <mat-error>Este email no es válido.</mat-error>\n            </mat-form-field>\n            <mat-form-field >\n              <input formControlName=\"password\" matInput placeholder=\"Contrasena\">\n              <mat-error *ngIf=\"userService.form.controls['password'].errors?.required\">Este campo es obligatorio.</mat-error>\n              <mat-error *ngIf=\"userService.form.controls['password'].errors?.minlength\">Este campo debe tener al menos 5 letras.</mat-error>\n            </mat-form-field>\n\n\n\n          </div>\n        </mat-grid-tile>\n\n        <mat-grid-tile>\n          <div class=\"controles-container\">\n\n            <mat-form-field>\n              <mat-select formControlName=\"role\" placeholder=\"Role\">\n                <mat-option>None</mat-option>\n                <ng-container *ngFor=\"let rol of roles\">\n                    <mat-option value=\"{{rol.value}}\">{{rol.viewValue}}</mat-option>\n                  </ng-container>\n\n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-select formControlName=\"positionId\" placeholder=\"Cargo\">\n                  <mat-option>None</mat-option>\n                  <ng-container *ngFor=\"let position of positions\">\n                    <mat-option value=\"{{position.id}}\">{{position.name}}</mat-option>\n                  </ng-container>\n                </mat-select>\n              </mat-form-field>\n\n\n            <div class=\"button-row\">\n              <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"userService.form.invalid\">Guardar</button>\n              <button mat-raised-button color=\"warn\" >Limpiar</button>\n            </div>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n  </form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { IUser } from '../../interfaces/interfaces';\n// import { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UsersFormComponent } from './users-form/users-form.component';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SnackService } from '../../services/snack.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  listData: MatTableDataSource<any>;\n  displayedColumns: string[] = ['name', 'lastname', 'email', 'role', 'actions'];\n  // columnsToDisplay: string[] = this.displayedColumns.slice();\n  users: IUser[] = [];\n  searchKey: string;\n  showPass = true;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n              public dialog: MatDialog,\n              public snackService: SnackService,\n              private userService: UserService,\n    ) {}\n\n  ngOnInit(): void {\n\n    this.getUsers();\n\n  }\n\n  getUsers() {\n    this.userService.getUsers()\n    .subscribe(\n      res => {\n        this.users = res;\n        // console.log(this.users);\n      },\n      err => console.error(err)\n    );\n  }\n\n  editUser(row): void {\n    this.showPass = false;\n    // console.log(row);\n    this.userService.populateForm(row);\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '60%';\n    const dialogRef = this.dialog.open(UsersFormComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.getUsers();\n    });\n  }\n\n  createUser() {\n    this.showPass = true;\n    this.userService.initializeFormGroup();\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '60%';\n    const dlgRef = this.dialog.open(UsersFormComponent, dialogConfig);\n    dlgRef.afterClosed().subscribe(result => {\n      this.getUsers();\n    });\n  }\n  applyFilter(){}\n  onSearchClear(){}\n\n  delete(id): void {\n    if (confirm('Esta seguro que quiere eliminar al usuario ?')){\n      this.userService.deleteUser(id).subscribe( resp => {\n        console.log('se eliminó correctamente al usuario');\n        this.getUsers();\n      });\n      this.snackService.warn('Se ha borrado correctamente al usuario');\n      }\n  }\n\n\n\n}\n","<div class=\"content\" >\n\n<h2>\n    <mat-icon mat-list-icon color=\"primary\">domain_verification</mat-icon>\n    Usuarios\n  </h2>\n\n\n  <div class=\"search-div\">\n    <button mat-raised-button class=\"create\"  (click)=\"createUser()\">\n      <mat-icon>add</mat-icon>Nuevo usuario\n    </button>\n    <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\n      <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Buscar ...\" autocomplete=\"off\" (keyup)=\"applyFilter()\">\n      <button mat-button matSuffix mat-icon-button aria-label=\"Clear\"*ngIf=\"searchKey\"  (click)=\"onSearchClear()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n  </div>\n\n  <table mat-table [dataSource]=\"users\" class=\"mat-elevation-z8\"  >\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\" sticky>\n      <th mat-header-cell *matHeaderCellDef> NOMBRES </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"lastname\" sticky>\n      <th mat-header-cell *matHeaderCellDef> APELLIDOS </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.lastname}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"email\" sticky>\n      <th mat-header-cell *matHeaderCellDef> EMAIL </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n    </ng-container>\n\n     <!-- Name Column -->\n     <ng-container matColumnDef=\"role\" sticky>\n      <th mat-header-cell *matHeaderCellDef> ROLE </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.role}} </td>\n    </ng-container>\n\n    <!-- <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n        <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\n      </ng-container>\n     -->\n      <!-- Star Column -->\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef> ACCIONES </th>\n      <td mat-cell *matCellDef=\"let row\">\n        \n        <button mat-icon-button (click)=\"editUser(row)\"><mat-icon>launch</mat-icon></button>\n        <button mat-icon-button color=\"warn\" (click)=\"delete(row.id)\"><mat-icon>delete_outline</mat-icon></button>\n\n      </td>\n    </ng-container>\n\n    \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    \n  </table>\n  <mat-paginator class=\"mat-elevation-z8\" [pageSizeOptions]=\"[5, 10, 25, 100]\" [pageSize]=\"10\" showFirstLastButtons></mat-paginator>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\nconst base_url = 'http://localhost:3000/uploads/';\n\n@Pipe({\n  name: 'pdfView'\n})\nexport class PdfViewPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  transform( src) {\n    if(src){\n\n      return this.sanitizer.bypassSecurityTrustResourceUrl(`${base_url}${src}`);\n    }\n    else\n    {\n      return;\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { PdfViewPipe } from './pdfView.pipe';\n\n\n\n@NgModule({\n  declarations: [ PdfViewPipe ],\n  exports: [ PdfViewPipe ],\n})\nexport class PipesModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { AcquisitionRequest } from 'src/app/models/acquisitionRequest.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AcquisitionRequestService {\n  private URL = GLOBAL.uri;\n\n  constructor(private http: HttpClient) {}\n\n  getAcquisitionRequests() {\n    let url = this.URL + '/acquisitionRequests';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.acquisitionRequests;\n      })\n    );\n  }\n\n  getAcquisitionRequest(id: string) {\n    let url = this.URL + '/acquisitionRequests/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.acquisitionRequest;\n      })\n    );\n  }\n\n  getACQRequest(id: string) {\n    let url = this.URL + '/acquisitionRequests/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.acquisitionRequest;\n      })\n    );\n  }\n\n  createAcquisitionRequest(acquisitionRequest: {code: string, version: string,validity: Date, numRequest: string, requestDate: Date, nPac: string, place: string, question1: string, question2: string, question3: string, coin: string, title: string}){\n    let url = this.URL + '/acquisitionRequests';\n    return this.http.post( url, acquisitionRequest);\n\n  }\n\n  updateAcquisitionRequest(acquisitionRequest: AcquisitionRequest){\n    let url = this.URL + '/acquisitionRequests/'+acquisitionRequest.id;\n    return this.http.put( url, acquisitionRequest);\n  }\n\n  deleteAcquisitionRequest( id: string) {\n\n    let url = this.URL + '/acquisitionRequests/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { AdmCondition } from 'src/app/models/admCondition.model';\nimport { GLOBAL } from '../../config/global';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdmConditionService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getAdmConditions() {\n    let url = this.URL + '/admConditions';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.admConditions;\n      })\n    );\n  }\n\n  getAdmCondition(id: string) {\n    let url = this.URL + '/admConditions/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.admCondition;\n      })\n    );\n  }\n\n  getAdmConditionRequest(id: string) {\n    let url = this.URL + '/admConditions/request/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.admCondition;\n      })\n    );\n  }\n\n  createAdmCondition(admCondition: {priority: string, type:string, warranty: string, deliveryTime: number, placeDelivery: string, posibleProviders: string, requestId: string}){\n    let url = this.URL + '/admConditions';\n    return this.http.post( url, admCondition);\n\n  }\n\n  updateAdmCondition(admCondition: AdmCondition){\n    let url = this.URL + '/admConditions/'+admCondition.id;\n    return this.http.put( url, admCondition);\n  }\n\n  deleteAdmCondition(id: string){\n    let url = this.URL + '/admConditions/'+ id;\n    return this.http.delete(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { GLOBAL } from '../config/global';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private URL = GLOBAL.uri;\n\n  constructor( private http: HttpClient, private router: Router) { }\n \n  signIn(user) {\n    return this.http.post<any>(this.URL + '/users/signin', user);\n  }\n\n  signUp(user) {\n    return this.http.post<any>(this.URL + '/users/signup', user);\n  } \n\n  loggedIn(): boolean {\n    return !!localStorage.getItem('token');\n  }\n\n  getToken() {\n    // console.log('Este es el token devuelto', localStorage.getItem('token'));\n    return localStorage.getItem('token');\n\n  }\n  getUser(){\n    return localStorage.getItem('user');\n  }\n  logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      this.router.navigate(['/login']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { BudgetCertification } from 'src/app/models/budgetCertification.model';\nimport { GLOBAL } from '../../config/global';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BudgetCertificationService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getBudgetCertifications() {\n    let url = this.URL + '/budgetCertifications';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.budgetCertifications;\n      })\n    );\n  }\n\n  getBudgetCertification(id: string) {\n    let url = this.URL + '/budgetCertifications/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.budgetCertification;\n      })\n    );\n  }\n\n  getBC(id: string) {\n    let url = this.URL + '/budgetCertifications/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.budgetCertification;\n      })\n    );\n  }\n\n  createBudgetCertification(budgetCertification: {reserveCode: string}){\n    let url = this.URL + '/budgetCertifications';\n    return this.http.post( url, budgetCertification);\n\n  }\n\n  updateBudgetCertification(budgetCertification: BudgetCertification){\n    let url = this.URL + '/budgetCertifications/'+ budgetCertification.id;\n    return this.http.put( url, budgetCertification);\n  }\n\n  deleteBudgetCertification( id: string) {\n\n    let url = this.URL + '/budgetCertifications/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Company } from 'src/app/models/company.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getCompanies() {\n    let url = this.URL + '/companies';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.companies;\n      })\n    );\n  }\n\n  getCompany(id: string) {\n    let url = this.URL + '/companies/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.company;\n      })\n    );\n  }\n\n  createCompany(company: {name: string, direction: string, nit: string, email: string, phone:string}){\n    let url = this.URL + '/companies';\n    return this.http.post( url, company);\n\n  }\n\n  updateCompany(company: Company){\n    let url = this.URL + '/companies/'+company.id;\n    return this.http.put( url, company);\n  }\n\n  deleteCompany( id: string) {\n\n    let url = this.URL + '/companies/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { IUser, IConfirmForm } from '../interfaces/interfaces';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n// import * as _ from 'lodash';\nimport { User } from '../models/user';\nimport { GLOBAL } from '../config/global';\nimport { ConfirmForm } from '../models/confirmForm.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ConfirmFormService {\n\n  constructor( private http: HttpClient) { this.getStorage(); }\n\n  private URL = GLOBAL.uri;\n  user: User;\n  token: string;\n\n  form: FormGroup = new FormGroup({\n    id: new FormControl(null),\n    userId: new FormControl('', Validators.required),\n    codeRequest: new FormControl(''),\n    dateAt: new FormControl('', Validators.required),\n    observation: new FormControl('', Validators.email),\n    refuse: new FormControl(false)\n  });\n\n  getStorage() {\n    if ( localStorage.getItem('token')) {\n      this.token = localStorage.getItem('token');\n      this.user = JSON.parse(localStorage.getItem('user'));\n    } else {\n      this.token = '';\n      this.user = null;\n    }\n  }\n\n  initializeFormGroup() {\n    this.form.setValue({\n      id: null,\n      userId: this.user.id,\n      codeRequest: '',\n      dateAt: new Date(),\n      observation: '',\n      refuse: null\n    });\n  }\n\n  getConfirmations() {\n\n    // return this.http.get<IUser[]>(this.URL + '/users').pipe(map(results => results['data']));\n   try{\n    return this.http.get<IConfirmForm[]>(this.URL + '/confirmations')\n    .pipe(\n        map( results => {\n          return results['confirmations'];\n          }\n        )\n      );\n\n   } catch(err) {\n     console.log('error ====> ', err );\n   }\n  }\n\n  getConfirmation(id: string) {\n    return this.http.get<IConfirmForm>(this.URL + '/confirmations/' + id);\n  }\n\n  onSetForm(confirmation) {\n    this.form.setValue(confirmation);\n  }\n\n  saveConfirmation( confirmation: ConfirmForm) {\n\n    return this.http.post( this.URL + '/confirmations/', confirmation).pipe(\n      map( (resp: any) => {\n        return resp['confirmation'];\n        })\n      );\n  }\n\n  updateConfirmation( confirmation: ConfirmForm ) {\n\n    return this.http.put( this.URL + '/confirmations/' + confirmation.id , confirmation ).pipe(\n        map( (resp: any)  => {\n          return true;\n        }));\n\n  }\n\n  deleteConfirmation( id: string ) {\n\n    return this.http.delete( this.URL + '/confirmationss/' + id ).pipe(\n      map( resp => {\n        // alert('Usuario eliminado correctamente');\n        return true;\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Document } from 'src/app/models/document.model';\nimport { SnackService } from '../snack.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\nimport { Status } from '../../models/status.model';\nimport { UploadFileService } from '../upload-file/upload-file.service';\nimport { GLOBAL } from '../../config/global';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentService {\n  private URL = GLOBAL.uri;\n  iconFile = '../assets/images/icon/add-file.png';\n  currentStatus: Status;\n  constructor(\n    private http: HttpClient,\n    public snackService: SnackService,\n    private dialog: MatDialog,\n    public modalFileUploadService: ModalFileUploadService,\n    private uploadFileService: UploadFileService,\n    private store: Store<AppState>\n    ) { \n      \n      this.store.select('status').subscribe(({ status }) => {\n        if (status != null) {\n          // console.log('el estado actual es ', status);\n          this.currentStatus = status;\n        }\n      });\n\n    }\n  getDocuments() {\n    let url = this.URL + '/documents';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.documents;\n      })\n    );\n  }\n\n  getDocument(id: string) {\n    let url = this.URL + '/documents/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.document;\n      })\n    );\n  }\n\n  getDocumentForm(id: string) {\n    let url = this.URL + '/documents/form/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.documents;\n      })\n    );\n  }\n\n  createDocument(document: {name: string, type:string, formId: string, src: string, status: string, createDate: Date}){\n    let url = this.URL + '/documents';\n    return this.http.post( url, document);\n\n  }\n\n  updateDocument(document: Document){\n    let url = this.URL + '/documents/'+ document.id;\n    return this.http.put( url, document);\n  }\n\n  deleteDocument( id: string) {\n\n    let url = this.URL + '/documents/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n  getFile(src){\n    let url = this.URL + '/files/' + `${src}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp;\n      })\n    );\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalFileUploadService.showModal( 'docs', id );\n\n    this.modalFileUploadService.modalNotification\n                .subscribe( (resp: any) => {\n                  console.log(resp.document.src);\n\n                  return resp.document.src;\n\n                });\n    this.dialog.afterAllClosed.subscribe( () => {\n      // actualiza el estado si subio el archivo\n      \n      if ( this.uploadFileService.uploaded ) {\n            const std: Status = Status.fromState( this.currentStatus );\n            std.status = 'terminado';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n         }\n    });\n  }\n\n  changeIcon(src) {\n\n    if (src == \"./uploads\") {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return this.iconFile;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n      }\n\n    return this.iconFile;\n\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { LegalContract } from 'src/app/models/legalContract.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegalContractService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) {}\n\n  getLegalContracts() {\n    let url = this.URL + '/legalContracts';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.legalContracts;\n      })\n    );\n  }\n\n  getLegalContract(id: string) {\n    let url = this.URL + '/legalContracts/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.legalContract;\n      })\n    );\n  }\n\n  getPCD(id: string) {\n    let url = this.URL + '/legalContracts/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.legalContract;\n      })\n    );\n  }\n\n  createLegalContract(legalContract: {code: string, description:string, responsable:string}){\n    let url = this.URL + '/legalContracts';\n    return this.http.post( url, legalContract);\n\n  }\n\n  updateLegalContract(legalContract: LegalContract){\n    let url = this.URL + '/legalContracts/'+ legalContract.id;\n    return this.http.put( url, legalContract);\n  }\n\n  deleteLegalContract( id: string) {\n\n    let url = this.URL + '/legalContracts/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Office } from 'src/app/models/office.model';\nimport { GLOBAL } from '../../config/global';\n@Injectable({\n  providedIn: 'root'\n})\nexport class OfficeService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getOffices() {\n    let url = this.URL + '/offices';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.offices;\n      })\n    );\n  }\n\n  getOffice(id: string) {\n    let url = this.URL + '/offices/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.office;\n      })\n    );\n  }\n\n  getOF(id: string) {\n    let url = this.URL + '/offices/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.office;\n      })\n    );\n  }\n\n  createOffice(office: {name: string, companyId: string,supOfficeId: string}){\n    let url = this.URL + '/offices';\n    return this.http.post( url, office);\n\n  }\n\n  updateOffice(office: Office){\n    let url = this.URL + '/offices/'+office.id;\n    return this.http.put( url, office);\n  }\n\n  deleteOffice( id: string) {\n\n    let url = this.URL + '/offices/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Position } from 'src/app/models/position.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PositionService {\n\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getPositions() {\n    let url = this.URL + '/positions';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.positions;\n      })\n    );\n  }\n\n  getPosition(id: string) {\n    let url = this.URL + '/positions/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.position;\n      })\n    );\n  }\n\n  createPosition(position: {name: string, officeId: string,active: boolean}){\n    let url = this.URL + '/positions';\n    return this.http.post( url, position);\n\n  }\n\n  updatePosition(position: Position){\n    let url = this.URL + '/positions/'+position.id;\n    return this.http.put( url, position);\n  }\n\n  deletePosition( id: string) {\n\n    let url = this.URL + '/positions/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Procedure } from 'src/app/models/procedure.model';\nimport { IProcedure } from '../../interfaces/interfaces';\nimport { GLOBAL } from '../../config/global';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcedureService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) {}\n\n  getProcedures() {\n    let url = this.URL + '/procedures';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.procedures;\n      })\n    );\n  }\n\n  getProcedure(id: string) {\n    let url = this.URL + '/procedures/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.procedure;\n      })\n    );\n  }\n\n  getProcedureByOrder(order: number) {\n    let url = this.URL + '/procedures/byorder/' + order;\n    return this.http.get<IProcedure>(url).pipe(\n      map((resp: any) => {\n       \n        return resp.procedure;\n      })\n    );\n  }\n\n  getProcedureByPosition(positionId: string) {\n    // console.log('positionId', positionId);\n    let url = this.URL + '/procedures/byposition/' + positionId;\n    // console.log('url ', url);\n    \n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        // console.log(resp.procedure);\n        return resp.procedure;\n      })\n    );\n  }\n\n  createProcedure(procedure: {positionId: string, procedureName:string, order: number}){\n    let url = this.URL + '/procedures';\n    return this.http.post( url, procedure);\n\n  }\n\n  updateProcedure(procedure: Procedure){\n    let url = this.URL + '/procedures/'+ procedure.id;\n    return this.http.put( url, procedure);\n  }\n\n  deleteProcedure( id: string) {\n\n    let url = this.URL + '/procedures/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { ProcessStart } from 'src/app/models/processStart.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessStartService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) {}\n\n  getProcessStarts() {\n    let url = this.URL + '/processStarts';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.processStarts;\n      })\n    );\n  }\n\n  getProcessStart(id: string) {\n    let url = this.URL + '/processStarts/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.processStart;\n      })\n    );\n  }\n\n  getPSD(id: string) {\n    let url = this.URL + '/processStarts/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.processStart;\n      })\n    );\n  }\n\n  createProcessStart(processStart: {category: string, startDate:Date, endDate:Date}){\n    let url = this.URL + '/processStarts';\n    return this.http.post( url, processStart);\n\n  }\n\n  updateProcessStart(processStart: ProcessStart){\n    let url = this.URL + '/processStarts/'+ processStart.id;\n    return this.http.put( url, processStart);\n  }\n\n  deleteProcessStart( id: string) {\n\n    let url = this.URL + '/processStarts/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Product } from 'src/app/models/product.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) {}\n\n  getProducts() {\n    let url = this.URL + '/products';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.products;\n      })\n    );\n  }\n\n  getProduct(id: string) {\n    let url = this.URL + '/products/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.product;\n      })\n    );\n  }\n\n  createProduct(product: {name: string, description:string, quantity: string, price: number, requestId: string}){\n    let url = this.URL + '/products';\n    return this.http.post( url, product);\n\n  }\n\n  updateProduct(product: Product){\n    let url = this.URL + '/products/'+ product.id;\n    return this.http.put( url, product);\n  }\n\n  deleteProduct( id: string) {\n\n    let url = this.URL + '/products/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { ProposalComparison } from 'src/app/models/proposalComparison.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalComparisonService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) {}\n\n  getProposalComparisons() {\n    let url = this.URL + '/proposalComparisons';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalComparisons;\n      })\n    );\n  }\n\n  getProposalComparison(id: string) {\n    let url = this.URL + '/proposalComparisons/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalComparison;\n      })\n    );\n  }\n\n  getPCD(id: string) {\n    let url = this.URL + '/proposalComparisons/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalComparison;\n      })\n    );\n  }\n\n  createProposalComparison(proposalComparison: {code: string, description:string, provider:string}){\n    let url = this.URL + '/proposalComparisons';\n    return this.http.post( url, proposalComparison);\n\n  }\n\n  updateProposalComparison(proposalComparison: ProposalComparison){\n    let url = this.URL + '/proposalComparisons/'+ proposalComparison.id;\n    return this.http.put( url, proposalComparison);\n  }\n\n  deleteProposalComparison( id: string) {\n\n    let url = this.URL + '/proposalComparisons/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { ProposalEvaluation } from 'src/app/models/proposalEvaluation.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalEvaluationService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getProposalEvaluations() {\n    let url = this.URL + '/proposalEvaluations';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalEvaluations;\n      })\n    );\n  }\n\n  getProposalEvaluation(id: string) {\n    let url = this.URL + '/proposalEvaluations/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalEvaluation;\n      })\n    );\n  }\n\n  getPEP(id: string) {\n    let url = this.URL + '/proposalEvaluations/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalEvaluation;\n      })\n    );\n  }\n\n\n  createProposalEvaluation(proposalEvaluation: {code: string}){\n    let url = this.URL + '/proposalEvaluations';\n    return this.http.post( url, proposalEvaluation);\n\n  }\n\n  updateProposalEvaluation(proposalEvaluation: ProposalEvaluation){\n    let url = this.URL + '/proposalEvaluations/'+ proposalEvaluation.id;\n    return this.http.put( url, proposalEvaluation);\n  }\n\n  deleteProposalEvaluation( id: string) {\n\n    let url = this.URL + '/proposalEvaluations/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { ProposalProvider } from 'src/app/models/proposalProvider.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalProviderService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getProposalProviders() {\n    let url = this.URL + '/proposalProviders';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalProviders;\n      })\n    );\n  }\n\n  getProposalProvider(id: string) {\n    let url = this.URL + '/proposalProviders/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalProvider;\n      })\n    );\n  }\n\n  getPPForm(id: string) {\n    let url = this.URL + '/proposalProviders/form/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalProviders;\n      })\n    );\n  }\n\n\n  createProposalProvider(proposalProvider: {name: string, nit: string, date: Date, formId: string}){\n    let url = this.URL + '/proposalProviders';\n    return this.http.post( url, proposalProvider);\n\n  }\n\n  updateProposalProvider(proposalProvider: ProposalProvider){\n    let url = this.URL + '/proposalProviders/'+ proposalProvider.id;\n    return this.http.put( url, proposalProvider);\n  }\n\n  deleteProposalProvider( id: string) {\n\n    let url = this.URL + '/proposalProviders/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { PurchaseOrder } from 'src/app/models/purchaseOrder.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchaseOrderService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) {}\n\n  getPurchaseOrders() {\n    let url = this.URL + '/purchaseOrders';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.purchaseOrders;\n      })\n    );\n  }\n\n  getPurchaseOrder(id: string) {\n    let url = this.URL + '/purchaseOrders/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.purchaseOrder;\n      })\n    );\n  }\n\n  getPOD(id: string) {\n    let url = this.URL + '/purchaseOrders/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.purchaseOrder;\n      })\n    );\n  }\n\n  createPurchaseOrder(purchaseOrder: {code: string, description:string}){\n    let url = this.URL + '/purchaseOrders';\n    return this.http.post( url, purchaseOrder);\n\n  }\n\n  updatePurchaseOrder(purchaseOrder: PurchaseOrder){\n    let url = this.URL + '/purchaseOrders/'+ purchaseOrder.id;\n    return this.http.put( url, purchaseOrder);\n  }\n\n  deletePurchaseOrder( id: string) {\n\n    let url = this.URL + '/purchaseOrders/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  config: MatSnackBarConfig = {\n    duration: 3000,\n    horizontalPosition: 'right',\n    verticalPosition: 'top'\n  }\n\n\n  success(msg) {\n    this.config['panelClass'] = ['notification', 'success'];\n    this.snackBar.open(msg, 'Correcto', this.config);\n  }\n\n  warn(msg) {\n    this.config['panelClass'] = ['notification', 'warn'];\n    this.snackBar.open(msg, 'Atención', this.config);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Status } from 'src/app/models/status.model';\nimport { GLOBAL } from '../../config/global';\nimport { AuthService } from '../auth.service';\nimport { User } from '../../models/user';\nimport { ProcedureService } from '../procedure/procedure.service';\nimport { IStatus } from '../../interfaces/interfaces';\nimport { PositionService } from '../position/position.service';\nimport { FormGroup, FormControl, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Observable } from 'rxjs/internal/Observable';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n  private URL = GLOBAL.uri;\n  // currentProcedure: IProcedure;\n  statuss: IStatus [] = [];\n  currentUser: User;\n  currentDate1: Date = new Date();\n  currentDate2: Date = new Date();\n  searchform: FormGroup;\n  selectedStatus: Status;\n  private user: User;\n\n  constructor(\n              private http: HttpClient,\n              private authService: AuthService,\n              private procedureService: ProcedureService,\n              private positionService: PositionService\n              ) {\n\n                this.user = JSON.parse(this.authService.getUser());\n\n                this.currentDate1.setSeconds(this.currentDate1.getSeconds() - this.currentDate1.getMinutes() * 60);\n                this.currentDate1.setTime(this.currentDate1.getTime() - (24 * 60 * 60 * 1000) * 14);\n                this.currentDate2.setSeconds(this.currentDate2.getSeconds() - this.currentDate2.getMinutes() * 60);\n\n                if (this.user) {\n\n                  this.searchform = new FormGroup({\n                    userId: new FormControl(this.user.id, Validators.required),\n                    startDate: new FormControl(this.currentDate1, [Validators.required, this.validStartDate('endDate')]),\n                    endDate: new FormControl(this.currentDate2, [Validators.required, this.validEndDate('startDate')])\n                  });\n                }\n\n\n              }\n\n  validStartDate(field_name): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        // console.log('Valor dato ', control.root.value[field_name]);\n        const isValid = control.root.value[field_name] > input;\n        if (!isValid) {return { validStartDate: {isValid}};\n        } else { return null; }\n\n    };\n  }\n\n\n  validEndDate(field_name): ValidatorFn  {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        const isValid = control.root.value[field_name] < input;\n        if (!isValid) {\n            return { validEndDate: {isValid}};\n        }\n        else {\n            return null;\n        }\n    };\n  }\n\n  reciveStatus(row) {\n    this.selectedStatus = row;\n  }\n\n  getStatuss() {\n    const url = this.URL + '/status';\n    return this.http.get<IStatus>(url).pipe(\n      map((resp: any) => {\n        return resp.status;\n      })\n    );\n  }\n\n  getStatusByPositionId(postionId: string, procedureId: string, userId: string){\n\n    const url = this.URL + '/status/positionId/' + postionId + '/' + procedureId + '/' + userId;\n    return this.http.get<IStatus>(url).pipe(\n      map((resp: any) => {\n        return resp.status;\n      })\n    );\n\n  }\n\n  getStatusByUserId(searchForm): Observable<any>{\n    const url = this.URL + '/status/statusById';\n    return this.http.post( url, searchForm);\n  }\n\n  getStatus(id: string) {\n\n    const url = this.URL + '/status/' + id;\n    return this.http.get<IStatus>(url).pipe(\n      map((resp: any) => {\n        return resp.status;\n      })\n    );\n  }\n\n  getStatusByRequest(codeRequest: string) {\n    const url = this.URL + '/status/byrequest/' + codeRequest;\n    return this.http.get<IStatus>(url).pipe(\n      map((resp: any) => {\n          return resp.status;\n      })\n    );\n  }\n\n  createStatus(status: Status) {\n    const url = this.URL + '/status';\n    return this.http.post( url, status);\n\n  }\n\n  getCurrentStatus(codeRequest: string) {\n    const url = this.URL + '/status/current/' + codeRequest;\n    return this.http.get<IStatus>(url).pipe(\n      map((resp: any) => {\n          return resp.status;\n      })\n    );\n  }\n\n  addProcedureStatus(status: Status, formId: string) {\n    let newOrder = 0 ;\n    if (status.procedureId === null ) {\n       // caso 1:\n        // no recibe nada se debe crear un estado inicial con current en false\n        // y un nuevo estado con el siguiente id de procedimiento y  con current en true y el usuario en null\n\n        newOrder = 1;\n\n        this.procedureService.getProcedureByOrder(newOrder)\n              .subscribe(\n                currentProcedure => {\n                  status.procedureId = currentProcedure.id;\n                  status.name = currentProcedure.procedureName;\n                  status.current = false;\n                  status.userId = this.user.id;\n\n                  this.createStatus(status).subscribe(\n                    (result: any) => {\n                      console.log('se ha creado correctamente el estado ', result);\n                      newOrder = currentProcedure.order + 1;\n                      this.procedureService.getProcedureByOrder(newOrder)\n                            .subscribe( nextProcedure => {\n\n                              console.log('siguiente procedimiento ', nextProcedure);\n                              status.procedureId = nextProcedure.id;\n                              status.name = nextProcedure.procedureName;\n                              status.formId = null;\n                              status.current = true;\n                              status.userId = null;\n\n                              this.createStatus(status). subscribe(\n                                nextStatus => {\n                                  console.log('Se ha creado el siguiente estado', nextStatus );\n                                }, error => console.log(error)\n                              );\n\n                            }, error => console.log(error));\n\n\n                    }, error => console.log(error)\n                  );\n\n                }, error => console.log(error));\n\n      } else {\n\n        // caso 2:\n        // existe un estado que debe actualizarse al usuario actual  y current en false\n        // y un nuevo estado con el siguiente id de procedimiento y  con current en true y el usuario en null\n\n        this.procedureService.getProcedure(status.procedureId)\n              .subscribe(\n                currentProcedure => {\n                  console.log('procedimiento actual ', currentProcedure);\n\n                  status.current = false;\n                  status.userId = this.user.id;\n                  status.formId = formId;\n                  status.dateAt = new Date('dd/MM/yyyy HH:mm:ss');\n\n                  this.updateStatus(status)\n                        .subscribe(\n                          currentStatus => {\n                            console.log('estado actualizado', currentStatus);\n                          }, error => console.log(error)\n                        );\n\n                  newOrder = currentProcedure.order + 1;\n                  this.procedureService.getProcedureByOrder(newOrder)\n                    .subscribe(\n                      res => {\n                        status.procedureId = res.id;\n                        status.name = res.procedureName;\n                        status.current = true;\n                        status.userId = null;\n\n                        this.createStatus(status).subscribe(\n                          (result: any) => {\n                            console.log('se ha creado correctamente el estado ', result);\n\n                          }, error => console.log(error)\n                        );\n\n                      }, error => console.log(error));\n                }\n              );\n\n      } // fin else\n\n  }\n\n   addStatus(codeRequest: string, formId: string, name: string) {\n\n    let status: Status;\n    this.getCurrentStatus(codeRequest).subscribe(\n      result => {\n        // console.log('result', result);\n        if (result === null){\n          status = new Status(null, null, null, formId, 'proceso', new Date('dd/MM/yyyy HH:mm:ss'), false, codeRequest, 'estado Inicial');\n\n          this.addProcedureStatus(status, formId);\n\n        }else {\n          status = result;\n          this.addProcedureStatus(status, formId);\n        }\n\n      }, error => console.log(error)\n    );\n\n\n  }\n\n  updateStatus(status: Status){\n    const url = this.URL + '/status/' + status.id;\n    return this.http.put( url, status);\n  }\n\n  deleteStatus( id: string) {\n\n    const url = this.URL + '/status/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { TechnicalEvaluation } from 'src/app/models/technicalEvaluation.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnicalEvaluationService {\n\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getTechnicalEvaluations() {\n\n    let url = this.URL + '/technicalEvaluations';\n    return this.http.get( url ).pipe(\n              map( (resp: any) => {\n                return resp.technicalEvaluations;\n              }));\n\n  }\n\n  getTechnicalEvaluation(id: string) {\n    let url = this.URL + '/technicalEvaluations/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.technicalEvaluation;\n      })\n    );\n  }\n\n  getTED(id: string) {\n    let url = this.URL + '/technicalEvaluations/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.technicalEvaluation;\n      })\n    );\n  }\n\n  createTechnicalEvaluation(technicalEvaluation: {to: string, via: string,  whose: string, number: string, date: Date}){\n    let url = this.URL + '/technicalEvaluations';\n    return this.http.post( url, technicalEvaluation);\n\n  }\n\n  updateTechnicalEvaluation(technicalEvaluation: TechnicalEvaluation){\n    let url = this.URL + '/technicalEvaluations/'+technicalEvaluation.id;\n    return this.http.put( url, technicalEvaluation);\n  }\n\n  deleteTechnicalEvaluation( id: string) {\n\n    let url = this.URL + '/technicalEvaluations/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { TechnicalReport } from 'src/app/models/technicalReport.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnicalReportService {\n\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getTechnicalReports() {\n\n    let url = this.URL + '/technicalReports';\n    return this.http.get( url ).pipe(\n              map( (resp: any) => {\n                return resp.technicalReports;\n              }));\n\n  }\n\n  getTechnicalReport(id: string) {\n    let url = this.URL + '/technicalReports/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.technicalReport;\n      })\n    );\n  }\n\n  getTR(id: string) {\n    let url = this.URL + '/technicalReports/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.technicalReport;\n      })\n    );\n  }\n\n  createTechnicalReport(technicalReport: {background: string, acquisitionObjetive: string, testInspection: string, supportDocument: string, technicalQuarantee: string, technicalService: string, placeDelivery: string, deliveryTerm: string, price: string}){\n    let url = this.URL + '/technicalReports';\n    return this.http.post( url, technicalReport);\n\n  }\n\n  updateTechnicalReport(technicalReport: TechnicalReport){\n    let url = this.URL + '/technicalReports/'+technicalReport.id;\n    return this.http.put( url, technicalReport);\n  }\n\n  deleteTechnicalReport( id: string) {\n\n    let url = this.URL + '/technicalReports/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n  constructor( private authService: AuthService) { }\n\n  intercept(req, next) {\n    const tokenizeReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`\n      }\n    })\n    return next.handle(tokenizeReq);\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadFileService {\n  private URL = GLOBAL.uri;\n  uploaded = false;\n  constructor() { }\n\n  uploadArch(file: File, id: string ) {\n\n\n    return new Promise(( resolve, reject ) => {\n      this.uploaded = false;\n      const formData = new FormData();\n      const xhr = new XMLHttpRequest();\n\n      formData.append('sfile', file, file.name);\n      xhr.onreadystatechange = () => {\n\n      if ( xhr.readyState === 4) {\n\n        if ( xhr.status === 200 ) {\n          // console.log ( 'El archivo se subio correctamente' );\n          this.uploaded = true;\n          resolve( JSON.parse(xhr.response)  );\n\n        } else {\n\n          console.log('Falló la subida del archivo');\n          this.uploaded = false;\n          reject( JSON.parse(xhr.response) );\n        }\n      }\n\n    };\n\n      const url = this.URL + '/files/'+ id;\n\n      xhr.open( 'PUT', url, true );\n      xhr.send( formData );\n\n  });\n\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { IUser } from '../interfaces/interfaces';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from 'lodash';\nimport { User } from '../models/user';\nimport { GLOBAL } from '../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor( private http: HttpClient) { this.getStorage(); }\n\n  private URL = GLOBAL.uri;\n  user: User;\n  token: string;\n\n  form: FormGroup = new FormGroup({\n    id: new FormControl(null),\n    name: new FormControl('', Validators.required),\n    lastname: new FormControl('', Validators.required),\n    email: new FormControl('', Validators.email),\n    password: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    role: new FormControl(''),\n    positionId: new FormControl('')\n  });\n\n  getStorage() {\n    if ( localStorage.getItem('token')) {\n      this.token = localStorage.getItem('token');\n      this.user = JSON.parse(localStorage.getItem('user'));\n    } else {\n      this.token = '';\n      this.user = null;\n    }\n  }\n\n  initializeFormGroup() {\n    this.form.setValue({\n      id: null,\n      name: '',\n      lastname: '',\n      email: '',\n      password: '',\n      role: '',\n      positionId: ''\n    });\n  }\n\n  getUsers() {\n\n    // return this.http.get<IUser[]>(this.URL + '/users').pipe(map(results => results['data']));\n    return this.http.get<IUser[]>(this.URL + '/users')\n            .pipe(\n                map( results => {\n                  return results['data'].map( user => User.UsersFromJson(user) );\n                  }\n                )\n              );\n  }\n\n  getUser(id) {\n    return this.http.get<IUser>(this.URL + '/users/' + id);\n  }\n\n  populateForm(user) {\n    this.form.setValue(user);\n  }\n\n  saveUser( user: User) {\n   \n    return this.http.post( this.URL + '/users/signup', user).pipe(\n      map( (resp: any) => {\n        return resp['data'];\n        })\n      );\n  }\n\n  updateUser( user: User ) {\n\n    return this.http.put( this.URL + '/users/' + user.id , user ).pipe(\n        map( (resp: any)  => {\n          // if ( user.id === this.user.id) {\n          //   const userDB: User = resp.user;\n          //   // this.user = resp.user;\n          //   this.saveStorage(resp.user._id, this.token, userDB);\n          // }\n          // alert('Usuario actualizado');\n          return true;\n        }));\n\n  }\n\n  deleteUser( id: string ) {\n\n    return this.http.delete( this.URL + '/users/' + id ).pipe(\n      map( resp => {\n        // alert('Usuario eliminado correctamente');\n        return true;\n      })\n    );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nopage-found',\n  templateUrl: './nopage-found.component.html',\n  styleUrls: ['./nopage-found.component.scss']\n})\nexport class NopageFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nopage-found works!</p>\n","export * from './statuss.actions';\nexport * from './status.actions';\n\n","import { createAction, props } from '@ngrx/store';\nimport { Status } from '../../models/status.model';\n\nexport const loadStatus = createAction(\n    '[Status] Load statuss',\n    props<{ id: string }>()\n    );\nexport const loadStatusSuccess = createAction(\n    '[Status] Load status Success',\n    props<{ status: Status }>()\n);\n\nexport const loadStatusError = createAction(\n    '[Status] Load status Error',\n    props<{ payload: any }>()\n);\n\nexport const resetStatus = createAction(\n    '[Status] Reset status'\n);\n\nexport const requestStatus = createAction(\n    '[Status] Initial Request status',\n    props<{ userId: string, procedureId: string, name: string }>()\n);\n\nexport const changeFormId = createAction(\n    '[Status] Change Form Id',\n    props<{ formId: string }>()\n);\n\nexport const initialStatus = createAction(\n    '[Status] Create Initial status',\n    props<{ status: Status }>()\n);\n\nexport const initialStatusSuccess = createAction(\n    '[Status] create initial status Success',\n    props<{ status: Status }>()\n);\n\nexport const initialStatusError = createAction(\n    '[Status] create initial status Error',\n    props<{ payload: any }>()\n);\n\nexport const createStatus = createAction(\n    '[Status] Create status',\n    props<{ status: Status }>()\n);\n\nexport const createStatusSuccess = createAction(\n    '[Status] create status Success',\n    props<{ status: Status }>()\n);\n\nexport const createStatusError = createAction(\n    '[Status] create status Error',\n    props<{ payload: any }>()\n);\n\nexport const updateStatus = createAction(\n    '[Status] Update status',\n    props<{ status: Status }>()\n);\n\nexport const updateStatusSuccess = createAction(\n    '[Status] Update status Success',\n    props<{ status: Status }>()\n);\n\nexport const updateStatusError = createAction(\n    '[Status] Update status Error',\n    props<{ payload: any }>()\n);\n","import { createAction, props } from '@ngrx/store';\nimport { Status } from '../../models/status.model';\n\nexport type validFilters = 'proceso' |'pendiente' | 'terminado';\n\nexport const loadStatuss = createAction(\n    '[Statuss] Load statuss',\n    props<{ positionId: string, procedureId: string, userId: string }>()\n    );\nexport const loadStatussSuccess = createAction(\n    '[Statuss] Load statuss Success',\n    props<{ statuss: Status[] }>()\n);\nexport const loadStatussError = createAction(\n    '[Statuss] Load statuss Error',\n    props<{ payload: any }>()\n);\nexport const setFilterStatus = createAction(\n    '[Filter] Set filter',\n    props<{ filter: validFilters }>()\n    )","import { ActionReducerMap } from '@ngrx/store';\nimport * as reducers from './reducers';\n\n\n\nexport interface AppState {\n   statuss: reducers.StatussState;\n   status: reducers.StatusState;\n}\n\n\n\nexport const appReducers: ActionReducerMap<AppState> = {\n   statuss: reducers.statussReducer,\n   status: reducers.statusReducer\n}","import { StatussEffects } from './statuss.effects';\nimport { StatusEffects } from './status.effects';\n\n\nexport const EffectsArray: any[] = [ StatussEffects, StatusEffects ];","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport * as statusActions from '../actions/';\nimport { tap, mergeMap, map, concatMap, catchError, switchMap } from 'rxjs/operators';\nimport { StatusService } from '../../services/status/status.service';\nimport { of } from 'rxjs';\nimport { Status } from '../../models/status.model';\nimport { resetStatus } from '../actions/status.actions';\n\n\n\n@Injectable()\nexport class StatusEffects {\n    constructor(\n        private actions$: Actions,\n        private statusService: StatusService\n    ) {}\n\n    loadStatus$ = createEffect(\n        () => this.actions$.pipe(\n           ofType(statusActions.loadStatus),\n        //    tap( data => console.log('effect tap ', data) ),\n        switchMap(\n               ( action ) => this.statusService.getStatus(action.id)\n                    .pipe(\n                        map( status => statusActions.loadStatusSuccess({ status })),\n                        catchError( err => of(statusActions.loadStatusError({ payload: err })) )\n                    )\n           )\n        )\n    );\n\n    initialStatus$ = createEffect(\n        () => this.actions$.pipe(\n           ofType(statusActions.initialStatus),\n        //    tap( data => console.log('effect tap ', data) ),\n        switchMap(\n               ( action ) => this.statusService.createStatus(action.status)\n                    .pipe(\n                        map( (res: any) => statusActions.initialStatusSuccess({ status: res.status }) ),\n                        catchError( err => of(statusActions.initialStatusError({ payload: err })) )\n                    )\n           )\n        )\n    );\n\n    createStatus$ = createEffect(\n        () => this.actions$.pipe(\n           ofType(statusActions.createStatus),\n        //    tap( data => console.log('effect tap ', data) ),\n        concatMap(\n               ( action ) => { return this.statusService.createStatus(action.status)\n                    .pipe(\n                        concatMap( (res: any) => [\n                            statusActions.createStatusSuccess({ status: res.status }),\n                            statusActions.resetStatus()\n                        ]),\n                        catchError( err => of(statusActions.createStatusError({ payload: err })) )\n                    )}\n           )\n        )\n    );\n\n    editStatus$ = createEffect(\n        () => this.actions$.pipe(\n           ofType(statusActions.updateStatus),\n        //    tap( data => console.log('effect tap ', data) ),\n        switchMap(\n               ( action ) => this.statusService.updateStatus(action.status)\n                    .pipe(\n                        map( (res: any) => statusActions.updateStatusSuccess({ status: res.status }) ),\n                        catchError( err => of(statusActions.updateStatusError({ payload: err })) )\n                    )\n           )\n        )\n    );\n}","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport * as statusActions from '../actions/statuss.actions';\nimport { tap, mergeMap, map, catchError } from 'rxjs/operators';\nimport { StatusService } from '../../services/status/status.service';\nimport { of } from 'rxjs';\n\n\n@Injectable()\nexport class StatussEffects {\n\n\n    constructor(\n        private actions$: Actions,\n        private statusService: StatusService\n    ) {}\n    loadStatuss$ = createEffect(\n        () => this.actions$.pipe(\n           ofType(statusActions.loadStatuss),\n        //    tap( data => console.log('effect tap ', data) ),\n           mergeMap(\n               ( action ) => this.statusService.getStatusByPositionId(action.positionId, action.procedureId, action.userId)\n                    .pipe(\n                        map( status => statusActions.loadStatussSuccess({ statuss: status }) ),\n                        catchError( err => of(statusActions.loadStatussError({ payload: err })) )\n                    )\n           )\n        )\n    );\n}","export * from './statuss.reducer';\nexport * from './status.reducer';\n","import { createReducer, on } from '@ngrx/store';\nimport { \n    loadStatus,\n    loadStatusSuccess,\n    loadStatusError,\n    resetStatus,\n    changeFormId,\n    requestStatus,\n    initialStatus,\n    initialStatusSuccess,\n    initialStatusError,\n    createStatus,\n    createStatusSuccess,\n    createStatusError,\n    updateStatus,\n    updateStatusSuccess,\n    updateStatusError\n} from '../actions';\nimport { Status } from '../../models/status.model';\n\n\n\nexport interface StatusState {\n    id: string,\n    status : Status,\n    loaded  : boolean,\n    loading : boolean,\n    error   : any\n}\n\nexport const statusInitialState: StatusState = {\n    id: null,\n    status :  null,\n    loaded  : false,\n    loading : false,\n    error   : null\n}\n\nconst _statusReducer = createReducer(statusInitialState,\n\n    on(loadStatus, (state, { id }) => ({\n        ...state,\n        loading: true,\n        id: id\n    })),\n\n    on(loadStatusSuccess, (state, { status }) => ({\n        ...state,\n        loading: false,\n        loaded: true,\n        status: { ...status }\n    })),\n    on(loadStatusError, (state, { payload }) => ({\n        ...state,\n        loading: false,\n        loaded: false,\n        error: {\n            url: payload.url,\n            name: payload.name,\n            message: payload.message\n        }\n    })),\n    on(resetStatus, state => statusInitialState),\n\n    on(requestStatus, (state, { userId, procedureId, name }) => ({\n        ...state,\n        loading: true,\n        status: {\n            id: null,\n            procedureId,\n            userId,\n            formId: null,\n            status: 'pendiente',\n            dateAt: new Date(),\n            current: true,\n            codeRequest: null,\n            name\n         }\n    })),\n\n    on(changeFormId, (state, { formId }) => ({\n        ...state,\n        loading: true,\n        status: {\n            id: null,\n            procedureId: null,\n            userId: null,\n            formId,\n            status: 'Edit',\n            dateAt: new Date(),\n            current: true,\n            codeRequest: null,\n            name: null\n         }\n    })),\n\n    on(initialStatus, (state, { status }) => ({\n        ...state,\n        loading: true,\n        status\n    })),\n\n    on(initialStatusSuccess, (state, { status }) => ({\n        ...state,\n        loading: false,\n        loaded: true,\n        status: { ...status }\n    })),\n    on(initialStatusError, (state, { payload }) => ({\n        ...state,\n        loading: false,\n        loaded: false,\n        error: {\n            url: payload.url,\n            name: payload.name,\n            message: payload.message\n        }\n    })),\n\n\n    on(createStatus, (state, { status }) => ({\n        ...state,\n        loading: true,\n        status\n    })),\n\n    on(createStatusSuccess, (state, { status }) => ({\n        ...state,\n        loading: false,\n        loaded: true,\n        status: { ...status }\n    })),\n    on(createStatusError, (state, { payload }) => ({\n        ...state,\n        loading: false,\n        loaded: false,\n        error: {\n            url: payload.url,\n            name: payload.name,\n            message: payload.message\n        }\n    })),\n\n\n    on(updateStatus, (state, { status }) => ({\n        ...state,\n        loading: true,\n        status: { ...status }\n    })),\n\n    on(updateStatusSuccess, (state, { status }) => ({\n        ...state,\n        loading: false,\n        loaded: true,\n        status: { ...status }\n    })),\n    on(updateStatusError, (state, { payload }) => ({\n        ...state,\n        loading: false,\n        loaded: false,\n        error: {\n            url: payload.url,\n            name: payload.name,\n            message: payload.message\n        }\n    })),\n);\n\nexport function statusReducer(state, action) {\n    return _statusReducer(state, action);\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { loadStatuss, loadStatussSuccess, loadStatussError, setFilterStatus, validFilters } from '../actions';\nimport { Status } from '../../models/status.model';\n\n\n\nexport interface StatussState {\n    positionId : string,\n    statuss : Status[],\n    filter : validFilters,\n    loaded  : boolean,\n    loading : boolean,\n    error   : any\n}\n\nexport const statessInitialState: StatussState = {\n    positionId: null,\n    statuss : [],\n    filter : 'proceso',\n    loaded  : false,\n    loading : false,\n    error   : null\n}\n\nconst _statussReducer = createReducer(statessInitialState,\n\n    on(loadStatuss, (state, { positionId }) => ({\n        ...state,\n        loading: true,\n        positionId: positionId\n    })),\n\n    on(loadStatussSuccess, (state, { statuss }) => ({\n        ...state,\n        loading: false,\n        loaded: true,\n        statuss: [ ...statuss ]\n    })),\n    on(loadStatussError, (state, { payload }) => ({\n        ...state,\n        loading: false,\n        loaded: false,\n        error: {\n            url: payload.url,\n            name: payload.name,\n            message: payload.message\n        }\n    })),\n    on(setFilterStatus, (state, { filter }) => ({\n        ...state,\n        loaded: true,\n        filter\n    })),\n\n);\n\nexport function statussReducer(state, action) {\n    return _statussReducer(state, action);\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}