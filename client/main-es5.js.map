{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/modal-file-upload/modal-file-upload.component.ts","webpack:///src/app/components/modal-file-upload/modal-file-upload.component.html","webpack:///src/app/components/modal-file-upload/modal-file-upload.service.ts","webpack:///src/app/config/global.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/models/procedure.model.ts","webpack:///src/app/models/status.model.ts","webpack:///src/app/models/user.ts","webpack:///src/app/pages/acquisition-request/acquisition-request-form.component.ts","webpack:///src/app/pages/acquisition-request/acquisition-request-form.component.html","webpack:///src/app/pages/acquisition-request/acquisition-request-view.component.ts","webpack:///src/app/pages/acquisition-request/acquisition-request-view.component.html","webpack:///src/app/pages/acquisition-request/acquisition-request.component.ts","webpack:///src/app/pages/acquisition-request/acquisition-request.component.html","webpack:///src/app/pages/adm-condition/adm-condition.component.ts","webpack:///src/app/pages/adm-condition/adm-condition.component.html","webpack:///src/app/pages/aprobation/aprobation.component.ts","webpack:///src/app/pages/aprobation/aprobation.component.html","webpack:///src/app/pages/budget-certification/budget-certification-form.component.ts","webpack:///src/app/pages/budget-certification/budget-certification-form.component.html","webpack:///src/app/pages/budget-certification/budget-certification-view.component.ts","webpack:///src/app/pages/budget-certification/budget-certification-view.component.html","webpack:///src/app/pages/budget-certification/budget-certification.component.ts","webpack:///src/app/pages/budget-certification/budget-certification.component.html","webpack:///src/app/pages/company/company-form.component.ts","webpack:///src/app/pages/company/company-form.component.html","webpack:///src/app/pages/company/company.component.ts","webpack:///src/app/pages/company/company.component.html","webpack:///src/app/pages/confirm/confirm.component.ts","webpack:///src/app/pages/confirm/confirm.component.html","webpack:///src/app/pages/dashboard/dashboard.component.ts","webpack:///src/app/pages/dashboard/dashboard.component.html","webpack:///src/app/pages/dashboard/pursue/pursue.component.ts","webpack:///src/app/pages/dashboard/pursue/pursue.component.html","webpack:///src/app/pages/dashboard/tasks/tasks.component.ts","webpack:///src/app/pages/dashboard/tasks/tasks.component.html","webpack:///src/app/pages/dashboard/tracing/tracing.component.ts","webpack:///src/app/pages/dashboard/tracing/tracing.component.html","webpack:///src/app/pages/dashboard/work/work.component.ts","webpack:///src/app/pages/dashboard/work/work.component.html","webpack:///src/app/pages/document/document.component.ts","webpack:///src/app/pages/document/document.component.html","webpack:///src/app/pages/file-preview/file-preview.component.ts","webpack:///src/app/pages/file-preview/file-preview.component.html","webpack:///src/app/pages/firm/firm.component.ts","webpack:///src/app/pages/firm/firm.component.html","webpack:///src/app/pages/guards/role.guard.ts","webpack:///src/app/pages/legal-contract/legal-contract-form.component.ts","webpack:///src/app/pages/legal-contract/legal-contract-form.component.html","webpack:///src/app/pages/legal-contract/legal-contract.component.ts","webpack:///src/app/pages/legal-contract/legal-contract.component.html","webpack:///src/app/pages/material/material.module.ts","webpack:///src/app/pages/office/office-form.component.ts","webpack:///src/app/pages/office/office-form.component.html","webpack:///src/app/pages/office/office.component.ts","webpack:///src/app/pages/office/office.component.html","webpack:///src/app/pages/pages.component.ts","webpack:///src/app/pages/pages.component.html","webpack:///src/app/pages/pages.module.ts","webpack:///src/app/pages/pages.routes.ts","webpack:///src/app/pages/performed/detail/detail.component.ts","webpack:///src/app/pages/performed/detail/detail.component.html","webpack:///src/app/pages/performed/performed.component.ts","webpack:///src/app/pages/performed/performed.component.html","webpack:///src/app/pages/pipes/estates.pipe.ts","webpack:///src/app/pages/pipes/format-date.pipe.ts","webpack:///src/app/pages/pipes/truncate-text.pipe.ts","webpack:///src/app/pages/position/position-form.component.ts","webpack:///src/app/pages/position/position-form.component.html","webpack:///src/app/pages/position/position.component.ts","webpack:///src/app/pages/position/position.component.html","webpack:///src/app/pages/procedure/procedure-form.component.ts","webpack:///src/app/pages/procedure/procedure-form.component.html","webpack:///src/app/pages/procedure/procedure.component.ts","webpack:///src/app/pages/procedure/procedure.component.html","webpack:///src/app/pages/process-start/process-start-form.component.ts","webpack:///src/app/pages/process-start/process-start-form.component.html","webpack:///src/app/pages/process-start/process-start.component.ts","webpack:///src/app/pages/process-start/process-start.component.html","webpack:///src/app/pages/product/product.component.ts","webpack:///src/app/pages/product/product.component.html","webpack:///src/app/pages/proposal-comparison/proposal-comparison-form.component.ts","webpack:///src/app/pages/proposal-comparison/proposal-comparison-form.component.html","webpack:///src/app/pages/proposal-comparison/proposal-comparison.component.ts","webpack:///src/app/pages/proposal-comparison/proposal-comparison.component.html","webpack:///src/app/pages/proposal-evaluations/proposal-evaluation-form.component.ts","webpack:///src/app/pages/proposal-evaluations/proposal-evaluation-form.component.html","webpack:///src/app/pages/proposal-evaluations/proposal-evaluations.component.ts","webpack:///src/app/pages/proposal-evaluations/proposal-evaluations.component.html","webpack:///src/app/pages/proposal-provider/proposal-provider-form.component.ts","webpack:///src/app/pages/proposal-provider/proposal-provider-form.component.html","webpack:///src/app/pages/proposal-provider/proposal-provider.component.ts","webpack:///src/app/pages/proposal-provider/proposal-provider.component.html","webpack:///src/app/pages/purchase-order/purchase-order-form.component.ts","webpack:///src/app/pages/purchase-order/purchase-order-form.component.html","webpack:///src/app/pages/purchase-order/purchase-order.component.ts","webpack:///src/app/pages/purchase-order/purchase-order.component.html","webpack:///src/app/pages/status/status.component.ts","webpack:///src/app/pages/status/status.component.html","webpack:///src/app/pages/technical-evaluation/technical-evaluation-form.component.ts","webpack:///src/app/pages/technical-evaluation/technical-evaluation-form.component.html","webpack:///src/app/pages/technical-evaluation/technical-evaluation.component.ts","webpack:///src/app/pages/technical-evaluation/technical-evaluation.component.html","webpack:///src/app/pages/technical-report/technical-report-form.component.ts","webpack:///src/app/pages/technical-report/technical-report-form.component.html","webpack:///src/app/pages/technical-report/technical-report.component.ts","webpack:///src/app/pages/technical-report/technical-report.component.html","webpack:///src/app/pages/users/users-form/users-form.component.ts","webpack:///src/app/pages/users/users-form/users-form.component.html","webpack:///src/app/pages/users/users.component.ts","webpack:///src/app/pages/users/users.component.html","webpack:///src/app/pipes/pdfView.pipe.ts","webpack:///src/app/pipes/pipes.module.ts","webpack:///src/app/services/acquisitionRequest/acquisition-request.service.ts","webpack:///src/app/services/admCondition/adm-condition.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/budgetCertification/budget-certification.service.ts","webpack:///src/app/services/company/company.service.ts","webpack:///src/app/services/confirmForm.service.ts","webpack:///src/app/services/document/document.service.ts","webpack:///src/app/services/legalContract/legal-contract.service.ts","webpack:///src/app/services/office/office.service.ts","webpack:///src/app/services/position/position.service.ts","webpack:///src/app/services/procedure/procedure.service.ts","webpack:///src/app/services/processStart/process-start.service.ts","webpack:///src/app/services/product/product.service.ts","webpack:///src/app/services/proposalComparison/proposal-comparison.service.ts","webpack:///src/app/services/proposalEvaluation/proposal-evaluation.service.ts","webpack:///src/app/services/proposalProvider/proposal-provider.service.ts","webpack:///src/app/services/purchaseOrder/purchase-order.service.ts","webpack:///src/app/services/snack.service.ts","webpack:///src/app/services/status/status.service.ts","webpack:///src/app/services/technicalEvaluation/technical-evaluation.service.ts","webpack:///src/app/services/technicalReport/technical-report.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/services/upload-file/upload-file.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/shared/nopage-found/nopage-found.component.ts","webpack:///src/app/shared/nopage-found/nopage-found.component.html","webpack:///src/app/store/actions/index.ts","webpack:///src/app/store/actions/status.actions.ts","webpack:///src/app/store/actions/statuss.actions.ts","webpack:///src/app/store/app.reducers.ts","webpack:///src/app/store/effects/index.ts","webpack:///src/app/store/effects/status.effects.ts","webpack:///src/app/store/effects/statuss.effects.ts","webpack:///src/app/store/reducers/index.ts","webpack:///src/app/store/reducers/status.reducer.ts","webpack:///src/app/store/reducers/statuss.reducer.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["map","webpackAsyncContext","req","Promise","resolve","then","__webpack_require__","o","e","Error","code","id","keys","webpackAsyncContextKeys","Object","module","exports","routes","path","component","children","loadChildren","canActivate","AppRoutingModule","forRoot","imports","AppComponent","router","fb","title","formErrors","email","password","validationMessages","required","pattern","minlength","maxlength","buildForm","userForm","group","minLength","maxLength","valueChanges","subscribe","data","onValueChanged","form","field","prototype","hasOwnProperty","call","control","get","dirty","valid","messages","key","errors","signInWithEmail","navigate","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","instrument","maxAge","logOnly","production","declarations","providers","bootstrap","ModalFileUploadComponent","uploadFileService","modalUploadFileService","snackService","iconFile","fileUpload","hideModal","file","alert","type","indexOf","console","error","warn","uploadArch","resp","modalNotification","emit","success","closeModal","err","log","selectFile","uploadFile","styles","ModalFileUploadService","providedIn","GLOBAL","uri","routeMap","office","AuthGuard","authService","loggedIn","LoginComponent","snackBar","user","name","lastname","role","positionId","loginUser","signUp","res","localStorage","setItem","Bearer","open","duration","signIn","JSON","stringify","login","Procedure","procedureName","order","Status","procedureId","userId","formId","status","dateAt","current","codeRequest","User","obj","AcquisitionRequestFormComponent","_acquisitionRequest","formBuilder","dialog","_product","_admCondition","store","products","productsTest","admConditions","displayedProducts","displayedAdmConditions","currentUser","parse","getUser","acquisitionRequestForm","version","validity","Date","numRequest","requestDate","nPac","place","question1","question2","question3","coin","select","currentStatus","getAcquisitionRequest","formGroup","reset","markAsUntouched","controls","forEach","setErrors","invalid","acquisitionRequest","resetForm","getACQRequest","setValue","value","updateAcquisitionRequest","std","fromState","dispatch","navigateByUrl","createAcquisitionRequest","deleteAcquisitionRequest","getAcquisitionRequests","getProducts","productDialogRef","requestId","productId","afterClosed","result","deleteProduct","getAdmConditions","admConditionDialogRef","admConditionId","deleteAdmCondition","save","AcquisitionRequestViewComponent","acquisitionRequestService","statusService","tracer","panelOpenState","getStatusByRequest","AcquisitionRequestComponent","acquisitionRequests","displayedColumns","AdmConditionComponent","activatedRoute","admConditionFormBuilder","dialogRef","getAdmCondition","admConditionForm","priority","warranty","deliveryTime","placeDelivery","posibleProviders","admCondition","onCloseDialog","close","updateAdmCondition","createAdmCondition","AprobationComponent","confirmFormService","activate","initializeFormGroup","getConfirmForm","getConfirmation","confirmation","onSetForm","saveConfirmation","onSubmit","onChange","BudgetCertificationFormComponent","_budgetCertification","_document","documents","displayedDocuments","budgetCertificationForm","reserveCode","getBudgetCertification","length","getBC","budgetCertification","updateBudgetCertification","terminate","createBudgetCertification","deleteBudgetCertification","getBudgetCertifications","documentDialogRef","documentId","src","dialogConfig","width","deleteDocument","getDocuments","document","createDate","createDocument","changeFile","showModal","changeIcon","ext","split","BudgetCertificationViewComponent","pdfSrc","pdfSrc1","pdfSrc2","getFile","fileView","BudgetCertificationComponent","budgetCertifications","CompanyFormComponent","_company","_office","offices","displayedOffices","params","getCompany","companyForm","direction","nit","phone","getOffices","company","updateCompany","createCompany","deleteOffice","CompanyComponent","companies","getCompanies","deleteCompany","ConfirmComponent","DashboardComponent","PursueComponent","procedureService","switchButtons","active","getProcedure","currentProcedure","nextOrder","getProcedureByOrder","procedure","nextstd","currentPID","TasksComponent","positionService","filters","statuss","refresh","currentFilter","loading","page","size","getStatus","filter","getData","pageIndex","pageSize","index","startingIndex","endingIndex","newRequest","TracingComponent","getNextProcedure","scrollToBottom","newOrder","nextProcedure","myScrollContainer","nativeElement","scrollLeft","scrollWidth","WorkComponent","formsIn","chargeForms","infoIn","DocumentComponent","documentFormBuilder","getDocument","documentForm","updateDocument","FilePreviewComponent","aux","getFileSrc","getDocumentForm","url","FirmComponent","RoleGuard","next","state","routeConfig","LegalContractFormComponent","_legalContract","legalContractForm","description","responsable","getLegalContract","getPCD","legalContract","updateLegalContract","createLegalContract","deleteLegalContract","getLegalContracts","LegalContractComponent","legalContracts","AllMaterialModule","OfficeFormComponent","officeFormBuilder","_position","positions","getOffice","officeForm","companyId","supOfficeId","getOF","updateOffice","createOffice","positionDialogRef","positionFormDialogRef","officeId","getPositions","deletePosition","OfficeComponent","PagesComponent","userService","officeService","currentOffice","logout","getPosition","myPosition","myOffice","PagesModule","forChild","pagesRoutes","titulo","redirectTo","pathMatch","DetailComponent","selectedStatus","getCurrentState","getCurrentStatus","position","onClose","PerformedComponent","submit","getStatusByUserId","searchform","row","reciveStatus","disableClose","autoFocus","EstatesPipe","FormatDatePipe","date","args","months","date1","getDate","getMonth","getFullYear","TruncateTextPipe","biggestWord","elipses","truncatedText","slice","lastSpace","lastIndexOf","replace","PositionFormComponent","positionFormBuilder","positionForm","updatePosition","createPosition","PositionComponent","ProcedureFormComponent","_procedure","procedureForm","updateProcedure","createProcedure","ProcedureComponent","procedures","getProcedures","deleteProcedure","find","p","getNamePosition","ProcessStartFormComponent","_processStart","isError","errorMessage","processStartForm","category","startDate","endDate","validator","MustMatch","getProcessStart","getPSD","processStart","updateProcessStart","createProcessStart","deleteProcessStart","getProcessStarts","controlName","matchingControlName","matchingControl","mustMatch","ProcessStartComponent","processStarts","ProductComponent","productFormBuilder","getProduct","productForm","quantity","price","product","updateProduct","createProduct","ProposalComparisonFormComponent","_proposalComparison","proposalComparisonForm","provider","getProposalComparison","proposalComparison","updateProposalComparison","createProposalComparison","deleteProposalComparison","getProposalComparisons","ProposalComparisonComponent","proposalComparisons","ProposalEvaluationFormComponent","_proposalProvider","_proposalEvaluation","modalFileUploadService","proposalProviders","displayedProposalProviders","proposalEvaluationForm","getProposalEvaluation","getPEP","proposalEvaluation","updateProposalEvaluation","createProposalEvaluation","deleteProposalEvaluation","getProposalEvaluations","ProposalEvaluationsComponent","proposalEvaluations","ProposalProviderFormComponent","proposalProviderFormBuilder","proposalProviderId","getProposalProvider","proposalProviderForm","proposalProvider","updateProposalProvider","createProposalProvider","deleteProposalProvider","getProposalProviders","ProposalProviderComponent","proposalProvidersDoc","getPPForm","proposalProviderDialogRef","documentR","createDocumentReplace","updateStatusDocument","openAddProposalProviderDialog","PurchaseOrderFormComponent","_purchaseOrder","purchaseOrderForm","getPurchaseOrder","getPOD","purchaseOrder","updatePurchaseOrder","createPurchaseOrder","deletePurchaseOrder","getPurchaseOrders","PurchaseOrderComponent","purchaseOrders","StatusComponent","_status","getStatuss","TechnicalEvaluationFormComponent","_technicalEvaluation","technicalEvaluationForm","to","via","whose","number","getTechnicalEvaluation","getTED","technicalEvaluation","updateTechnicalEvaluation","createTechnicalEvaluation","deleteTechnicalEvaluation","getTechnicalEvaluations","TechnicalEvaluationComponent","technicalEvaluations","TechnicalReportFormComponent","_technicalReport","technicalReportForm","background","acquisitionObjetive","testInspection","supportDocument","technicalQuarantee","technicalService","deliveryTerm","getTechnicalReport","getTR","technicalReport","updateTechnicalReport","createTechnicalReport","deleteTechnicalReport","getTechnicalReports","TechnicalReportComponent","technicalReports","UsersFormComponent","roles","viewValue","saveUser","updateUser","UsersComponent","users","showPass","getUsers","populateForm","dlgRef","confirm","deleteUser","createUser","applyFilter","base_url","PdfViewPipe","sanitizer","bypassSecurityTrustResourceUrl","PipesModule","AcquisitionRequestService","http","URL","pipe","post","put","AdmConditionService","AuthService","getItem","removeItem","BudgetCertificationService","CompanyService","ConfirmFormService","observation","refuse","getStorage","token","results","DocumentService","afterAllClosed","uploaded","LegalContractService","OfficeService","PositionService","ProcedureService","ProcessStartService","ProductService","ProposalComparisonService","ProposalEvaluationService","ProposalProviderService","PurchaseOrderService","SnackService","config","horizontalPosition","verticalPosition","msg","StatusService","currentDate1","currentDate2","setSeconds","getSeconds","getMinutes","setTime","getTime","validStartDate","validEndDate","field_name","input","isValid","root","postionId","searchForm","createStatus","nextStatus","updateStatus","addProcedureStatus","TechnicalEvaluationService","TechnicalReportService","TokenInterceptorService","tokenizeReq","clone","setHeaders","Authorization","getToken","handle","UploadFileService","reject","formData","FormData","xhr","XMLHttpRequest","append","onreadystatechange","readyState","response","send","UserService","UsersFromJson","NopageFoundComponent","loadStatus","loadStatusSuccess","loadStatusError","resetStatus","requestStatus","changeFormId","initialStatus","initialStatusSuccess","initialStatusError","createStatusSuccess","createStatusError","updateStatusSuccess","updateStatusError","loadStatuss","loadStatussSuccess","loadStatussError","setFilterStatus","appReducers","EffectsArray","StatusEffects","actions$","loadStatus$","action","payload","initialStatus$","createStatus$","editStatus$","StatussEffects","loadStatuss$","getStatusByPositionId","statusInitialState","loaded","_statusReducer","message","statusReducer","statessInitialState","_statussReducer","statussReducer","environment","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,QAAIA,GAAG,GAAG;AACT,8BAAwB;AADf,KAAV;;AAIA,aAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AACjC,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAG,CAACC,mBAAmB,CAACC,CAApB,CAAsBP,GAAtB,EAA2BE,GAA3B,CAAJ,EAAqC;AACpC,cAAIM,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBP,GAAzB,GAA+B,GAAzC,CAAR;AACAM,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA;;AAED,YAAIG,EAAE,GAAGX,GAAG,CAACE,GAAD,CAAZ;AACA,eAAOI,mBAAmB,CAACK,EAAD,CAA1B;AACA,OATM,CAAP;AAUA;;AACDV,uBAAmB,CAACW,IAApB,GAA2B,SAASC,uBAAT,GAAmC;AAC7D,aAAOC,MAAM,CAACF,IAAP,CAAYZ,GAAZ,CAAP;AACA,KAFD;;AAGAC,uBAAmB,CAACU,EAApB,GAAyB,yCAAzB;AACAI,UAAM,CAACC,OAAP,GAAiBf,mBAAjB;;;;;;;;;;;;;;;;ACpBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMgB,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE,qEAFb;AAGEC,cAAQ,EAAE,CAAC;AACTF,YAAI,EAAE,EADG;AAETG,oBAAY,EAAE,kCAFL;AAGTC,mBAAW,EAAE,CAAC,4DAAD;AAHJ,OAAD;AAHZ,KADqB,EAUnB;AAAEJ,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KAVmB,EAWnB;AAAED,UAAI,EAAE,IAAR;AAAcC,eAAS,EAAE;AAAzB,KAXmB,CAAvB;;QAkBaI,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBP,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBM,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBP,MAArB,CAAD,CADD;AAERD,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AC1B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAEA;;;QAQaU,Y;AAoBX,4BACUC,MADV,EAEUC,EAFV,EAEyB;AAAA;;AADf,aAAAD,MAAA,GAAAA,MAAA;AACA,aAAAC,EAAA,GAAAA,EAAA;AArBV,aAAAC,KAAA,GAAQ,aAAR;AAEA,aAAAC,UAAA,GAAa;AACXC,eAAK,EAAE,EADI;AAEXC,kBAAQ,EAAE;AAFC,SAAb;AAIA,aAAAC,kBAAA,GAAqB;AACnBF,eAAK,EAAE;AACLG,oBAAQ,EAAE,SADL;AAELH,iBAAK,EAAE;AAFF,WADY;AAKnBC,kBAAQ,EAAE;AACRE,oBAAQ,EAAE,SADF;AAERC,mBAAO,EAAE,cAFD;AAGRC,qBAAS,EAAE,WAHH;AAIRC,qBAAS,EAAE;AAJH;AALS,SAArB;AAgBI;;;;mCAEO;AACT,eAAKC,SAAL;AACD;;;oCAEW;AAAA;;AACV,eAAKC,QAAL,GAAgB,KAAKX,EAAL,CAAQY,KAAR,CAAc;AAC5BT,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWG,QAAZ,EAAsB,0DAAWH,KAAjC,CAAL,CADqB;AAE5BC,oBAAQ,EAAE,CACR,EADQ,EAER,CACE,0DAAWG,OAAX,CAAmB,2CAAnB,CADF,EAEE,0DAAWM,SAAX,CAAqB,CAArB,CAFF,EAGE,0DAAWC,SAAX,CAAqB,EAArB,CAHF,CAFQ;AAFkB,WAAd,CAAhB;AAYA,eAAKH,QAAL,CAAcI,YAAd,CAA2BC,SAA3B,CAAqC,UAAAC,IAAI;AAAA,mBAAI,KAAI,CAACC,cAAL,CAAoBD,IAApB,CAAJ;AAAA,WAAzC;AACA,eAAKC,cAAL;AACD;;;uCAEcD,I,EAAY;AACzB,cAAI,CAAC,KAAKN,QAAV,EAAoB;AAClB;AACD;;AACD,cAAMQ,IAAI,GAAG,KAAKR,QAAlB;;AACA,eAAK,IAAMS,KAAX,IAAoB,KAAKlB,UAAzB,EAAqC;AACnC,gBAAIhB,MAAM,CAACmC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKrB,UAA1C,EAAsDkB,KAAtD,CAAJ,EAAkE;AAChE,mBAAKlB,UAAL,CAAgBkB,KAAhB,IAAyB,EAAzB;AACA,kBAAMI,OAAO,GAAGL,IAAI,CAACM,GAAL,CAASL,KAAT,CAAhB;;AACA,kBAAII,OAAO,IAAIA,OAAO,CAACE,KAAnB,IAA4B,CAACF,OAAO,CAACG,KAAzC,EAAgD;AAC9C,oBAAMC,QAAQ,GAAG,KAAKvB,kBAAL,CAAwBe,KAAxB,CAAjB;;AACA,qBAAK,IAAMS,GAAX,IAAkBL,OAAO,CAACM,MAA1B,EAAkC;AAChC,sBAAI5C,MAAM,CAACmC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCC,OAAO,CAACM,MAA7C,EAAqDD,GAArD,CAAJ,EAA+D;AAC7D,yBAAK3B,UAAL,CAAgBkB,KAAhB,KAA0BQ,QAAQ,CAACC,GAAD,CAAR,GAAgB,GAA1C;AACD;AACF;AACF;AACF;AACF;AACF;;;2CAEkB,CACjB;AACD;;;2CAEkB,CACjB;AACD;;;0CAEiB,CAChB;AACA;AACA;AACD;;;4CAEmB,CAClB;AACD;;;gCAEO;AACN,eAAKE,eAAL;AACD;;;sCAEqB;AACpB,eAAKhC,MAAL,CAAYiC,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;;;;;;;uBA3FUlC,Y,EAAY,uH,EAAA,2H;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACVzB;;;;;;;;;sEDUaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTmC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVzaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAXT,CACT,6DADS,EAET;AACEC,eAAO,EAAE,sEADX;AAEEC,gBAAQ,EAAE,4FAFZ;AAGEC,aAAK,EAAE;AAHT,OAFS,C;AAQV,gBAhCQ,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,+DAJO,EAKP,qEALO,EAMP,0DANO,EAOP,oEAPO,EAQP,qEARO,EASP,uEATO,EAUP,yEAVO,EAWP,qEAXO,EAYP,8EAZO,EAaP,2EAbO,EAcP,iFAdO,EAeP,kEAfO,EAiBP,yDAAY3C,OAAZ,CAAoB,gEAApB,CAjBO,EAkBP,6DAAcA,OAAd,CAAsB,kEAAtB,CAlBO,EAmBP,0EAAoB4C,UAApB,CAA+B;AAC7BC,cAAM,EAAE,EADqB;AAE7BC,eAAO,EAAE,uEAAYC;AAFQ,OAA/B,CAnBO,CAgCR;;;;0HAGUP,S,EAAS;AAAA,uBAtClB,2DAsCkB,EArClB,qEAqCkB;AArCJ,kBAGd,uEAHc,EAId,oEAJc,EAKd,4FALc,EAMd,+DANc,EAOd,qEAPc,EAQd,0DARc,EASd,oEATc,EAUd,qEAVc,EAWd,uEAXc,EAYd,yEAZc,EAad,qEAbc,EAcd,8EAdc,EAed,2EAfc,EAgBd,iFAhBc,EAiBd,kEAjBc,EAiBK,4DAjBL,EAiBK,gEAjBL,EAiBK,yEAjBL;AAqCI,O;AApBC,K;;;;;sEAoBVA,S,EAAS;cAxCrB,sDAwCqB;eAxCZ;AACRQ,sBAAY,EAAE,CACZ,2DADY,EAEZ,qEAFY,CADN;AAKR/C,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,+DAJO,EAKP,qEALO,EAMP,0DANO,EAOP,oEAPO,EAQP,qEARO,EASP,uEATO,EAUP,yEAVO,EAWP,qEAXO,EAYP,8EAZO,EAaP,2EAbO,EAcP,iFAdO,EAeP,kEAfO,EAiBP,yDAAYD,OAAZ,CAAoB,gEAApB,CAjBO,EAkBP,6DAAcA,OAAd,CAAsB,kEAAtB,CAlBO,EAmBP,0EAAoB4C,UAApB,CAA+B;AAC7BC,kBAAM,EAAE,EADqB;AAE7BC,mBAAO,EAAE,uEAAYC;AAFQ,WAA/B,CAnBO,CALD;AA6BRE,mBAAS,EAAE,CACT,6DADS,EAET;AACER,mBAAO,EAAE,sEADX;AAEEC,oBAAQ,EAAE,4FAFZ;AAGEC,iBAAK,EAAE;AAHT,WAFS,CA7BH;AAsCRO,mBAAS,EAAE,CAAC,2DAAD;AAtCH,S;AAwCY,Q;;;;;;;;;;;;;;;;;;AC7EtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIE;;;;;;AAAsB;;;;QDQXC,wB;AAKX,wCACSC,iBADT,EAESC,sBAFT,EAGSC,YAHT,EAGmC;AAAA;;AAF1B,aAAAF,iBAAA,GAAAA,iBAAA;AACA,aAAAC,sBAAA,GAAAA,sBAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AALT,aAAAC,QAAA,GAAW,gCAAX;AAMK;;;;mCAEG,CACP;;;qCAEY;AACX,eAAKA,QAAL,GAAgB,gCAAhB;AACA,eAAKC,UAAL,GAAkB,IAAlB;AACA,eAAKH,sBAAL,CAA4BI,SAA5B;AAED;;;mCAEWC,I,EAAU;AAEpB;AAEC,cAAK,CAACA,IAAN,EAAY;AACXC,iBAAK,CAAC,4CAAD,CAAL;AACA,iBAAKH,UAAL,GAAkB,IAAlB;AACA;AACD;;AAEA,cAAIE,IAAI,CAACE,IAAL,CAAUC,OAAV,CAAkB,iBAAlB,IAAuC,CAA3C,EAA+C;AAC9CC,mBAAO,CAACC,KAAR,CAAc,mEAAd;AACA,iBAAKT,YAAL,CAAkBU,IAAlB,CAAuB,kEAAvB;AACA,iBAAKR,UAAL,GAAkB,IAAlB;AACA;AACD;;AAEA,eAAKA,UAAL,GAAkBE,IAAlB;;AAEA,cAAIA,IAAI,CAACE,IAAL,CAAUC,OAAV,CAAkB,KAAlB,IAA2B,CAA/B,EAAkC;AACjC,iBAAKN,QAAL,GAAgB,+BAAhB;AACA;AAGH;;;qCAEY;AAAA;;AAEX,eAAKH,iBAAL,CAAuBa,UAAvB,CAAkC,KAAKT,UAAvC,EAAmD,KAAKH,sBAAL,CAA4BlE,EAA/E,EACSN,IADT,CACe,UAAAqF,IAAI,EAAI;AACb;AACA,kBAAI,CAACb,sBAAL,CAA4Bc,iBAA5B,CAA8CC,IAA9C,CAAoDF,IAApD;;AACA,kBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,mCAA1B;;AACA,kBAAI,CAACC,UAAL;AAED,WAPT,WAQgB,UAAAC,GAAG,EAAI;AACbT,mBAAO,CAACU,GAAR,CAAa,gCAAb;;AACA,kBAAI,CAAClB,YAAL,CAAkBU,IAAlB,CAAuB,4BAAvB;AACD,WAXT;AAYD;;;;;;;uBA7DUb,wB,EAAwB,4J,EAAA,kJ,EAAA,4I;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA,e;AAAA,a;AAAA,4Q;AAAA;AAAA;ACZrC;;AAAqB;;AAAgB;;AAErC;;AAEE;;AACA;;AAAO;AAAA,mBAAU,IAAAsB,UAAA,qBAA+B,CAA/B,EAAV;AAA4C,WAA5C;;AAAP;;AAEF;;AACA;;AACE;;AAAQ;AAAA,mBAAS,IAAAC,UAAA,EAAT;AAAqB,WAArB;;AAAsD;;AAAa;;AAC3E;;AAAQ;AAAA,mBAAS,IAAAJ,UAAA,EAAT;AAAqB,WAArB;;AAAoD;;AAAM;;AACpE;;;;AAPO;;AAAA;;;;;;;;;sEDQMnB,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTd,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTqC,gBAAM,EAAE;AAHC,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,sB;AAKX,wCAAc;AAAA;;AAFP,aAAAT,iBAAA,GAAoB,IAAI,0DAAJ,EAApB;AAEU;;;;oCAEL;AACV,eAAKhF,EAAL,GAAU,IAAV;AACA,eAAKyE,IAAL,GAAY,IAAZ;AACA;;;kCACUA,I,EAAczE,E,EAAU;AAClC,eAAKA,EAAL,GAAUA,EAAV;AACA,eAAKyE,IAAL,GAAYA,IAAZ;AAEA;;;;;;;uBAfSgB,sB;AAAsB,K;;;aAAtBA,sB;AAAsB,eAAtBA,sBAAsB,K;AAAA,kBAFrB;;;;;sEAEDA,sB,EAAsB;cAHlC,wDAGkC;eAHvB;AACVC,oBAAU,EAAE;AADF,S;AAGuB,Q;;;;;;;;;;;;;;;;;;;;ACLnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMC,MAAM,GAAG;AAClBC,SAAG,EAAE,8BADa,CAElB;;AAFkB,KAAf;AAKA,QAAMC,QAAQ,GAAG,CACtB;AACEC,YAAM,EAAE,oBADV;AAEExF,YAAM,EAAE,CACE;AAAEY,aAAK,EAAE,UAAT;AAAqBX,YAAI,EAAE;AAA3B,OADF,EAEE;AAAEW,aAAK,EAAE,UAAT;AAAqBX,YAAI,EAAE;AAA3B,OAFF,EAGE;AAAEW,aAAK,EAAE,UAAT;AAAqBX,YAAI,EAAE;AAA3B,OAHF,EAIE;AAAEW,aAAK,EAAE,gBAAT;AAA2BX,YAAI,EAAE;AAAjC,OAJF;AAFV,KADsB,EAUtB;AACEuF,YAAM,EAAE,oBADV;AAEExF,YAAM,EAAE,CACE;AAAEY,aAAK,EAAE,0BAAT;AAAqCX,YAAI,EAAE;AAA3C,OADF,EAEE;AAAEW,aAAK,EAAE,2BAAT;AAAsCX,YAAI,EAAE;AAA5C,OAFF,EAGE;AAAEW,aAAK,EAAE,uBAAT;AAAkCX,YAAI,EAAE;AAAxC,OAHF;AAFV,KAVsB,EAmBtB;AACEuF,YAAM,EAAE,UADV;AAEExF,YAAM,EAAE,CACE;AAAEY,aAAK,EAAE,iCAAT;AAA4CX,YAAI,EAAE;AAAlD,OADF,EAEE;AAAEW,aAAK,EAAE,oBAAT;AAA+BX,YAAI,EAAE;AAArC,OAFF;AAFV,KAnBsB,EA0BtB;AACEuF,YAAM,EAAE,eADV;AAEExF,YAAM,EAAE,CACE;AAAEY,aAAK,EAAE,2BAAT;AAAsCX,YAAI,EAAE;AAA5C,OADF,EAEE;AAAEW,aAAK,EAAE,0BAAT;AAAqCX,YAAI,EAAE;AAA3C,OAFF;AAFV,KA1BsB,EAkCtB;AACEuF,YAAM,EAAE,kBADV;AAEExF,YAAM,EAAE,CACE;AAAEY,aAAK,EAAE,mBAAT;AAA8BX,YAAI,EAAE;AAApC,OADF;AAFV,KAlCsB,EAwCtB;AACEuF,YAAM,EAAE,UADV;AAEExF,YAAM,EAAE,CACE;AAAEY,aAAK,EAAE,mBAAT;AAA8BX,YAAI,EAAE;AAApC,OADF;AAFV,KAxCsB,CAAjB;;;;;;;;;;;;;;;;ACLP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASawF,S;AAEX,yBAAqBC,WAArB,EAAuDhF,MAAvD,EAAuE;AAAA;;AAAlD,aAAAgF,WAAA,GAAAA,WAAA;AAAkC,aAAAhF,MAAA,GAAAA,MAAA;AAEtD;;;;sCAEU;AACT,cAAK,KAAKgF,WAAL,CAAiBC,QAAjB,EAAL,EAAmC;AACjC,mBAAO,IAAP;AACD;;AAED,eAAKjF,MAAL,CAAYiC,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,iBAAO,KAAP;AAED;;;;;;;uBAdU8C,S,EAAS,0H,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVL,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACTtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaQ,c;AAoBX,8BACoBC,QADpB,EAEoBH,WAFpB,EAGoBhF,MAHpB,EAGkC;AAAA;;AAFd,aAAAmF,QAAA,GAAAA,QAAA;AACA,aAAAH,WAAA,GAAAA,WAAA;AACA,aAAAhF,MAAA,GAAAA,MAAA;AAtBpB,aAAAE,KAAA,GAAQ,SAAR;AAMA,aAAAkF,IAAA,GAAO;AACLC,cAAI,EAAE,MADD;AAELC,kBAAQ,EAAE,MAFL;AAGLlF,eAAK,EAAE,EAHF;AAILC,kBAAQ,EAAE,EAJL;AAKLkF,cAAI,EAAE,WALD;AAMLC,oBAAU,EAAE;AANP,SAAP;AAQA,aAAAC,SAAA,GAAY;AACVrF,eAAK,EAAE,EADG;AAEVC,kBAAQ,EAAE;AAFA,SAAZ;AASe;;;;mCAEP,CACP;;;mCACU;AAAA;;AAET,eAAK2E,WAAL,CAAiBU,MAAjB,CAAwB,KAAKN,IAA7B,EACKnE,SADL,CAEM,UAAA0E,GAAG,EAAI;AACL;AACAC,wBAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,MAAlC;AACAF,wBAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,GAAG,CAACP,IAAjC;;AACA,kBAAI,CAACD,QAAL,CAAcY,IAAd,CAAmB,sCAAnB,EAA2D,UAA3D,EAAuE;AAAEC,sBAAQ,EAAE;AAAZ,aAAvE;;AACA,kBAAI,CAAChG,MAAL,CAAYiC,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,WARP,EASM,UAAAmC,GAAG,EAAI;AACLT,mBAAO,CAACU,GAAR,CAAYD,GAAZ;AACD,WAXP;AAcG;;;gCACG;AAAA;;AAEN,eAAKY,WAAL,CAAiBiB,MAAjB,CAAwB,KAAKR,SAA7B,EACKxE,SADL,CAEM,UAAA0E,GAAG,EAAI;AACL;AACAC,wBAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,MAAlC;AACAF,wBAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BK,IAAI,CAACC,SAAL,CAAeR,GAAG,CAACP,IAAnB,CAA7B;;AACA,kBAAI,CAACD,QAAL,CAAcY,IAAd,CAAmB,wBAAnB,EAA6C,UAA7C,EAAyD;AAAEC,sBAAQ,EAAE;AAAZ,aAAzD;;AACA,kBAAI,CAAChG,MAAL,CAAYiC,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,WARP,EAQS,UAAAmC,GAAG,EAAI;AACRT,mBAAO,CAACU,GAAR,CAAYD,GAAZ;;AACA,kBAAI,CAACe,QAAL,CAAcY,IAAd,CAAmB,aAAnB,EAAkC,OAAlC,EAA2C;AAACC,sBAAQ,EAAE;AAAX,aAA3C;AACD,WAXP;AAaD;;;;;;;uBA5DUd,c,EAAc,wI,EAAA,mI,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,wgB;AAAA;AAAA;ACV3B;;AACA;;AACE;;AACF;;AACA;;AAEI;;AACE;;AACE;;AAAgB;;AAAe;;AAC/B;;AAAmB;;AAAwB;;AAC7C;;AACA;;AAEM;;AACE;;AAAW;;AAAK;;AAChB;;AAA0D;AAAA;AAAA;;AAA1D;;AACA;;AAAoB;;AAAK;;AAC3B;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAAuD;AAAA;AAAA;;AAAvD;;AACA;;AAAkC;;AAAO;;AAC3C;;AACA;;AAAmC;AAAA,mBAAS,IAAAkB,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAAQ;;AAGnE;;AAEF;;AACF;;AACF;;;;AAhBwE;;AAAA;;AAMH;;AAAA;;;;;;;;;sEDXxDlB,c,EAAc;cAL1B,uDAK0B;eALhB;AACThD,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AET3B;AAAA;;;AAAA;AAAA;AAAA;;QAAaiE,S,GACX,mBACSrH,EADT,EAESwG,UAFT,EAGSc,aAHT,EAISC,KAJT,EAIsB;AAAA;;AAHb,WAAAvH,EAAA,GAAAA,EAAA;AACA,WAAAwG,UAAA,GAAAA,UAAA;AACA,WAAAc,aAAA,GAAAA,aAAA;AACA,WAAAC,KAAA,GAAAA,KAAA;AAEN,K;;;;;;;;;;;;;;;;;ACNL;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,M;AAMX,sBACSxH,EADT,EAESyH,WAFT,EAGSC,MAHT,EAISC,MAJT,EAKSC,MALT,EAMSC,MANT,EAOSC,OAPT,EAQSC,WART,EASS1B,IATT,EASqB;AAAA;;AARZ,aAAArG,EAAA,GAAAA,EAAA;AACA,aAAAyH,WAAA,GAAAA,WAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAA1B,IAAA,GAAAA,IAAA;AACN;;;;wCAd4F;AAAA,cAA7ErG,EAA6E,QAA7EA,EAA6E;AAAA,cAAzEyH,WAAyE,QAAzEA,WAAyE;AAAA,cAA5DC,MAA4D,QAA5DA,MAA4D;AAAA,cAApDC,MAAoD,QAApDA,MAAoD;AAAA,cAA5CC,MAA4C,QAA5CA,MAA4C;AAAA,cAApCC,MAAoC,QAApCA,MAAoC;AAAA,cAA5BC,OAA4B,QAA5BA,OAA4B;AAAA,cAAnBC,WAAmB,QAAnBA,WAAmB;AAAA,cAAN1B,IAAM,QAANA,IAAM;AAC3F,iBAAO,IAAImB,MAAJ,CAAWxH,EAAX,EAAeyH,WAAf,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,MAA5C,EAAoDC,MAApD,EAA4DC,OAA5D,EAAqEC,WAArE,EAAkF1B,IAAlF,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;ACLH;AAAA;;;AAAA;AAAA;AAAA;;QAAa2B,I;AAeT,oBACmBhI,EADnB,EAEmBqG,IAFnB,EAGmBC,QAHnB,EAImBlF,KAJnB,EAKmBC,QALnB,EAMmBkF,IANnB,EAOmBC,UAPnB,EAOqC;AAAA;;AANlB,aAAAxG,EAAA,GAAAA,EAAA;AACA,aAAAqG,IAAA,GAAAA,IAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAlF,KAAA,GAAAA,KAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAkF,IAAA,GAAAA,IAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AAEf;;;;4BAEW;AACX,2BAAW,KAAKH,IAAhB,cAA0B,KAAKC,QAA/B;AACH;;;sCA1BqB2B,G,EAAW;AAC7B,iBAAO,IAAID,IAAJ,CACHC,GAAG,CAAC,IAAD,CADA,EAEHA,GAAG,CAAC,MAAD,CAFA,EAGHA,GAAG,CAAC,UAAD,CAHA,EAIHA,GAAG,CAAC,OAAD,CAJA,EAKHA,GAAG,CAAC,UAAD,CALA,EAMHA,GAAG,CAAC,MAAD,CANA,EAOHA,GAAG,CAAC,YAAD,CAPA,CAAP;AASH;;;;;;;;;;;;;;;;;;;;;ACboJM;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAAU;;AAAG;;AAAW;;AAC1B;;;;;;AAaM;;AAAsC;;AAAI;;;;;;AAC1C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAW;;;;;;AACjD;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAMF;;AAAsC;;AAAQ;;;;;;AAC9C;;AAAuC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAe;;;;;;AACrD;;AAAuC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAIvC;;AAAsC;;AAAK;;;;;;AAC3C;;AAAuC;;AAAoC;;;;;;AAApC;;AAAA;;;;;;AAKvC;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAKA;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAc;;AAC1B;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;AAmBE;;AAAsC;;AAAS;;;;;;AAC/C;;AAAuC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAuB;;;;;;AAC7D;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAQ;;;;;;AAC9C;;AAAuC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAKA;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAc;;AAC1B;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;AArJR;;AACE;;AACE;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AACvC;;AAAU;;AAAG;;AAAW;;AAC1B;;AACA;;AAQF;;AACA;;AACE;;AACE;;AAAgB;;AAAK;;AACvB;;AACA;;AACA;;AACE;;AAIE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAGF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AACF;;AACF;;AAEA;;AAEA;;AACE;;AACE;;AAAgB;;AAA2B;;AAC7C;;AACA;;AACA;;AACE;;AAKE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AAIF;;AACF;;AACF;;AACF;;;;;;AAnJM;;AAAA;;AAWiB;;AAAA;;AA+DI;;AAAA;;AACP;;AAAA;;AAaG;;AAAA;;AAmDI;;AAAA;;AAGjB;;AAAA;;;;QD1QCC,+B;AAgBX,+CACSC,mBADT,EAEUnC,WAFV,EAGUoC,WAHV,EAIUC,MAJV,EAKSC,QALT,EAMSC,aANT,EAOSpE,YAPT,EAQUnD,MARV,EASUwH,KATV,EASgC;AAAA;;AARvB,aAAAL,mBAAA,GAAAA,mBAAA;AACC,aAAAnC,WAAA,GAAAA,WAAA;AACA,aAAAoC,WAAA,GAAAA,WAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACD,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAApE,YAAA,GAAAA,YAAA;AACC,aAAAnD,MAAA,GAAAA,MAAA;AACA,aAAAwH,KAAA,GAAAA,KAAA,CAAsB,CAjBhC;AACA;AACA;;AACA,aAAAC,QAAA,GAAsB,EAAtB;AACA,aAAAC,YAAA,GAA0B,EAA1B;AACA,aAAAC,aAAA,GAAgC,EAAhC;AACA,aAAAC,iBAAA,GAA8B,CAAC,MAAD,EAAS,aAAT,EAAwB,UAAxB,EAAoC,OAApC,EAA4C,OAA5C,EAAqD,MAArD,EAA6D,QAA7D,CAA9B;AACA,aAAAC,sBAAA,GAAmC,CAAC,UAAD,EAAa,MAAb,EAAqB,UAArB,EAAiC,MAAjC,EAAyC,QAAzC,CAAnC;AAWK;;;;mCAEG;AAAA;;AAGN;AACA;AAEA,eAAKC,WAAL,GAAoB5B,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAApB;AAEA,eAAKC,sBAAL,GAA8B,KAAKb,WAAL,CAAiBvG,KAAjB,CAAuB;AAC/C9B,gBAAI,EAAE,CAAC,WAAD,CADyC;AAE/CmJ,mBAAO,EAAE,CAAC,IAAD,CAFsC;AAG/CC,oBAAQ,EAAE,CAAC,IAAIC,IAAJ,CAAS,WAAT,CAAD,CAHqC;AAI/CC,sBAAU,EAAE,CAAC,IAAD,EAAO,0DAAW9H,QAAlB,CAJmC;AAK/C+H,uBAAW,EAAE,CAAC,IAAD,EAAO,0DAAW/H,QAAlB,CALkC;AAM/CgI,gBAAI,EAAE,CAAC,IAAD,EAAO,0DAAWhI,QAAlB,CANyC;AAO/CiI,iBAAK,EAAE,CAAC,IAAD,EAAO,0DAAWjI,QAAlB,CAPwC;AAQ/CkI,qBAAS,EAAE,CAAC,IAAD,EAAO,0DAAWlI,QAAlB,CARoC;AAS/CmI,qBAAS,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAWnI,QAAZ,EAAsB,0DAAWO,SAAX,CAAqB,EAArB,CAAtB,CAAP,CAToC;AAU/C6H,qBAAS,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAWpI,QAAZ,EAAsB,0DAAWO,SAAX,CAAqB,EAArB,CAAtB,CAAP,CAVoC;AAW/C8H,gBAAI,EAAE,CAAC,IAAD,EAAO,0DAAWrI,QAAlB,CAXyC;AAY/CL,iBAAK,EAAE,CAAC,IAAD,EAAO,0DAAWK,QAAlB;AAZwC,WAAvB,CAA9B;AAiBA,eAAKiH,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,iBAAgB;AAAA,gBAAb2F,MAAa,SAAbA,MAAa;;AAChD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,oBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,sBAAI,CAACoC,qBAAL,CAA4BnC,MAAM,CAACD,MAAnC;AACD,eAFD,MAEO;AACL,sBAAI,CAACoC,qBAAL,CAA4B,KAA5B;AACD;AACF;AACF,WAVL;AAYD;;;kCAESC,S,EAAsB;AAC9B,cAAIvH,OAAO,GAAoB,IAA/B;AACAuH,mBAAS,CAACC,KAAV;AACAD,mBAAS,CAACE,eAAV;AACA/J,gBAAM,CAACF,IAAP,CAAY+J,SAAS,CAACG,QAAtB,EAAgCC,OAAhC,CAAwC,UAAC/D,IAAD,EAAU;AAChD5D,mBAAO,GAAGuH,SAAS,CAACG,QAAV,CAAmB9D,IAAnB,CAAV;AACA5D,mBAAO,CAAC4H,SAAR,CAAkB,IAAlB;AACD,WAHD;AAIAL,mBAAS,CAACK,SAAV,CAAoB;AAAEC,mBAAO,EAAE;AAAX,WAApB;AACD;;;8CAEqBtK,E,EAAU;AAAA;;AAC9B,cAAKA,EAAE,KAAK,KAAZ,EAAkB;AAEhB,iBAAKuK,kBAAL,GAA0B,IAA1B;AACA,iBAAK9B,QAAL,GAAgB,IAAhB;AACA,iBAAKE,aAAL,GAAqB,IAArB;AACA,iBAAK6B,SAAL,CAAe,KAAKvB,sBAApB,EALgB,CAMd;AACA;AACA;AACA;;AACF;AACD,WAXD,MAWM;AACJ,iBAAKd,mBAAL,CAAyBsC,aAAzB,CAAuCzK,EAAvC,EACCiC,SADD,CACW,UAAAsI,kBAAkB,EAAI;AAC/B;AACA;AACA;AACA,kBAAIA,kBAAJ,EAAwB;AAAA,oBACd5B,aADc,GAC6H4B,kBAD7H,CACd5B,aADc;AAAA,oBACC5I,IADD,GAC6HwK,kBAD7H,CACCxK,IADD;AAAA,oBACOC,GADP,GAC6HuK,kBAD7H,CACOvK,EADP;AAAA,oBACWuJ,IADX,GAC6HgB,kBAD7H,CACWhB,IADX;AAAA,oBACiBF,UADjB,GAC6HkB,kBAD7H,CACiBlB,UADjB;AAAA,oBAC6BG,KAD7B,GAC6He,kBAD7H,CAC6Bf,KAD7B;AAAA,oBACoCf,QADpC,GAC6H8B,kBAD7H,CACoC9B,QADpC;AAAA,oBAC8CgB,SAD9C,GAC6Hc,kBAD7H,CAC8Cd,SAD9C;AAAA,oBACyDC,SADzD,GAC6Ha,kBAD7H,CACyDb,SADzD;AAAA,oBACoEC,SADpE,GAC6HY,kBAD7H,CACoEZ,SADpE;AAAA,oBAC+EL,WAD/E,GAC6HiB,kBAD7H,CAC+EjB,WAD/E;AAAA,oBAC4FH,QAD5F,GAC6HoB,kBAD7H,CAC4FpB,QAD5F;AAAA,oBACsGD,OADtG,GAC6HqB,kBAD7H,CACsGrB,OADtG;AAAA,oBAC+GU,IAD/G,GAC6HW,kBAD7H,CAC+GX,IAD/G;AAAA,oBACoH1I,KADpH,GAC6HqJ,kBAD7H,CACoHrJ,KADpH;AAEtB,sBAAI,CAACqJ,kBAAL,GAA0BA,kBAA1B;AACA,sBAAI,CAAC9B,QAAL,GAAgB8B,kBAAkB,CAAC9B,QAAnC;AACA,sBAAI,CAACE,aAAL,GAAqB4B,kBAAkB,CAAC5B,aAAxC;;AACA,sBAAI,CAACM,sBAAL,CAA4ByB,QAA5B,CAAqC;AAAC3K,sBAAI,EAAJA,IAAD;AAAOmJ,yBAAO,EAAPA,OAAP;AAAgBC,0BAAQ,EAARA,QAAhB;AAA0BE,4BAAU,EAAVA,UAA1B;AAAsCC,6BAAW,EAAXA,WAAtC;AAAmDC,sBAAI,EAAJA,IAAnD;AAAyDC,uBAAK,EAALA,KAAzD;AAAgEC,2BAAS,EAATA,SAAhE;AAA2EC,2BAAS,EAATA,SAA3E;AAAsFC,2BAAS,EAATA,SAAtF;AAAiGC,sBAAI,EAAJA,IAAjG;AAAuG1I,uBAAK,EAALA;AAAvG,iBAArC;AACD;AACF,aAZD;AAaD;AAGF;;;+BAGM;AAAA;;AACL;AADK,cAEEnB,IAFF,GAEU,KAAKkJ,sBAAL,CAA4B0B,KAFtC,CAEE5K,IAFF;;AAIL,cAAK,KAAKwK,kBAAV,EAA+B;AAC7B;AACA,gBAAMrI,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAK+G,sBAAL,CAA4B0B,KADvB,CAAG,EACyB;AACpC3K,gBAAE,EAAE,KAAKuK,kBAAL,CAAwBvK;AADQ,aADzB,CAAb;;AAIA,iBAAKmI,mBAAL,CAAyByC,wBAAzB,CAAmD1I,IAAnD,EACGD,SADH,CACc,UAAC8C,IAAD,EAAe;AAEzB,kBAAI,MAAI,CAAC+E,aAAL,CAAmBrC,WAAvB,EAAoC;AAClC,oBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,MAAI,CAAChB,aAAvB,CAApB;;AACAe,mBAAG,CAACnD,MAAJ,GAAa,MAAI,CAACoB,WAAL,CAAiB9I,EAA9B;AACA6K,mBAAG,CAACjD,MAAJ,GAAa,WAAb,CAHkC,CAIhC;;AACF,sBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,wBAAM,EAAEiD;AAAV,iBAArB,CAArB;AACD,eAND,MAMO;AACL,sBAAI,CAAC7J,MAAL,CAAYgK,aAAZ,CAA0B,sBAA1B;AACD,eAVwB,CAWzB;;;AAEA,oBAAI,CAAC7G,YAAL,CAAkBe,OAAlB,CAA0B,2EAAqEnF,IAArE,CAA1B;AAED,aAhBH;AAkBD,WAxBD,MAwBO;AACL;AAEA,iBAAKoI,mBAAL,CAAyB8C,wBAAzB,CAAmD,KAAKhC,sBAAL,CAA4B0B,KAA/E,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB;AAEA,kBAAM8F,GAAG,GAAW,4DAAOC,SAAP,CAAkB,MAAI,CAAChB,aAAvB,CAApB;;AACAe,iBAAG,CAAClD,MAAJ,GAAa5C,IAAI,CAACwF,kBAAL,CAAwBvK,EAArC;AACA6K,iBAAG,CAAC9C,WAAJ,GAAkBhD,IAAI,CAACwF,kBAAL,CAAwBvK,EAA1C;AACA6K,iBAAG,CAACnD,MAAJ,GAAa,MAAI,CAACoB,WAAL,CAAiB9I,EAA9B;AACA6K,iBAAG,CAACjD,MAAJ,GAAa,WAAb,CAPyB,CAQzB;;AACA,oBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAqB,4EAAsB;AAAEnD,sBAAM,EAAEiD;AAAV,eAAtB,CAArB,EATyB,CAWzB;;;AACA,oBAAI,CAACd,qBAAL,CAA2BhF,IAAI,CAACwF,kBAAL,CAAwBvK,EAAnD;;AACA,oBAAI,CAACmE,YAAL,CAAkBe,OAAlB,CAA0B,sEAA+DnF,IAA/D,CAA1B,EAbyB,CAezB;AACA;;AACH,aAlBH;AAmBD;AAIF;;;gCAGOC,E,EAAU;AAAA;;AAEhB,eAAKmI,mBAAL,CAAyB+C,wBAAzB,CAAmDlL,EAAnD,EACSiC,SADT,CACqB,YAAK;AAChB,kBAAI,CAACkG,mBAAL,CAAyBgD,sBAAzB;;AACA,kBAAI,CAAChH,YAAL,CAAkBU,IAAlB,CAAuB,0DAAvB;AACD,WAJT;AAMD,S,CAED;;;;sCACW;AAAA;;AACT,eAAKyD,QAAL,CAAc8C,WAAd,GACGnJ,SADH,CACa,UAAAwG,QAAQ;AAAA,mBAAI,MAAI,CAACA,QAAL,GAAgBA,QAApB;AAAA,WADrB;AAED;;;+CACmB;AAAA;;AAClB,cAAM4C,gBAAgB,GAAG,KAAKhD,MAAL,CAAYtB,IAAZ,CAAiB,2EAAjB,EAAmC;AAC1D7E,gBAAI,EAAE;AAAEoJ,uBAAS,EAAE,KAAKf,kBAAL,CAAwBvK,EAArC;AACEuL,uBAAS,EAAE;AADb;AADoD,WAAnC,CAAzB;AAKAF,0BAAgB,CAACG,WAAjB,GAA+BvJ,SAA/B,CAA0C,UAAAwJ,MAAM,EAAI;AAClD,mBAAI,CAAC1B,qBAAL,CAA2B,OAAI,CAACQ,kBAAL,CAAwBvK,EAAnD;AACD,WAFD;AAID;;;gDACuBA,E,EAAU;AAAA;;AAChC,cAAMqL,gBAAgB,GAAG,KAAKhD,MAAL,CAAYtB,IAAZ,CAAiB,2EAAjB,EAAmC;AAC1D7E,gBAAI,EAAE;AAAEqJ,uBAAS,EAAEvL;AAAb;AADoD,WAAnC,CAAzB;AAGAqL,0BAAgB,CAACG,WAAjB,GAA+BvJ,SAA/B,CAA0C,UAAAwJ,MAAM,EAAI;AAClD,mBAAI,CAAC1B,qBAAL,CAA2B,OAAI,CAACQ,kBAAL,CAAwBvK,EAAnD;AACD,WAFD;AAGD;;;sCACcA,E,EAAU;AAAA;;AAEvB,eAAKsI,QAAL,CAAcoD,aAAd,CAA6B1L,EAA7B,EACSiC,SADT,CACqB,YAAK;AAChB,mBAAI,CAACqG,QAAL,CAAc8C,WAAd;;AACA,mBAAI,CAACjH,YAAL,CAAkBU,IAAlB,CAAuB,sCAAvB;;AACA,mBAAI,CAACkF,qBAAL,CAA2B,OAAI,CAACQ,kBAAL,CAAwBvK,EAAnD;AACD,WALT;AAOD,S,CAED;;;;2CACgB;AAAA;;AACd,eAAKuI,aAAL,CAAmBoD,gBAAnB,GACG1J,SADH,CACa,UAAA0G,aAAa;AAAA,mBAAI,OAAI,CAACA,aAAL,GAAqBA,aAAzB;AAAA,WAD1B;AAED;;;oDACwB;AAAA;;AACvB,cAAMiD,qBAAqB,GAAG,KAAKvD,MAAL,CAAYtB,IAAZ,CAAiB,4FAAjB,EAAwC;AACpE7E,gBAAI,EAAE;AAAEoJ,uBAAS,EAAE,KAAKf,kBAAL,CAAwBvK,EAArC;AACE6L,4BAAc,EAAE;AADlB;AAD8D,WAAxC,CAA9B;AAKAD,+BAAqB,CAACJ,WAAtB,GAAoCvJ,SAApC,CAA+C,UAAAwJ,MAAM,EAAI;AACvD,mBAAI,CAAC1B,qBAAL,CAA2B,OAAI,CAACQ,kBAAL,CAAwBvK,EAAnD;;AACA,gBAAI,OAAI,CAAC8J,aAAL,CAAmBrC,WAAvB,EAAoC;AAClC,kBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,OAAI,CAAChB,aAAvB,CAApB;;AACAe,iBAAG,CAACnD,MAAJ,GAAa,OAAI,CAACoB,WAAL,CAAiB9I,EAA9B;AACA6K,iBAAG,CAACjD,MAAJ,GAAa,WAAb,CAHkC,CAIhC;;AACF,qBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,sBAAM,EAAEiD;AAAV,eAArB,CAArB;AACD,aAND,MAMO;AACL,qBAAI,CAAC7J,MAAL,CAAYgK,aAAZ,CAA0B,sBAA1B;AACD;AAGF,WAbD;AAcD;;;qDAE4BhL,E,EAAU;AAAA;;AACrC,cAAM4L,qBAAqB,GAAG,KAAKvD,MAAL,CAAYtB,IAAZ,CAAiB,4FAAjB,EAAwC;AACpE7E,gBAAI,EAAE;AAAE2J,4BAAc,EAAE7L;AAAlB;AAD8D,WAAxC,CAA9B;AAGA4L,+BAAqB,CAACJ,WAAtB,GAAoCvJ,SAApC,CAA+C,UAAAwJ,MAAM,EAAI;AACvD,mBAAI,CAAC1B,qBAAL,CAA2B,OAAI,CAACQ,kBAAL,CAAwBvK,EAAnD;AACD,WAFD;AAGD;;;2CAEmBA,E,EAAU;AAAA;;AAE5B,eAAKuI,aAAL,CAAmBuD,kBAAnB,CAAuC9L,EAAvC,EACSiC,SADT,CACqB,YAAK;AAEhB,mBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,0DAAvB;;AACA,mBAAI,CAACkF,qBAAL,CAA2B,OAAI,CAACQ,kBAAL,CAAwBvK,EAAnD;AACD,WALT;AAOD;;;;;;;uBAjQUkI,+B,EAA+B,0L,EAAA,mI,EAAA,2H,EAAA,mI,EAAA,wJ,EAAA,yK,EAAA,6I,EAAA,wH,EAAA,mH;AAAA,K;;;YAA/BA,+B;AAA+B,mD;AAAA,e;AAAA,a;AAAA,qyE;AAAA;AAAA;AC1B5C;;AAGE;;AACE;;AAAgB;;AAAwB;;AAExC;;AACE;;AAA2C;AAAA,mBAAU,IAAA6D,IAAA,EAAV;AAAgB,WAAhB;;AACzC;;AAEE;;AAEE;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AACA;;AACE;;AAMA;;AAIA;;AACA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACE;;AAMA;;AAIA;;AACA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACE;;AACE;;AAAW;;AAA0B;;AACvC;;AAEJ;;AACA;;AACE;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AAEE;;AACE;;AAKA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACE;;AACE;;AAAgC;;AAAU;;AAC1C;;AAA6B;;AAAO;;AACpC;;AAA2B;;AAAK;;AAClC;;AACA;;AACE;;AACF;;AACF;;AAEJ;;AAEF;;AAGF;;AACE;;AAKA;;AAAW;;AAA0B;;AACvC;;AACA;;AAEA;;AACE;;AAKA;;AAAW;;AAA0B;;AACvC;;AACA;;AACA;;AACE;;AAMA;;AAAW;;AAA0B;;AACvC;;AACA;;AACA;;AACE;;AAKA;;AAAW;;AAA0B;;AACvC;;AACA;;AACA;;AAOE;;AACF;;AAIA;;AACF;;AACF;;AACA;;AA6JF;;;;;;;;AAnSY;;AAAA;;AAaI;;AAAA;;AAKA;;AAAA;;AAUA;;AAAA;;AAKA;;AAAA;;AA2FR;;AAAA;;AAUC;;AAAA;;;;;;;;;sEDnHI7D,+B,EAA+B;cAL3C,uDAK2C;eALjC;AACThF,kBAAQ,EAAE,8BADD;AAETC,qBAAW,EAAE,2CAFJ;AAGTC,mBAAS,EAAE,CAAC,2CAAD;AAHF,S;AAKiC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5B5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKI;;AAEE;;AACE;;AAEE;;AACE;;AAKF;;AAEA;;AACE;;AAKF;;AAGE;;AACE;;AAMA;;AAIA;;AACF;;AAEJ;;AACA;;AAGE;;AACE;;AAKF;;AAEA;;AACE;;AAMA;;AAIA;;AACF;;AAEA;;AACE;;AAKF;;AAEF;;AACF;;AAIF;;AAEE;;AACE;;AAKF;;AACA;;AACE;;AAKF;;AACA;;AACA;;AACE;;AAKF;;AACA;;AACA;;AACE;;AAKF;;AAGF;;AAEF;;;;;;;;;;AAtGY;;AAAA;;AAQA;;AAAA;;AAUE;;AAAA;;AADA;;AAKA;;AAAA;;AAaF;;AAAA;;AASA;;AAAA;;AADA;;AAKA;;AAAA;;AASA;;AAAA;;AAeJ;;AAAA;;AAOA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;;;;;AAoBF;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIvC;;AAAsC;;AAAW;;;;;;AACjD;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAKF;;AAAsC;;AAAQ;;;;;;AAC9C;;AAAuC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIvC;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAGzC;;;;;;AACA;;;;;;AAOE;;AAAsC;;AAAS;;;;;;AAC/C;;AAAuC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIvC;;AAAsC;;AAAI;;;;;;AAC1C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIvC;;AAAsC;;AAAQ;;;;;;AAC9C;;AAAuC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAGzC;;;;;;AACA;;;;QD5JO4I,+B;AAYX,+CACSC,yBADT,EAEUC,aAFV,EAGSlL,MAHT,EAIUwH,KAJV,EAIgC;AAAA;;AAHvB,aAAAyD,yBAAA,GAAAA,yBAAA;AACC,aAAAC,aAAA,GAAAA,aAAA;AACD,aAAAlL,MAAA,GAAAA,MAAA;AACC,aAAAwH,KAAA,GAAAA,KAAA;AAZV,aAAA2D,MAAA,GAAqB,EAArB;AAIA,aAAAC,cAAA,GAAiB,IAAjB;AACA,aAAAxD,iBAAA,GAA8B,CAAC,MAAD,EAAS,aAAT,EAAwB,UAAxB,EAAoC,OAApC,CAA9B;AACA,aAAAC,sBAAA,GAAmC,CAAC,UAAD,EAAa,MAAb,EAAqB,UAArB,CAAnC;AAOI;;;;mCAEI;AAAA;;AACN,eAAKL,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,iBAAgB;AAAA,gBAAb2F,MAAa,SAAbA,MAAa;;AACpD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,qBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAGA,MAAM,CAACG,WAAV,EAAuB;AACrB,uBAAI,CAACgC,qBAAL,CAA2BnC,MAAM,CAACG,WAAlC;AACD,eALiB,CAMlB;;AACD;AACF,WATD,EADM,CAWN;AAED;;;8CAEqB/H,E,EAAU;AAAA;;AAC9B,eAAKiM,yBAAL,CAA+BxB,aAA/B,CAA6CzK,EAA7C,EACGiC,SADH,CACa,UAAAsI,kBAAkB,EAAI;AAC/B,gBAAI,CAACA,kBAAL,EAAwB;AACtB;AACD;;AACD,mBAAI,CAACA,kBAAL,GAA0BA,kBAA1B;AACA,mBAAI,CAAC9B,QAAL,GAAgB8B,kBAAkB,CAAC9B,QAAnC;AACA,mBAAI,CAACE,aAAL,GAAqB4B,kBAAkB,CAAC5B,aAAxC;AAED,WATH;AAUD;;;kCAGSZ,W,EAAqB;AAAA;;AAC7B,cAAI,CAACA,WAAL,EAAkB;AAAE;AAAS;;AAC7B,eAAKmE,aAAL,CAAmBG,kBAAnB,CAAsCtE,WAAtC,EAAmD9F,SAAnD,CAA8D,UAAAkK,MAAM,EAAI;AACtE;AACA,mBAAI,CAACA,MAAL,GAAcA,MAAd;AACD,WAHD;AAID;;;;;;;uBAtDUH,+B,EAA+B,0L,EAAA,8I,EAAA,uH,EAAA,kH;AAAA,K;;;YAA/BA,+B;AAA+B,mD;AAAA,e;AAAA,a;AAAA,++C;AAAA;AAAA;AChB5C;;AAEE;;AAEE;;AAiHF;;AAIA;;AACE;;AAAI;;AAAK;;AACT;;AAIE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACA;;AACF;;AAEA;;AACA;;AAAI;;AAA2B;;AAC/B;;AACE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACA;;AACF;;AAEF;;AAEF;;;;AA7Kc;;AAAA;;AAuHO;;AAAA;;AA0BI;;AAAA;;AACP;;AAAA;;AAKG;;AAAA;;AAgBI;;AAAA;;AACP;;AAAA;;;;;;;;;sED5JLA,+B,EAA+B;cAL3C,uDAK2C;eALjC;AACT9I,kBAAQ,EAAE,8BADD;AAETC,qBAAW,EAAE,2CAFJ;AAGTqC,gBAAM,EAAE,CAAC,EAAD;AAHC,S;AAKiC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsBI;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAQ;;;;;;AAC/C;;AAAwC;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAS;;;;;;AAChD;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAY;;;;;;AACnD;;AAAwC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAwC;;AAAoB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAoD;;AAAU;;AAAM;;AAChI;;AAAW;;;;;;AAKX;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;QD/CW8G,2B;AAIX,2CACSnE,mBADT,EAEShE,YAFT,EAGUqE,KAHV,EAIUxH,MAJV,EAIwB;AAAA;;AAHf,aAAAmH,mBAAA,GAAAA,mBAAA;AACA,aAAAhE,YAAA,GAAAA,YAAA;AACC,aAAAqE,KAAA,GAAAA,KAAA;AACA,aAAAxH,MAAA,GAAAA,MAAA;AANV,aAAAuL,mBAAA,GAA4C,EAA5C;AACA,aAAAC,gBAAA,GAA6B,CAAC,MAAD,EAAS,SAAT,EAAoB,UAApB,EAAgC,YAAhC,EAA8C,MAA9C,EAAsD,QAAtD,CAA7B;AAMK;;;;mCAEG;AACN,eAAKrB,sBAAL;AACD;;;iDAEqB;AAAA;;AAEpB,eAAKhD,mBAAL,CAAyBgD,sBAAzB,GACGlJ,SADH,CACa,UAAAsK,mBAAmB;AAAA,mBAAI,OAAI,CAACA,mBAAL,GAA2BA,mBAA/B;AAAA,WADhC,EAFoB,CAIlB;;AACH;;;6BAEIvM,E,EAAY;AACf,eAAKwI,KAAL,CAAWuC,QAAX,CAAqB,mFAAa;AAAEpD,kBAAM,EAAE3H;AAAV,WAAb,CAArB;AACA,eAAKgB,MAAL,CAAYgK,aAAZ,CAA0B,0BAA1B;AACD;;;gCACOhL,E,EAAU;AAAA;;AAEhB,eAAKmI,mBAAL,CAAyB+C,wBAAzB,CAAmDlL,EAAnD,EACSiC,SADT,CACqB,YAAK;AAEhB,mBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,0DAAvB;;AACA,mBAAI,CAACsG,sBAAL;AACD,WALT;AAOD;;;;;;;uBAnCUmB,2B,EAA2B,0L,EAAA,4I,EAAA,kH,EAAA,uH;AAAA,K;;;YAA3BA,2B;AAA2B,8C;AAAA,e;AAAA,a;AAAA,kxB;AAAA;AAAA;ACfxC;;AACE;;AACA;;AAAI;;AAA0B;;AAC9B;;AACE;;AAA2D;;AAAM;;AAEjE;;AAA0C;;AAA0B;;AACtE;;AACF;;AAKA;;AAEA;;AAME;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AAKF;;AAEA;;AACA;;AACF;;;;AA3D+B;;AAAA;;AAWd;;AAAA;;AA8CI;;AAAA;;AACP;;AAAA;;;;;;;;;sED/CDA,2B,EAA2B;cALvC,uDAKuC;eAL7B;AACTpJ,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK6B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEfxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaaqJ,qB;AAMX,qCACSlE,aADT,EAESvH,MAFT,EAGS0L,cAHT,EAIUC,uBAJV,EAKUC,SALV,EAMkC1K,IANlC,EAOSiC,YAPT,EAOmC;AAAA;;AAN1B,aAAAoE,aAAA,GAAAA,aAAA;AACA,aAAAvH,MAAA,GAAAA,MAAA;AACA,aAAA0L,cAAA,GAAAA,cAAA;AACC,aAAAC,uBAAA,GAAAA,uBAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACwB,aAAA1K,IAAA,GAAAA,IAAA;AACzB,aAAAiC,YAAA,GAAAA,YAAA;AACF;;;;mCAEC;AACN,cAAG,KAAKjC,IAAL,CAAU2J,cAAV,KAA6B,KAAhC,EAAsC;AACpC,iBAAKgB,eAAL,CAAqB,KAAK3K,IAAL,CAAU2J,cAA/B;AACD;;AACD,eAAKiB,gBAAL,GAAwB,KAAKH,uBAAL,CAA6B9K,KAA7B,CAAmC;AACzDkL,oBAAQ,EAAC,CAAC,IAAD,EAAO,0DAAWxL,QAAlB,CADgD;AAEzDkD,gBAAI,EAAC,CAAC,IAAD,EAAO,0DAAWlD,QAAlB,CAFoD;AAGzDyL,oBAAQ,EAAC,CAAC,IAAD,EAAO,0DAAWzL,QAAlB,CAHgD;AAIzD0L,wBAAY,EAAC,CAAC,IAAD,EAAO,0DAAW1L,QAAlB,CAJ4C;AAKzD2L,yBAAa,EAAC,CAAC,IAAD,EAAO,0DAAW3L,QAAlB,CAL2C;AAMzD4L,4BAAgB,EAAC,CAAC,IAAD,EAAO,0DAAW5L,QAAlB,CANwC;AAOzD+J,qBAAS,EAAC,CAAC,KAAKpJ,IAAL,CAAUoJ,SAAX;AAP+C,WAAnC,CAAxB;AAUD;;;wCAEetL,E,EAAU;AAAA;;AACxB,eAAKuI,aAAL,CAAmBsE,eAAnB,CAAmC7M,EAAnC,EACGiC,SADH,CACa,UAAAmL,YAAY,EAAI;AACzB,gBAAG,CAACA,YAAJ,EAAiB;AACf,qBAAI,CAACC,aAAL;AACD;;AAHwB,gBAIlBN,QAJkB,GAIoEK,YAJpE,CAIlBL,QAJkB;AAAA,gBAIRtI,IAJQ,GAIoE2I,YAJpE,CAIR3I,IAJQ;AAAA,gBAIFuI,QAJE,GAIoEI,YAJpE,CAIFJ,QAJE;AAAA,gBAIQC,YAJR,GAIoEG,YAJpE,CAIQH,YAJR;AAAA,gBAIsBC,aAJtB,GAIoEE,YAJpE,CAIsBF,aAJtB;AAAA,gBAIqCC,gBAJrC,GAIoEC,YAJpE,CAIqCD,gBAJrC;AAAA,gBAIuD7B,SAJvD,GAIoE8B,YAJpE,CAIuD9B,SAJvD;AAKzB,mBAAI,CAAC8B,YAAL,GAAoBA,YAApB;;AACA,mBAAI,CAACN,gBAAL,CAAsBpC,QAAtB,CAA+B;AAACqC,sBAAQ,EAARA,QAAD;AAAWtI,kBAAI,EAAJA,IAAX;AAAiBuI,sBAAQ,EAARA,QAAjB;AAA2BC,0BAAY,EAAZA,YAA3B;AAAyCC,2BAAa,EAAbA,aAAzC;AAAwDC,8BAAgB,EAAhBA,gBAAxD;AAA0E7B,uBAAS,EAATA;AAA1E,aAA/B;AACD,WARH;AASD;;;wCAEY;AACX,eAAKsB,SAAL,CAAeU,KAAf;AACD;;;+BAEM;AAAA;;AAAA,cAEEP,QAFF,GAEc,KAAKD,gBAAL,CAAsBnC,KAFpC,CAEEoC,QAFF,EAGL;;AACA,cAAK,KAAKK,YAAV,EAAyB;AACvB;AACA,gBAAMlL,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAK4K,gBAAL,CAAsBnC,KADjB,CAAG,EACmB;AAC9B3K,gBAAE,EAAE,KAAKoN,YAAL,CAAkBpN,EADQ;AAE9BsL,uBAAS,EAAE,KAAK8B,YAAL,CAAkB9B;AAFC,aADnB,CAAb;;AAKA,iBAAK/C,aAAL,CAAmBgF,kBAAnB,CAAuCrL,IAAvC,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,2EAAqE6H,QAArE,CAA1B;;AACA,qBAAI,CAACM,aAAL;AACD,aAJH;AAMD,WAbD,MAaO;AACL;AAEA,iBAAK9E,aAAL,CAAmBiF,kBAAnB,CAAuC,KAAKV,gBAAL,CAAsBnC,KAA7D,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,2EAAmE6H,QAAnE,CAA1B;;AACA,qBAAI,CAACM,aAAL;AACH,aAJH;AAKD;AAIF;;;;;;;uBA7EUZ,qB,EAAqB,wK,EAAA,uH,EAAA,+H,EAAA,2H,EAAA,sI,EAAA,gEAYtB,wEAZsB,C,EAYP,4I;AAAA,K;;;YAZdA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,ozB;AAAA;AAAA;ACXlC;;AACE;;AACE;;AAAmC;;AAAwB;;AAC7D;;AACF;;AAEA;;AAAqC;AAAA,mBAAU,IAAAV,IAAA,EAAV;AAAgB,WAAhB;;AACnC;;AAEE;;AACE;;AACE;;AAA0B;;AAAI;;AAC9B;;AAA2B;;AAAK;;AAChC;;AAA0B;;AAAI;;AAChC;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AACF;;AACA;;AACE;;AACE;;AAKA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACE;;AAKA;;AAAW;;AAA0B;;AACvC;;AACA;;AACE;;AAKA;;AAAW;;AAA0B;;AACvC;;AACF;;AACE;;AACE;;AAOE;;AACF;;AACA;;AAAoC;;AAAM;;AAC5C;;AAEJ;;;;AAhEM;;AAAA;;AAyDE;;AAAA;;;;;;;;;sEDpDKU,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTvJ,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;gBAYQqJ,qB;AAAqB;kBAA1D,oDAA0D;mBAAnD,wE;AAAmD;;;;;;;;;;;;;;;;;;;;;;AEzB/D;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeagB,mB;AAOX,mCACSC,kBADT,EAEUlF,KAFV,EAEgC;AAAA;;AADvB,aAAAkF,kBAAA,GAAAA,kBAAA;AACC,aAAAlF,KAAA,GAAAA,KAAA;AANV,aAAAmF,QAAA,GAAW,KAAX;AAOK;;;;mCAEG;AAAA;;AACN,eAAKD,kBAAL,CAAwBE,mBAAxB;AAEA,eAAKpF,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,iBAAgB;AAAA,gBAAb2F,MAAa,SAAbA,MAAa;;AACpD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,qBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,uBAAI,CAACkG,cAAL,CAAqBjG,MAAM,CAACD,MAA5B;AACD,eAFD,MAEO;AACL,uBAAI,CAACkG,cAAL,CAAqB,KAArB;AACD;AACF;AACF,WAVD;AAWD;;;uCAEclG,M,EAAgB;AAAA;;AAE7B,cAAKA,MAAM,KAAK,KAAhB,EAAwB;AACtBhD,mBAAO,CAACU,GAAR,CAAY,oBAAZ;AACA,iBAAKqI,kBAAL,CAAwBE,mBAAxB;AAED,WAJD,MAIO;AACL;AACA,iBAAKF,kBAAL,CAAwBI,eAAxB,CAAwCnG,MAAxC,EAAgD1F,SAAhD,CAA2D,UAAA8L,YAAY,EAAI;AACzEpJ,qBAAO,CAACU,GAAR,CAAY,qBAAZ,EAAmC0I,YAAnC;;AACA,kBAAKA,YAAL,EAAmB;AACnB,uBAAI,CAACL,kBAAL,CAAwBM,SAAxB,CAAkCD,YAAY,CAAC,cAAD,CAA9C;AACC;AACF,aALD;AAMD;AAEF;;;iCAEQpD,K,EAAgB;AAAA;;AACvB;AACA,eAAK+C,kBAAL,CAAwBtL,IAAxB,CAA6B+H,QAA7B,CAAsC,aAAtC,EAAqDO,QAArD,CAA8D,KAAKZ,aAAL,CAAmB/B,WAAjF;AACA,eAAK2F,kBAAL,CAAwBO,gBAAxB,CAAyC,KAAKP,kBAAL,CAAwBtL,IAAxB,CAA6BuI,KAAtE,EAA6E1I,SAA7E,CAAwF,UAAA8C,IAAI,EAAI;AAC9F,gBAAK,OAAI,CAAC+E,aAAL,CAAmBrC,WAAxB,EAAsC;AAClC;AACA,kBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,OAAI,CAAChB,aAAvB,CAApB;;AACAe,iBAAG,CAAClD,MAAJ,GAAa5C,IAAI,CAAC/E,EAAlB;AACA6K,iBAAG,CAACjD,MAAJ,GAAa,WAAb,CAJkC,CAKlC;;AACA,qBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAoB,2EAAqB;AAAEnD,sBAAM,EAAEiD;AAAV,eAArB,CAApB,EANkC,CAOlC;;AACD;AACJ,WAVD,EAHuB,CAcvB;AACD;;;mCAEU,CAEV;;;;;;;uBAjEU4C,mB,EAAmB,iJ,EAAA,kH;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,e;AAAA,a;AAAA,6f;AAAA;AAAA;;;ACfhC;;AAEI;;AAEI;;AACI;;AACE;;AACA;;AAAgB;;AAA+B;;AAC/C;;AAAmB;;AAAgC;;AACrD;;AAEA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAiE;AAAA,mBAAU,IAAAS,QAAA,EAAV;AAAoB,WAApB;;AAC/D;;AAIA;;AAAyH;AAAA;;AAAA;;AAAA,mBAAU,IAAAC,QAAA,WAAV;AAA+B,WAA/B;;AACvH;;AACE;;AAAkE;;AAAI;;AACtE;;AACF;;AACA;;AACE;;AAAmE;;AAAK;;AACxE;;AACF;;AACF;;AAGJ;;AAEA;;AACF;;AAEN;;AACA;;AA+BJ;;;;AAtDoB;;AAAA;;AAMiB;;AAAA;;AAIA;;AAAA;;;;;;;;;sEDZxBV,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTvK,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTqC,gBAAM,EAAE,CAAC,EAAD;AAHC,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEfhuCM;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAIA;;AAAU;;AAAG;;AAAW;;AAC1B;;;;;;AAJE;;;;;;AAgBI;;AAAsC;;AAAS;;;;;;;;AAC/C;;AAAuC;;AACrC;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAL;;AACF;;;;;;;;AAFuC;;AAAA;;AACE;;AAAA;;;;;;AAKzC;;AAAsC;;AAAG;;;;;;;;AACzC;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAIA;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAKA;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAc;;AAC1B;;AACF;;;;;;AAGF;;;;;;AACA;;;;QDvFG4I,gC;AAYX,gDACSC,oBADT,EAEUrI,WAFV,EAGUoC,WAHV,EAIUpH,MAJV,EAKUqH,MALV,EAMSiG,SANT,EAOSnK,YAPT,EAQSD,sBART,EASUsE,KATV,EASgC;AAAA;;AARvB,aAAA6F,oBAAA,GAAAA,oBAAA;AACC,aAAArI,WAAA,GAAAA,WAAA;AACA,aAAAoC,WAAA,GAAAA,WAAA;AACA,aAAApH,MAAA,GAAAA,MAAA;AACA,aAAAqH,MAAA,GAAAA,MAAA;AACD,aAAAiG,SAAA,GAAAA,SAAA;AACA,aAAAnK,YAAA,GAAAA,YAAA;AACA,aAAAD,sBAAA,GAAAA,sBAAA;AACC,aAAAsE,KAAA,GAAAA,KAAA;AAbV,aAAA+F,SAAA,GAAwB,EAAxB;AACA,aAAAC,kBAAA,GAA+B,CAAC,UAAD,EAAa,SAAb,EAAwB,MAAxB,EAAgC,MAAhC,EAAwC,QAAxC,CAA/B;AACA,aAAApK,QAAA,GAAW,oCAAX;AAYK;;;;mCAEG;AAAA;;AAEN,eAAK0E,WAAL,GAAoB5B,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAApB;AAIA,eAAKyF,uBAAL,GAA+B,KAAKrG,WAAL,CAAiBvG,KAAjB,CAAuB;AAChD6M,uBAAW,EAAE,CAAC,IAAD,EAAO,0DAAWnN,QAAlB;AADmC,WAAvB,CAA/B;AAKA,eAAKiH,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,iBAAgB;AAAA,gBAAb2F,MAAa,SAAbA,MAAa;;AAChD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,qBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,uBAAI,CAACgH,sBAAL,CAA6B/G,MAAM,CAACD,MAApC;AACD,eAFD,MAEO;AACL,uBAAI,CAACgH,sBAAL,CAA6B,KAA7B;AACD;AACF;AACF,WAVL;AAWD;;;oCAGW;AACV;AACA,cAAK,KAAK7E,aAAL,CAAmBrC,WAAxB,EAAqC;AACnC,gBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,KAAKhB,aAAvB,CAApB;;AACA,gBAAI,KAAKyE,SAAL,CAAeK,MAAf,GAAwB,CAA5B,EAA+B;AACzB/D,iBAAG,CAACnD,MAAJ,GAAa,KAAKoB,WAAL,CAAiB9I,EAA9B;AACA6K,iBAAG,CAACjD,MAAJ,GAAa,WAAb,CAFyB,CAGzB;;AACA,mBAAKY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,sBAAM,EAAEiD;AAAV,eAArB,CAArB;AACD,aALL,MAKU;AACFA,iBAAG,CAACjD,MAAJ,GAAa,WAAb;AACH;AACN;AACF;;;+CAEsB5H,E,EAAU;AAAA;;AAE/B,cAAIA,EAAE,KAAK,KAAX,EAAiB;AACf;AACD;;AACD,eAAKqO,oBAAL,CAA0BQ,KAA1B,CAAgC7O,EAAhC,EACGiC,SADH,CACa,UAAA6M,mBAAmB,EAAI;AAChC;AACA;AACA;AACA;AACA,gBAAIA,mBAAJ,EAAwB;AAAA,kBACfJ,WADe,GACAI,mBADA,CACfJ,WADe;AAEtB,qBAAI,CAACI,mBAAL,GAA2BA,mBAA3B;AACA,qBAAI,CAACP,SAAL,GAAiBO,mBAAmB,CAACP,SAArC;;AACA,qBAAI,CAACE,uBAAL,CAA6B/D,QAA7B,CAAsC;AAACgE,2BAAW,EAAXA;AAAD,eAAtC;AACD;AAEF,WAbH;AAcD;;;+BAEM;AAAA;;AAAA,cAEEA,WAFF,GAEiB,KAAKD,uBAAL,CAA6B9D,KAF9C,CAEE+D,WAFF;;AAIL,cAAK,KAAKI,mBAAV,EAAgC;AAC9B;AACA,gBAAM5M,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAKuM,uBAAL,CAA6B9D,KADxB,CAAG,EAC0B;AACrC3K,gBAAE,EAAE,KAAK8O,mBAAL,CAAyB9O;AADQ,aAD1B,CAAb;;AAIA,iBAAKqO,oBAAL,CAA0BU,yBAA1B,CAAqD7M,IAArD,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,+EAAyEwJ,WAAzE,CAA1B;;AACA,kBAAI,CAAC,OAAI,CAAC5E,aAAL,CAAmBrC,WAAxB,EAAqC;AACnC,uBAAI,CAACzG,MAAL,CAAYgK,aAAZ,CAA0B,uBAA1B;AACD,eAFD,MAEO;AACL,uBAAI,CAACgE,SAAL;AACD;AACF,aARH;AAUD,WAhBD,MAgBO;AACL;AAEA,iBAAKX,oBAAL,CAA0BY,yBAA1B,CAAqD,KAAKR,uBAAL,CAA6B9D,KAAlF,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB;AACA,kBAAI,OAAI,CAAC+E,aAAL,CAAmBrC,WAAvB,EAAmC;AACjC,oBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,OAAI,CAAChB,aAAvB,CAApB;;AACAe,mBAAG,CAAClD,MAAJ,GAAa5C,IAAI,CAAC+J,mBAAL,CAAyB9O,EAAtC;AACA6K,mBAAG,CAACnD,MAAJ,GAAa,OAAI,CAACoB,WAAL,CAAiB9I,EAA9B;AACA6K,mBAAG,CAACjD,MAAJ,GAAa,WAAb;;AACA,uBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,wBAAM,EAAEiD;AAAV,iBAArB,CAArB;AACD;;AAGD,qBAAI,CAAC8D,sBAAL,CAA4B5J,IAAI,CAAC+J,mBAAL,CAAyB9O,EAArD;;AACA,qBAAI,CAACmE,YAAL,CAAkBe,OAAlB,CAA0B,0EAAmEwJ,WAAnE,CAA1B;AAEH,aAfH;AAgBD;AAIF;;;gCAEO1O,E,EAAU;AAAA;;AAEhB,eAAKqO,oBAAL,CAA0Ba,yBAA1B,CAAqDlP,EAArD,EACSiC,SADT,CACqB,YAAK;AAChB,mBAAI,CAACoM,oBAAL,CAA0Bc,uBAA1B;;AACA,mBAAI,CAAChL,YAAL,CAAkBU,IAAlB,CAAuB,8DAAvB;AACD,WAJT;AAMD,S,CAED;AACA;AACA;AACA;AACA;;;;gDAGqB;AAAA;;AACnB,cAAMuK,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEyF,oBAAM,EAAE,KAAKmH,mBAAL,CAAyB9O,EAAnC;AACEqP,wBAAU,EAAE;AADd;AADsD,WAApC,CAA1B;AAKAD,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AACnD,mBAAI,CAACkD,sBAAL,CAA4B,OAAI,CAACG,mBAAL,CAAyB9O,EAArD;AACD,WAFD;AAGD;;;iDAGwBA,E,EAAU;AAAA;;AACjC,cAAMoP,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEmN,wBAAU,EAAErP;AAAd;AADsD,WAApC,CAA1B;AAGAoP,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AACnD,mBAAI,CAACkD,sBAAL,CAA4B,OAAI,CAACG,mBAAL,CAAyB9O,EAArD,EADmD,CAEnD;;;AACA,mBAAI,CAACgP,SAAL;AACD,WAJD;AAKD;;;kDAEyBM,G,EAAW;AACnC,cAAMC,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAACC,KAAb,GAAqB,MAArB;AACAD,sBAAY,CAACrN,IAAb,GAAoB;AAACoN,eAAG,EAAHA;AAAD,WAApB;AACA,cAAMF,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,yFAAjB,EAAuCwI,YAAvC,CAA1B;AAED;;;uCAEevP,E,EAAU;AAAA;;AAExB,eAAKsO,SAAL,CAAemB,cAAf,CAA+BzP,EAA/B,EACSiC,SADT,CACqB,YAAK;AAChB,mBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,mBAAI,CAACvL,YAAL,CAAkBU,IAAlB,CAAuB,2CAAvB;;AACA,mBAAI,CAAC8J,sBAAL,CAA4B,OAAI,CAACG,mBAAL,CAAyB9O,EAArD;;AAGA,mBAAI,CAACgP,SAAL;AAED,WATT;AAWD,S,CAED;AACA;AACA;AACA;;;;yCAEc;AAAA;;AACZ,cAAMW,QAAQ,GAAa;AAAC3P,cAAE,EAAC,EAAJ;AAAOqG,gBAAI,EAAC,8BAAZ;AAA2C5B,gBAAI,EAAE,EAAjD;AAAqDkD,kBAAM,EAAC,KAAKmH,mBAAL,CAAyB9O,EAArF;AAAwFsP,eAAG,EAAC,WAA5F;AAAwG1H,kBAAM,EAAC,QAA/G;AAAwHgI,sBAAU,EAAE,IAAIxG,IAAJ;AAApI,WAA3B;;AACA,eAAKkF,SAAL,CAAeuB,cAAf,CAA8BF,QAA9B,EACG1N,SADH,CACa,UAAC8C,IAAD,EAAa;AAEtB,mBAAI,CAACuJ,SAAL,CAAeoB,YAAf;;AACA,mBAAI,CAACI,UAAL,CAAgB/K,IAAI,CAAC4K,QAAL,CAAc3P,EAA9B;;AACA,mBAAI,CAACmE,YAAL,CAAkBe,OAAlB,CAA0B,0CAA1B;;AACA,mBAAI,CAACyJ,sBAAL,CAA4B,OAAI,CAACG,mBAAL,CAAyB9O,EAArD;;AAEA,mBAAI,CAACgP,SAAL;AAED,WAVH;AAYD;;;mCAEUhP,E,EAAY;AAAA;;AACrB,eAAKqI,MAAL,CAAYtB,IAAZ,CAAiB,yHAAjB;AACA,eAAK7C,sBAAL,CAA4B6L,SAA5B,CAAuC,MAAvC,EAA+C/P,EAA/C;AAEA,eAAKkE,sBAAL,CAA4Bc,iBAA5B,CACa/C,SADb,CACwB,UAAC8C,IAAD,EAAe;AACzB;AAEA,mBAAI,CAACiL,UAAL,CAAgBjL,IAAI,CAAC4K,QAAL,CAAcL,GAA9B;;AACA,mBAAI,CAACX,sBAAL,CAA4B,OAAI,CAACG,mBAAL,CAAyB9O,EAArD,EAJyB,CAKzB;;;AACA,mBAAI,CAACgP,SAAL;AACD,WARb;AASD;;;mCAEUM,G,EAAK;AAEd,cAAIA,GAAG,KAAK,WAAZ,EAAyB;AACvB,iBAAKlL,QAAL,GAAgB,oCAAhB;AACA;AACD;;AACD,cAAM6L,GAAG,GAAGX,GAAG,CAACY,KAAJ,CAAU,GAAV,CAAZ,CANc,CAOd;;AAEA,cAAID,GAAG,CAAC,CAAD,CAAH,KAAW,KAAf,EAAsB;AACpB,iBAAK7L,QAAL,GAAgB,+BAAhB;AACD;AAEF;;;;;;;uBAlPUgK,gC,EAAgC,6L,EAAA,mI,EAAA,2H,EAAA,wH,EAAA,mI,EAAA,4J,EAAA,6I,EAAA,uL,EAAA,mH;AAAA,K;;;YAAhCA,gC;AAAgC,oD;AAAA,e;AAAA,a;AAAA,goC;AAAA;AAAA;AC1B7C;;AACE;;AAEE;;AACE;;AAAgB;;AAA4B;;AAE5C;;AACE;;AAA4C;AAAA,mBAAU,IAAArC,IAAA,EAAV;AAAgB,WAAhB;;AAC1C;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AAGF;;AACA;;AACE;;AAOE;;AACF;;AACF;;AACA;;AACF;;AACF;;AAEF;;AAIA;;AACE;;AACE;;AASF;;AAEA;;AACE;;AACE;;AAAgB;;AAAU;;AAC5B;;AACA;;AACA;;AACE;;AAEE;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AASF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AACF;;AACF;;AACF;;AAWF;;;;AAzHc;;AAAA;;AAiBF;;AAAA;;AAoBJ;;AAAA;;AAYiB;;AAAA;;AAwDI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDvFTqC,gC,EAAgC;cAL5C,uDAK4C;eALlC;AACTlL,kBAAQ,EAAE,+BADD;AAETC,qBAAW,EAAE,4CAFJ;AAGTC,mBAAS,EAAE,CAAC,4CAAD;AAHF,S;AAKkC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1B7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACeQ;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAI;;;;;;AAC1C;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAMF;;AAAsC;;AAAG;;;;;;AACzC;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKzC;;;;;;AACA;;;;;;AApCN;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAGF;;AAGA;;AACE;;AACA;;AACF;;AAIA;;AACA;;AACF;;AAKF;;AAEF;;AACA;;;;;;AArCQ;;AAAA;;AAGa;;AAAA;;AAwBI;;AAAA;;AACP;;AAAA;;;;QDxBL+M,gC;AAUX,gDACS9B,oBADT,EAESC,SAFT,EAGU9F,KAHV,EAGgC;AAAA;;AAFvB,aAAA6F,oBAAA,GAAAA,oBAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACC,aAAA9F,KAAA,GAAAA,KAAA;AATV,aAAAxI,EAAA,GAAa,IAAb;AACA,aAAAwO,kBAAA,GAA+B,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAA/B;AAEA,aAAA4B,MAAA,GAAS,+DAAT;AACA,aAAAC,OAAA,GAAU,mCAAV;AACA,aAAAC,OAAA,GAAU,8EAAV;AAMK;;;;mCAEG;AAAA;;AAGN,eAAK9H,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,iBAAgB;AAAA,gBAAb2F,MAAa,SAAbA,MAAa;AACpDjD,mBAAO,CAACU,GAAR,CAAY,mCAAZ,EAAiDuC,MAAjD;AACA,mBAAI,CAAC5H,EAAL,GAAU4H,MAAM,CAACD,MAAjB;;AACA,mBAAI,CAACgH,sBAAL,CAA4B,OAAI,CAAC3O,EAAjC;AACD,WAJD;AAMD;;;+CAEsBA,E,EAAU;AAAA;;AAC/B,eAAKqO,oBAAL,CAA0BQ,KAA1B,CAAgC7O,EAAhC,EACGiC,SADH,CACa,UAAA6M,mBAAmB,EAAI;AAChC,gBAAK,CAACA,mBAAN,EAA4B;AAC1B;AACD;;AAED,mBAAI,CAACA,mBAAL,GAA2BA,mBAA3B;AACA,mBAAI,CAACP,SAAL,GAAiBO,mBAAmB,CAACP,SAArC;AAGD,WAVH;AAWD;;;gCAEOe,G,EAAG;AAAA;;AACT,eAAKhB,SAAL,CAAeiC,OAAf,CAAuBjB,GAAvB,EACCrN,SADD,CACW,UAAA8C,IAAI,EAAI;AACjBJ,mBAAO,CAACU,GAAR,CAAY,OAAI,CAACmL,QAAjB;AACA,mBAAI,CAACA,QAAL,GAAgBzL,IAAhB;AACAJ,mBAAO,CAACU,GAAR,CAAY,OAAI,CAACmL,QAAjB;AACD,WALD;AAMD;;;;;;;uBAjDUL,gC,EAAgC,6L,EAAA,2J,EAAA,kH;AAAA,K;;;YAAhCA,gC;AAAgC,oD;AAAA,c;AAAA,a;AAAA,ic;AAAA;AAAA;ACZ7C;;;;AAAc;;;;;;;;;sEDYDA,gC,EAAgC;cAL5C,uDAK4C;eALlC;AACTjN,kBAAQ,EAAE,+BADD;AAETC,qBAAW,EAAE,4CAFJ;AAGTC,mBAAS,EAAE,CAAC,4CAAD;AAHF,S;AAKkC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBI;;AAAuC;;AAAe;;;;;;AACtD;;AAAwC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;;;;;;;AAC9C;;AAAwC;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwG;;AAAU;;AAAM;;AACnL;;AAAW;;;;;;AAD2E;;AAAA;;;;;;AAMtF;;AAAsC;;AAAQ;;;;;;;;AAC9C;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;QD1BWqN,4B;AAKX,4CACSpC,oBADT,EAESlK,YAFT,EAGUnD,MAHV,EAIUwH,KAJV,EAIgC;AAAA;;AAHvB,aAAA6F,oBAAA,GAAAA,oBAAA;AACA,aAAAlK,YAAA,GAAAA,YAAA;AACC,aAAAnD,MAAA,GAAAA,MAAA;AACA,aAAAwH,KAAA,GAAAA,KAAA;AAPV,aAAAkI,oBAAA,GAA8C,EAA9C;AACA,aAAAlE,gBAAA,GAA6B,CAAC,aAAD,EAAe,MAAf,EAAsB,QAAtB,CAA7B;AAOK;;;;mCAEG;AACN,eAAK2C,uBAAL;AACD;;;kDAEsB;AAAA;;AACrB,eAAKd,oBAAL,CAA0Bc,uBAA1B,GACGlN,SADH,CACa,UAAAyO,oBAAoB;AAAA,mBAAI,OAAI,CAACA,oBAAL,GAA4BA,oBAAhC;AAAA,WADjC;AAED;;;6BACI1Q,E,EAAU;AACb,eAAKwI,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEpD,kBAAM,EAAE3H;AAAV,WAArB,CAArB;AACA,eAAKgB,MAAL,CAAYgK,aAAZ,CAA0B,2BAA1B;AACD;;;gCACOhL,E,EAAU;AAAA;;AAEhB,eAAKqO,oBAAL,CAA0Ba,yBAA1B,CAAqDlP,EAArD,EACSiC,SADT,CACqB,YAAK;AAEhB,mBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,8DAAvB;;AACA,mBAAI,CAACsK,uBAAL;AACD,WALT;AAOD;;;;;;;uBAjCUsB,4B,EAA4B,6L,EAAA,4I,EAAA,uH,EAAA,kH;AAAA,K;;;YAA5BA,4B;AAA4B,+C;AAAA,e;AAAA,a;AAAA,4sB;AAAA;AAAA;ACdzC;;AACE;;AACA;;AAAI;;AAA+B;;AACnC;;AACE;;AAA2D;;AAAM;;AAEjE;;AAA0C;;AAA+B;;AAC3E;;AACF;;AAKA;;AAEA;;AAEE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AAKF;;AAEA;;AACA;;AACF;;;;AArC+B;;AAAA;;AAWd;;AAAA;;AAwBI;;AAAA;;AACP;;AAAA;;;;;;;;;sED1BDA,4B,EAA4B;cALxC,uDAKwC;eAL9B;AACTvN,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,uCAFJ;AAGTC,mBAAS,EAAE,CAAC,uCAAD;AAHF,S;AAK8B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoEY;;AAAsC;;AAAI;;;;;;AAC1C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAW;;;;;;AACjD;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAMF;;AAAsC;;AAAI;;;;;;;;;;AAC1C;;AACE;;AAKE;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AALI;;AAAA;;;;;;AAUJ;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAc;;AAC1B;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;AAvDR;;AACE;;AACE;;AACE;;AAAgB;;AAAQ;;AAC1B;;AACA;;AACA;;AACE;;AAKE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAGF;;AAGA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AACF;;AACF;;AACF;;;;;;AApDuB;;AAAA;;AA+CI;;AAAA;;AACP;;AAAA;;;;QD7FTuN,oB;AAMX,oCACSC,QADT,EAES5P,MAFT,EAGS0L,cAHT,EAIUtE,WAJV,EAKSyI,OALT,EAMS1M,YANT,EAMmC;AAAA;;AAL1B,aAAAyM,QAAA,GAAAA,QAAA;AACA,aAAA5P,MAAA,GAAAA,MAAA;AACA,aAAA0L,cAAA,GAAAA,cAAA;AACC,aAAAtE,WAAA,GAAAA,WAAA;AACD,aAAAyI,OAAA,GAAAA,OAAA;AACA,aAAA1M,YAAA,GAAAA,YAAA;AART,aAAA2M,OAAA,GAAoB,EAApB;AACA,aAAAC,gBAAA,GAA6B,CAAC,MAAD,EAAQ,aAAR,EAAsB,MAAtB,EAA8B,QAA9B,CAA7B;AASK;;;;mCAEG;AAAA;;AACN,eAAKrE,cAAL,CAAoBsE,MAApB,CACC/O,SADD,CACY;AAAA,gBAAGjC,EAAH,SAAGA,EAAH;AAAA,mBAAY,OAAI,CAACiR,UAAL,CAAiBjR,EAAjB,CAAZ;AAAA,WADZ;AAGA,eAAKkR,WAAL,GAAmB,KAAK9I,WAAL,CAAiBvG,KAAjB,CAAuB;AACpCwE,gBAAI,EAAC,CAAC,IAAD,EAAO,0DAAW9E,QAAlB,CAD+B;AAEpC4P,qBAAS,EAAC,CAAC,IAAD,EAAO,0DAAW5P,QAAlB,CAF0B;AAGpC6P,eAAG,EAAC,CAAC,IAAD,EAAO,0DAAW7P,QAAlB,CAHgC;AAIpCH,iBAAK,EAAC,CAAC,IAAD,EAAO,0DAAWG,QAAlB,CAJ8B;AAKpC8P,iBAAK,EAAC,CAAC,IAAD,EAAO,0DAAW9P,QAAlB;AAL8B,WAAvB,CAAnB;AAOA,eAAK+P,UAAL;AACD;;;mCAEUtR,E,EAAU;AAAA;;AACnB,cAAGA,EAAE,KAAG,KAAR,EAAc;AACZ;AACD;;AACD,eAAK4Q,QAAL,CAAcK,UAAd,CAAyBjR,EAAzB,EACGiC,SADH,CACa,UAAAsP,OAAO,EAAI;AACpB,gBAAG,CAACA,OAAJ,EAAY;AACV,qBAAO,OAAI,CAACvQ,MAAL,CAAYgK,aAAZ,cAAP;AACD;;AAHmB,gBAIb3E,IAJa,GAIqBkL,OAJrB,CAIblL,IAJa;AAAA,gBAIR8K,SAJQ,GAIqBI,OAJrB,CAIRJ,SAJQ;AAAA,gBAIEC,GAJF,GAIqBG,OAJrB,CAIEH,GAJF;AAAA,gBAIMhQ,KAJN,GAIqBmQ,OAJrB,CAIMnQ,KAJN;AAAA,gBAIYiQ,KAJZ,GAIqBE,OAJrB,CAIYF,KAJZ;AAKpB,mBAAI,CAACE,OAAL,GAAeA,OAAf;;AACA,mBAAI,CAACL,WAAL,CAAiBxG,QAAjB,CAA0B;AAACrE,kBAAI,EAAJA,IAAD;AAAM8K,uBAAS,EAATA,SAAN;AAAgBC,iBAAG,EAAHA,GAAhB;AAAoBhQ,mBAAK,EAALA,KAApB;AAA0BiQ,mBAAK,EAALA;AAA1B,aAA1B;AACD,WARH;AASD;;;+BAEM;AAAA;;AAAA,cAEEhL,IAFF,GAEU,KAAK6K,WAAL,CAAiBvG,KAF3B,CAEEtE,IAFF;;AAIL,cAAK,KAAKkL,OAAV,EAAoB;AAClB;AACA,gBAAMrP,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAKgP,WAAL,CAAiBvG,KADZ,CAAG,EACc;AACzB3K,gBAAE,EAAE,KAAKuR,OAAL,CAAavR;AADQ,aADd,CAAb;;AAIA,iBAAK4Q,QAAL,CAAcY,aAAd,CAA6BtP,IAA7B,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,0DAAoDmB,IAApD,CAA1B;AACD,aAHH;AAKD,WAXD,MAWO;AACL;AAEA,iBAAKuK,QAAL,CAAca,aAAd,CAA6B,KAAKP,WAAL,CAAiBvG,KAA9C,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,qDAA6CmB,IAA7C,CAA1B;;AACA,qBAAI,CAACrF,MAAL,CAAYgK,aAAZ,oBAAuCjG,IAAI,CAACwM,OAAL,CAAavR,EAApD;AACH,aAJH;AAKD;AAEF;;;qCAES;AAAA;;AACR,eAAK6Q,OAAL,CAAaS,UAAb,GACGrP,SADH,CACa,UAAA6O,OAAO;AAAA,mBAAI,OAAI,CAACA,OAAL,GAAeA,OAAnB;AAAA,WADpB;AAED;;;gCAEO9Q,E,EAAU;AAAA;;AAEhB,eAAK6Q,OAAL,CAAaa,YAAb,CAA2B1R,EAA3B,EACSiC,SADT,CACqB,YAAK;AAEhB,mBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,yCAAvB;;AACA,mBAAI,CAACyM,UAAL;AACD,WALT;AAOD;;;;;;;uBAtFUX,oB,EAAoB,wJ,EAAA,uH,EAAA,+H,EAAA,2H,EAAA,qJ,EAAA,4I;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,kpC;AAAA;AAAA;ACjBjC;;AACE;;AACE;;AACE;;AAAgB;;AAAO;;AACzB;;AACA;;AACE;;AAAgC;AAAA,mBAAU,IAAA5E,IAAA,EAAV;AAAgB,WAAhB;;AAC9B;;AACE;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACE;;AAKA;;AAAW;;AAA0B;;AACvC;;AAEA;;AAEA;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AAEA;;AAEA;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AACF;;AACA;;AACE;;AAOE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AA4DF;;;;AA7GY;;AAAA;;AAyCA;;AAAA;;AAQH;;AAAA;;;;;;;;;sEDtCI4E,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTzN,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBI;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAU;;;;;;AACjD;;AAAwC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAI;;;;;;AAC3C;;AAAwC;;AAAgB;;;;;;AAAhB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAM;;;;;;AAC7C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAS;;;;;;AAChD;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;;;;;AAC9C;;AAAwC;;AAAoF;;AAAU;;AAAM;;AAC5I;;AAAW;;;;;;AADgD;;AAAA;;;;;;AAK3D;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAIF;;;;;;AACA;;;;;;;;QDpDWuO,gB;AAIX,gCACSf,QADT,EAESzM,YAFT,EAEmC;AAAA;;AAD1B,aAAAyM,QAAA,GAAAA,QAAA;AACA,aAAAzM,YAAA,GAAAA,YAAA;AAJT,aAAAyN,SAAA,GAAuB,EAAvB;AACA,aAAApF,gBAAA,GAA6B,CAAC,MAAD,EAAS,WAAT,EAAqB,KAArB,EAA4B,OAA5B,EAAqC,OAArC,EAA6C,MAA7C,EAAoD,QAApD,CAA7B;AAIK;;;;mCAEG;AACN,eAAKqF,YAAL;AACD;;;uCAEW;AAAA;;AACV,eAAKjB,QAAL,CAAciB,YAAd,GACC5P,SADD,CACW,UAAA2P,SAAS;AAAA,mBAAI,OAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WADpB;AAED;;;gCAEO5R,E,EAAU;AAAA;;AAEhB,eAAK4Q,QAAL,CAAckB,aAAd,CAA6B9R,EAA7B,EACSiC,SADT,CACqB,YAAK;AAEhB,mBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,0CAAvB;;AACA,mBAAI,CAACgN,YAAL;AACD,WALT;AAOD;;;;;;;uBA3BUF,gB,EAAgB,wJ,EAAA,4I;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,quB;AAAA;AAAA;ACT7B;;AACE;;AACF;;AACQ;;AAAU;;AAAG;;AAAW;;AAChC;;AACA;;AACA;;AAEA;;AAME;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAEA;;AACE;;AACA;;AAKF;;AAGA;;AACA;;AACF;;;;AA5DyC;;AAAA;;AAMxB;;AAAA;;AAoDI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDpDDA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTzO,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAea2O,gB;AAOX,gCACSrE,kBADT,EAEUlF,KAFV,EAEgC;AAAA;;AADvB,aAAAkF,kBAAA,GAAAA,kBAAA;AACC,aAAAlF,KAAA,GAAAA,KAAA;AANV,aAAAmF,QAAA,GAAW,KAAX;AAQQ;;;;mCAEA;AAAA;;AAEN,eAAKD,kBAAL,CAAwBE,mBAAxB;AAEA,eAAKpF,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,iBAAgB;AAAA,gBAAb2F,MAAa,SAAbA,MAAa;;AACpD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,qBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,uBAAI,CAACkG,cAAL,CAAqBjG,MAAM,CAACD,MAA5B;AACD,eAFD,MAEO;AACL,uBAAI,CAACkG,cAAL,CAAqB,KAArB;AACD;AACF;AACF,WAVD,EAJM,CAeN;AACD;;;uCAEclG,M,EAAgB;AAAA;;AAE7B,cAAKA,MAAM,KAAK,KAAhB,EAAwB;AACtB;AACA,iBAAK+F,kBAAL,CAAwBE,mBAAxB;AAED,WAJD,MAIO;AACL,iBAAKF,kBAAL,CAAwBI,eAAxB,CAAwCnG,MAAxC,EAAgD1F,SAAhD,CAA2D,UAAA8L,YAAY,EAAI;AACzE;AACA,qBAAI,CAACL,kBAAL,CAAwBM,SAAxB,CAAkCD,YAAY,CAAC,cAAD,CAA9C;AACD,aAHD;AAID;AAEF;;;iCAEQpD,K,EAAgB;AAAA;;AACvB;AACA,eAAK+C,kBAAL,CAAwBtL,IAAxB,CAA6B+H,QAA7B,CAAsC,aAAtC,EAAqDO,QAArD,CAA8D,KAAKZ,aAAL,CAAmB/B,WAAjF;AACA,eAAK2F,kBAAL,CAAwBO,gBAAxB,CAAyC,KAAKP,kBAAL,CAAwBtL,IAAxB,CAA6BuI,KAAtE,EAA6E1I,SAA7E,CAAwF,UAAA8C,IAAI,EAAI;AAC9F;AACA,gBAAI,OAAI,CAAC+E,aAAL,CAAmBrC,WAAvB,EAAoC;AAChC,kBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,OAAI,CAAChB,aAAvB,CAApB;;AACAe,iBAAG,CAAClD,MAAJ,GAAa5C,IAAI,CAAC/E,EAAlB;AACA6K,iBAAG,CAACjD,MAAJ,GAAa,WAAb,CAHgC,CAIhC;;AACA,qBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAoB,2EAAqB;AAAEnD,sBAAM,EAAEiD;AAAV,eAArB,CAApB,EALgC,CAMhC;;AACD;AACJ,WAVD,EAHuB,CAcvB;AACD;;;mCAEU,CAEV;;;;;;;uBAjEUkH,gB,EAAgB,iJ,EAAA,kH;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,6f;AAAA;AAAA;;;ACf7B;;AAEI;;AAEI;;AACI;;AACE;;AACA;;AAAgB;;AAAuB;;AACvC;;AAAmB;;AAA6C;;AAClE;;AAEA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAiE;AAAA,mBAAU,IAAA7D,QAAA,EAAV;AAAoB,WAApB;;AAC/D;;AAIA;;AAAyH;AAAA;;AAAA;;AAAA,mBAAU,IAAAC,QAAA,WAAV;AAA+B,WAA/B;;AACvH;;AACE;;AAAkE;;AAAI;;AACtE;;AACF;;AACA;;AACE;;AAAmE;;AAAK;;AACxE;;AACF;;AACF;;AAGJ;;AAEA;;AACF;;AAEN;;AACA;;AA+BJ;;;;AAtDoB;;AAAA;;AAMiB;;AAAA;;AAIA;;AAAA;;;;;;;;;sEDZxB4D,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT7O,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTqC,gBAAM,EAAE,CAAC,EAAD;AAHC,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEf7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWawM,kB;AAEX;AAAA;AAEC;;;;mCAEO,CACP;;;;;;;uBAPUA,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA;AAAA;ACV9B;;;;;;;;;sEDUYA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT9O,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;AEX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCA;;AAEI;;AACI;;AAAwB;;AAA8D;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAoD;;AAAc;;AAAY;;AAAS;;AAAS;;AAC/M;;AAAwB;;AAA+D;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAU;;AAA4E;;AAAiB;;AAAW;;AAAS;;AAC3O;;AACJ;;;;;;AAHuE;;AAAA;;AACC;;AAAA;;;;QDU3D6O,e;AAKX,+BACgBzJ,KADhB,EAEgB0J,gBAFhB,EAGgBlM,WAHhB,EAGwC;AAAA;;AAFxB,aAAAwC,KAAA,GAAAA,KAAA;AACA,aAAA0J,gBAAA,GAAAA,gBAAA;AACA,aAAAlM,WAAA,GAAAA,WAAA;AALhB,aAAA2H,QAAA,GAAW,KAAX;AAMI;;;;mCAEI;AAAA;;AACJ,eAAKnF,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,iBAAc;AAAA,gBAAZ2F,MAAY,SAAZA,MAAY;;AAClD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAElB;AACA,qBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAIA,MAAM,CAACA,MAAP,KAAkB,WAAtB,EAAmC;AACjC,uBAAI,CAACuK,aAAL,CAAmB,IAAnB;AACC,eAFH,MAEQ;AACJ,uBAAI,CAACA,aAAL,CAAmB,KAAnB;AACD;AACF;AACF,WAXH;AAYH;;;sCAEaC,M,EAAiB;AAC7B,eAAKzE,QAAL,GAAgByE,MAAhB;AACD;;;mCAEU;AAAA;;AACT;AACA,eAAKtJ,WAAL,GAAoB5B,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAApB;;AACA,cAAM6B,GAAG,GAAW,4DAAOC,SAAP,CAAkB,KAAKhB,aAAvB,CAApB;;AACAe,aAAG,CAAC/C,OAAJ,GAAc,KAAd,CAJS,CAKD;;AACR,eAAKU,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,kBAAM,EAAEiD;AAAV,WAArB,CAArB;AAEA,eAAKqH,gBAAL,CAAsBG,YAAtB,CAAmCxH,GAAG,CAACpD,WAAvC,EAAoDxF,SAApD,CAA+D,UAAAqQ,gBAAgB,EAAI;AAC/E,gBAAMC,SAAS,GAAGD,gBAAgB,CAAC/K,KAAjB,GAAyB,CAA3C;;AACA,mBAAI,CAAC2K,gBAAL,CAAsBM,mBAAtB,CAA0CD,SAA1C,EAAqDtQ,SAArD,CAAgE,UAAAwQ,SAAS,EAAI;AAC3E,kBAAMC,OAAO,GAAW,4DAAO5H,SAAP,CAAkBD,GAAlB,CAAxB;;AACA6H,qBAAO,CAACjL,WAAR,GAAsBgL,SAAS,CAACzS,EAAhC;AACA0S,qBAAO,CAACrM,IAAR,GAAeoM,SAAS,CAACnL,aAAzB;AACAoL,qBAAO,CAAChL,MAAR,GAAiB,IAAjB;AACAgL,qBAAO,CAAC/K,MAAR,GAAiB,IAAjB;AACA+K,qBAAO,CAAC9K,MAAR,GAAiB,SAAjB;AACA8K,qBAAO,CAAC7K,MAAR,GAAiB,IAAIuB,IAAJ,EAAjB;AACAsJ,qBAAO,CAAC5K,OAAR,GAAkB,IAAlB,CAR2E,CAS3E;;AACA,kBAAM6K,UAAU,GAAG,OAAI,CAAC7I,aAAL,CAAmBrC,WAAtC,CAV2E,CAW3E;;AACA,qBAAI,CAACe,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAACnD,sBAAM,EAAE8K;AAAT,eAArB,CAArB;;AACA,qBAAI,CAAClK,KAAL,CAAWuC,QAAX,CAAqB,2EACnB;AACEvE,0BAAU,EAAE,OAAI,CAACsC,WAAL,CAAiBtC,UAD/B;AAEEiB,2BAAW,EAAEkL,UAFf;AAGEjL,sBAAM,EAAE,OAAI,CAACoB,WAAL,CAAiB9I;AAH3B,eADmB,CAArB;;AAOA,qBAAI,CAACwI,KAAL,CAAWuC,QAAX,CAAqB,2EAArB;AACD,aArBD;AAsBH,WAxBD;AAyBD;;;qCAEY;AAEXpG,iBAAO,CAACU,GAAR,CAAY,cAAZ;AACD;;;;;;;uBApEU4M,e,EAAe,kH,EAAA,uJ,EAAA,mI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,6Y;AAAA;AAAA;ACd5B;;;;AAAoC;;;;;;;;;sEDcvBA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT/O,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEf5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,6C,CAWA;AAGA;;;;;;;ACHM;;AAAgG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9F;;AAAe;;;;AAAwB;;AAEzC;;;;;;;;AAHiD;;AAChC;;AAAA;;;;;;AAoEjB;;AACE;;AACA;;AACA;;AACF;;;;;;AAEA;;AACE;;AACE;;AAAgB;;AAAK;;AACrB;;AACE;;AACE;;;;AACF;;AACF;;AAEF;;AACF;;;;;;AALQ;;AAAA;;;;;;AAQR;;AACE;;AACE;;AAAgB;;AAAqB;;AACrC;;AAAmB;;AAAsC;;AAC3D;;AACF;;;;;;;;AAIE;;AAAmE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACjE;;AAAwC;;AAAY;;AACpD;;AAAc;;AAAY;;AAC1B;;AAAe;;;;AAAsB;;AACvC;;;;;;AAFgB;;AAAA;;AACC;;AAAA;;;;;;AALnB;;AAEE;;;;AAOF;;;;;;AAToB;;AAED;;AAAA;;;;;;AA4BzB;;AAA6B;;AAA2B;;;;;;;;QDlH3CwP,c;AAoBX,8BACS1G,aADT,EAESgG,gBAFT,EAGSW,eAHT,EAIS7M,WAJT,EAKUwC,KALV,EAKgC;AAAA;;AAJvB,aAAA0D,aAAA,GAAAA,aAAA;AACA,aAAAgG,gBAAA,GAAAA,gBAAA;AACA,aAAAW,eAAA,GAAAA,eAAA;AACA,aAAA7M,WAAA,GAAAA,WAAA;AACC,aAAAwC,KAAA,GAAAA,KAAA,CAAsB,CAvBhC;;AACA,aAAAsK,OAAA,GAAmC,CAAC,SAAD,EAAY,WAAZ,EAAyB,WAAzB,CAAnC;AAGA,aAAAC,OAAA,GAAqB,EAArB;AACA,aAAA7Q,IAAA,GAAkB,EAAlB;AAGA,aAAA8Q,OAAA,GAAU,KAAV;AACA,aAAAC,aAAA,GAAsC,SAAtC;AAEA,aAAAC,OAAA,GAAmB,KAAnB;AAIA,aAAAC,IAAA,GAAO,CAAP;AACA,aAAAC,IAAA,GAAO,CAAP;AASI;;;;mCAEI;AAEN;AACA;AACA;AAEA;AACA,eAAKC,SAAL;AACD;;;qCAEY;AAAA;;AACX,eAAKjN,IAAL,GAAYc,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAAZ;AACA,eAAKkJ,gBAAL,CAAsBM,mBAAtB,CAA0C,CAA1C,EAA6CvQ,SAA7C,CAAwD,UAAAwQ,SAAS,EAAI;AACnE;AACA,mBAAI,CAACjK,KAAL,CAAWuC,QAAX,CAAqB,oFAAc;AAAErD,oBAAM,EAAE,OAAI,CAACtB,IAAL,CAAUpG,EAApB;AAAwByH,yBAAW,EAAEgL,SAAS,CAACzS,EAA/C;AAAmDqG,kBAAI,EAAEoM,SAAS,CAACnL;AAAnE,aAAd,CAArB;AACD,WAHD;AAID;;;qCAEagM,M,EAA4B;AACxC;AACA,eAAK9K,KAAL,CAAWuC,QAAX,CAAqB,+EAAwB;AAAEuI,kBAAM,EAANA;AAAF,WAAxB,CAArB;AACD,S,CACD;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;oCAEY;AAAA;;AAGV,eAAK9K,KAAL,CAAWqB,MAAX,CAAkB,SAAlB,EAA6B5H,SAA7B,CAAwC,kBAAuC;AAAA,gBAArC8Q,OAAqC,UAArCA,OAAqC;AAAA,gBAA5BG,OAA4B,UAA5BA,OAA4B;AAAA,gBAAnBtO,KAAmB,UAAnBA,KAAmB;AAAA,gBAAZ0O,MAAY,UAAZA,MAAY;AAE7E,gBAAI3M,GAAG,GAAGoM,OAAO,CAACO,MAAR,CAAgB,UAAA1L,MAAM;AAAA,qBAAIA,MAAM,CAACA,MAAP,KAAkB0L,MAAtB;AAAA,aAAtB,CAAV;AACA,mBAAI,CAACP,OAAL,GAAepM,GAAf;AACA,mBAAI,CAACzE,IAAL,GAAY,OAAI,CAAC6Q,OAAjB;AACA,mBAAI,CAACG,OAAL,GAAeA,OAAf;AACA,mBAAI,CAACtO,KAAL,GAAaA,KAAb;AACA,mBAAI,CAACqO,aAAL,GAAqBK,MAArB;;AACA,mBAAI,CAACC,OAAL,CAAa;AAACC,uBAAS,EAAE,OAAI,CAACL,IAAjB;AAAuBM,sBAAQ,EAAE,OAAI,CAACL;AAAtC,aAAb;AACD,WATD;AAWA,eAAKtK,WAAL,GAAoB5B,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAApB;AAEA,eAAKkJ,gBAAL,CAAsBM,mBAAtB,CAA0C,CAA1C,EAA6CvQ,SAA7C,CAAwD,UAAAwQ,SAAS,EAAI;AACnE,mBAAI,CAACjK,KAAL,CAAWuC,QAAX,CAAqB,2EAAoB;AACjCvE,wBAAU,EAAE,OAAI,CAACsC,WAAL,CAAiBtC,UADI;AAEjCiB,yBAAW,EAAEgL,SAAS,CAACzS,EAFU;AAGjC0H,oBAAM,EAAE,OAAI,CAACoB,WAAL,CAAiB9I;AAHQ,aAApB,CAArB;AAKD,WAND;AAUD,S,CAGD;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAIA;AAEA;AAEA;AAIF;;;;gCACUiI,G,EAAK;AACX,cAAIyL,KAAK,GAAG,CAAZ;AAAA,cACAC,aAAa,GAAG1L,GAAG,CAACuL,SAAJ,GAAgBvL,GAAG,CAACwL,QADpC;AAAA,cAEAG,WAAW,GAAGD,aAAa,GAAG1L,GAAG,CAACwL,QAFlC;AAIA,eAAKvR,IAAL,GAAY,KAAK6Q,OAAL,CAAaO,MAAb,CAAoB,YAAM;AACpCI,iBAAK;AACL,mBAAQA,KAAK,GAAGC,aAAR,IAAyBD,KAAK,IAAIE,WAAnC,GAAkD,IAAlD,GAAyD,KAAhE;AACD,WAHW,CAAZ;AAID;;;mCAEUhM,M,EAAc;AACvB;AACA,eAAKY,KAAL,CAAWuC,QAAX,CAAqB,iFAAW;AAAE/K,cAAE,EAAE4H,MAAM,CAAC5H;AAAb,WAAX,CAArB;AACA,eAAK4H,MAAL,GAAcA,MAAd;AACA,eAAKoL,OAAL,GAAe,KAAf,CAJuB,CAKvB;AACD;;;;;;;uBAzIUJ,c,EAAc,8I,EAAA,uJ,EAAA,oJ,EAAA,mI,EAAA,kH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;oEAId,wE,EAAY,I;;;;;;;;;;;;;;;;AC1BzB;;AACE;;AAIE;;AACE;;AAAM;;AAAO;;AACf;;AAEA;;AAEE;;AAMF;;AAOF;;AACA;;AACE;;AACE;;AAIE;AAAA;;AAAA;;AAAA,mBAAS,YAAT;AAAwB,WAAxB;;AACA;;AAA4C;;AAAI;;AAClD;;AACA;;AACE;;AAAU;;AAAU;;AACpB;;AAAM;;AAER;;AAAyC;AAAA,mBAAS,IAAAiB,UAAA,EAAT;AAAqB,WAArB;;AACvC;;AAAU;;AAAO;;AACjB;;AAAS;;AAGb;;AAGJ;;AACA;;AACA;;AACI;;AAEE;;AAAgB;;AAAc;;AAEhC;;AAEA;;AAGE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACA;;AACJ;;AAKF;;AACA;;AACA;;AACE;;AAEE;;AAAgB;;AAAe;;AAEjC;;AAEA;;AAEE;;AAMA;;AAaA;;AAOA;;AAWF;;AACA;;AACE;;AAII;AAAA,mBAAQ,IAAAN,OAAA,QAAR;AAAuB,WAAvB;;AACN;;AACA;;AACF;;AAEF;;AACA;;AAEE;;AAEF;;AACA;;AAEA;;AAIA;;AACA;;;;AA1IM;;AAAA,mFAAe,QAAf,EAAe,IAAf;;AADA;;AAOkB;;AAAA;;AAEA;;AAAA;;AAqEG;;AAAA;;AAMV;;AAAA;;AAac;;AAAA;;AAOc;;AAAA;;AAaxB;;AAAA,iGAAyB,UAAzB,EAAyB,QAAzB,EAAyB,WAAzB,EAAyB,QAAzB,EAAyB,iBAAzB,EAAyB,sEAAzB;;AAiBP;;AAAA;;;;;;;;;;sEDlHDX,c,EAAc;cAL1B,uDAK0B;eALhB;AACT1P,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;gBAIxB,uD;iBAAU,wE;;;;;;;;;;;;;;;;;;;;AE1Bb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgBY;;AAA2B;;AAAO;;;;;;AAClC;;AAA4B;;AAAW;;;;;;AAP3C;;AACI;;AACA;;AAAqB;;AAAQ;;;;AAAiC;;AAAU;;AACxE;;AAAmB;;;;AAA8C;;AACjE;;AACA;;AACA;;AACA;;AACA;;AACJ;;;;;;AAT6C;;AAEZ;;AAAA;;AACV;;AAAA;;AAGf;;AAAA;;AACA;;AAAA;;;;;;AAGR;;AACI;;AACA;;AAAqB;;AAAQ;;;;AAA8C;;AAAS;;AACpF;;AAAmB;;AAAO;;AAC1B;;AACA;;AACA;;AAAK;;AAAU;;AACf;;AACJ;;;;;;AANiC;;AAAA;;;;QDR5B0Q,gB;AAOX,gCACoB5H,aADpB,EAEoBgG,gBAFpB,EAGoB1J,KAHpB,EAG0C;AAAA;;AAFtB,aAAA0D,aAAA,GAAAA,aAAA;AACA,aAAAgG,gBAAA,GAAAA,gBAAA;AACA,aAAA1J,KAAA,GAAAA,KAAA;AAPpB,aAAA2D,MAAA,GAAqB,EAArB;AACA,aAAAsG,SAAA,GAAuB,IAAI,iEAAJ,CAAc,IAAd,EAAoB,IAApB,EAA0B,EAA1B,EAA8B,CAA9B,CAAvB;AAOiB;;;;mCAET;AAAA;;AAEN,eAAKjK,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,kBAAgB;AAAA,gBAAb2F,MAAa,UAAbA,MAAa;;AACpD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,qBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,IAAI,IAAf,EAAqB;AAAE;AAAS;;AAChC,kBAAKA,MAAM,CAACG,WAAZ,EAA0B;AACxB,uBAAI,CAACsL,SAAL,CAAe,OAAI,CAACvJ,aAAL,CAAmB/B,WAAlC;;AACA,uBAAI,CAACgM,gBAAL,CAAsB,OAAI,CAACjK,aAAL,CAAmBrC,WAAzC;AACD,eAHD,MAGO;AACL,uBAAI,CAAC0E,MAAL,GAAc,IAAd;AACA,uBAAI,CAACsG,SAAL,GAAiB,IAAjB;AACD;AAEF;AACF,WAdD,EAFM,CAiBN;AACA;AACD;;;6CAEiB;AAChB;AACA,eAAKuB,cAAL,GAFgB,CAGhB;AACD;;;kCAESjM,W,EAAqB;AAAA;;AAC7B,eAAKmE,aAAL,CAAmBG,kBAAnB,CAAsCtE,WAAtC,EAAmD9F,SAAnD,CAA8D,UAAAkK,MAAM,EAAI;AACtE;AACA,mBAAI,CAACA,MAAL,GAAcA,MAAd;AACD,WAHD;AAID;;;yCAEgB1E,W,EAAqB;AAAA;;AACpC,eAAKyK,gBAAL,CAAsBG,YAAtB,CAAmC5K,WAAnC,EAAgDxF,SAAhD,CAA2D,UAAAqQ,gBAAgB,EAAI;AAC7E,gBAAM2B,QAAQ,GAAG3B,gBAAgB,CAAC/K,KAAjB,GAAyB,CAA1C;;AACA,mBAAI,CAAC2K,gBAAL,CAAsBM,mBAAtB,CAA0CyB,QAA1C,EAAoDhS,SAApD,CAA+D,UAAAiS,aAAa,EAAI;AAC9E,qBAAI,CAACzB,SAAL,GAAiByB,aAAjB,CAD8E,CAE9E;AACD,aAHD;AAID,WAND;AAOD;;;yCAEa;AAEZ,cAAI;AACA;AAGA,iBAAKC,iBAAL,CAAuBC,aAAvB,CAAqCC,UAArC,GAAkD,KAAKF,iBAAL,CAAuBC,aAAvB,CAAqCE,WAAvF;AAED,WANH,CAMI,OAAOlP,GAAP,EAAY;AAAET,mBAAO,CAACU,GAAR,CAAY,qBAAZ,EAAmCD,GAAnC;AAA0C;AAC/D;;;;;;;uBAlEY0O,gB,EAAgB,8I,EAAA,uJ,EAAA,kH;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA;AAAA;;;;;;;;;;;;;;;ACd7B;;AACG;;AACC;;AAEI;;AAEA;;AAIA;;AAUA;;AASA;;AACJ;;AAEJ;;AAEA;;AACA;;;;AAzBwB;;AAAA;;AAUD;;AAAA;;;;;;;;;;sEDNVA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT5Q,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;gBAK1B,uD;iBAAU,W;;;;;;;;;;;;;;;;;;;;AEnBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIM;;AACE;;AACE;;AACE;;AACE;;AAAgB;;AAAmC;;AACnD;;AAAmB;;AAAyE;;AAC9F;;AACF;;AACF;;AACF;;;;;;AAIE;;AAA8C;;AAA8D;;;;;;AAC5G;;AAA8C;;AAA8B;;;;;;AAC5E;;AAAmD;;AAAgE;;;;;;AACnH;;AAA+C;;AAAyD;;;;;;AACxG;;AAA8C;;AAAkD;;;;;;AAChG;;AAA6C;;AAAiC;;;;;;AAC9E;;AAA8C;;AAA6D;;;;;;AAC3G;;AAA4C;;AAAgE;;;;;;AAC5G;;AAAiD;;AAA6D;;;;;;AAC9G;;AAA8C;;AAAmD;;;;;;AACjG;;AAA2C;;AAAmD;;;;;;AAe9F;;AACE;;AAAI;;AAAa;;AAEnB;;;;;;AAbJ;;AACE;;AACE;;AAEA;;AAEE;;AACF;;AACA;;AAEA;;AAIF;;AAGF;;;;;;AAPkB;;AAAA;;;;QD7BTmR,a;AASX,6BAAqB/L,KAArB,EAA2C;AAAA;;AAAtB,aAAAA,KAAA,GAAAA,KAAA;AAFrB,aAAAgM,OAAA,GAAmB,SAAnB;AAGC;;;;mCAEO;AAAA;;AACN,eAAKhM,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,kBAAgB;AAAA,gBAAb2F,MAAa,UAAbA,MAAa;;AACpD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,qBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,qBAAI,CAAC6M,WAAL,CAAiB7M,MAAjB;AACD,aAJD,MAIO;AACL,qBAAI,CAAC4M,OAAL,GAAe,SAAf;AACD;AAEF,WATD;AAWD,S,CAED;AAEA;AACA;AACA;AACA;AACA;;;;oCAEY5M,M,EAAgB;AAG1B;AACAA,gBAAM,CAACG,WAAP,IAAsB,IAAtB,GAA6B,KAAK2M,MAAL,GAAc,SAA3C,GAAuD,KAAKA,MAAL,GAAc,MAArE;;AAEA,cAAI9M,MAAM,CAACvB,IAAP,KAAgB,oCAApB,EAA2D;AACzD,iBAAKmO,OAAL,GAAe,SAAf;AACD;;AACD,cAAI5M,MAAM,CAACvB,IAAP,KAAgB,sBAApB,EAA6C;AAC3C,iBAAKmO,OAAL,GAAe,SAAf;AACD;;AACD,cAAI5M,MAAM,CAACvB,IAAP,KAAgB,8BAApB,EAAqD;AACnD,iBAAKmO,OAAL,GAAe,eAAf;AACD;;AACD,cAAI5M,MAAM,CAACvB,IAAP,KAAgB,iCAApB,EAAwD;AACtD,iBAAKmO,OAAL,GAAe,WAAf;AACD;;AACD,cAAI5M,MAAM,CAACvB,IAAP,KAAgB,mBAApB,EAA0C;AACxC,iBAAKmO,OAAL,GAAe,SAAf;AACD;;AACD,cAAI5M,MAAM,CAACvB,IAAP,KAAgB,8BAApB,EAAqD;AACnD,iBAAKmO,OAAL,GAAe,SAAf;AACD;;AACD,cAAI5M,MAAM,CAACvB,IAAP,KAAgB,yBAApB,EAAgD;AAC9C,iBAAKmO,OAAL,GAAe,UAAf;AACD;;AACD,cAAI5M,MAAM,CAACvB,IAAP,KAAgB,uCAApB,EAA8D;AAC5D,iBAAKmO,OAAL,GAAe,QAAf;AACD;;AACD,cAAI5M,MAAM,CAACvB,IAAP,KAAgB,6BAApB,EAAoD;AAClD,iBAAKmO,OAAL,GAAe,aAAf;AACD;;AACD,cAAI5M,MAAM,CAACvB,IAAP,KAAgB,kBAApB,EAAyC;AACvC,iBAAKmO,OAAL,GAAe,UAAf;AACD;;AACD,cAAI5M,MAAM,CAACvB,IAAP,KAAgB,uBAApB,EAA8C;AAC5C,iBAAKmO,OAAL,GAAe,OAAf;AACD;;AACD,cAAI5M,MAAM,CAACvB,IAAP,KAAgB,iBAApB,EAAwC;AACtC,iBAAKmO,OAAL,GAAe,KAAf;AACD,WAzCyB,CA0C1B;AACA;;AACD;;;;;;;uBA9EUD,a,EAAa,kH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,c;AAAA,6O;AAAA;AAAA;ACb1B;;AACI;;AACE;;AAEA;;AAaE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGJ;;AAEA;;AAoBF;;AAEA;;;;AAlD2B;;AAAA;;AAaP;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKQ;;AAAA;;;;;;;;;sEDnBjBA,a,EAAa;cALzB,uDAKyB;eALf;AACTrR,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AEb1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYauR,iB;AAOX,iCACSrG,SADT,EAEU1B,SAFV,EAGUgI,mBAHV,EAIkC1S,IAJlC,EAKSiC,YALT,EAKmC;AAAA;;AAJ1B,aAAAmK,SAAA,GAAAA,SAAA;AACC,aAAA1B,SAAA,GAAAA,SAAA;AACA,aAAAgI,mBAAA,GAAAA,mBAAA;AACwB,aAAA1S,IAAA,GAAAA,IAAA;AACzB,aAAAiC,YAAA,GAAAA,YAAA;AAEJ;;;;mCAEG;AACN,cAAG,KAAKjC,IAAL,CAAUmN,UAAV,KAAyB,KAA5B,EAAkC;AAChC,iBAAKwF,WAAL,CAAiB,KAAK3S,IAAL,CAAUmN,UAA3B;AACD;;AAED,eAAKyF,YAAL,GAAoB,KAAKF,mBAAL,CAAyB/S,KAAzB,CAA+B;AACjDwE,gBAAI,EAAC,CAAC,IAAD,EAAO,0DAAW9E,QAAlB,CAD4C;AAEjDkD,gBAAI,EAAC,CAAC,IAAD,CAF4C;AAGjDkD,kBAAM,EAAC,CAAC,KAAKzF,IAAL,CAAUyF,MAAX,CAH0C;AAIjD2H,eAAG,EAAC,CAAC,IAAD;AAJ6C,WAA/B,CAApB;AAQD;;;oCACWtP,E,EAAU;AAAA;;AACpB,eAAKsO,SAAL,CAAeuG,WAAf,CAA2B7U,EAA3B,EACGiC,SADH,CACa,UAAA0N,QAAQ,EAAI;AACrB,gBAAG,CAACA,QAAJ,EAAa;AACX,qBAAI,CAACtC,aAAL;AACD;;AAHoB,gBAIdhH,IAJc,GAIasJ,QAJb,CAIdtJ,IAJc;AAAA,gBAIR5B,IAJQ,GAIakL,QAJb,CAIRlL,IAJQ;AAAA,gBAIFkD,MAJE,GAIagI,QAJb,CAIFhI,MAJE;AAAA,gBAIM2H,GAJN,GAIaK,QAJb,CAIML,GAJN;AAKrB,mBAAI,CAACK,QAAL,GAAgBA,QAAhB;;AACA,mBAAI,CAACmF,YAAL,CAAkBpK,QAAlB,CAA2B;AAACrE,kBAAI,EAAJA,IAAD;AAAO5B,kBAAI,EAAJA,IAAP;AAAakD,oBAAM,EAANA,MAAb;AAAqB2H,iBAAG,EAAHA;AAArB,aAA3B;AACD,WARH;AASD;;;wCACY;AAEX,eAAK1C,SAAL,CAAeU,KAAf;AACD;;;+BACM;AAAA;;AAAA,cAEEjH,IAFF,GAEU,KAAKyO,YAAL,CAAkBnK,KAF5B,CAEEtE,IAFF;;AAGL,cAAK,KAAKsJ,QAAV,EAAqB;AACnB;AACA,gBAAMzN,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAK4S,YAAL,CAAkBnK,KADb,CAAG,EACe;AAC1B3K,gBAAE,EAAE,KAAK2P,QAAL,CAAc3P,EADQ;AAE1B2H,oBAAM,EAAE,KAAKgI,QAAL,CAAchI;AAFI,aADf,CAAb;AAKAhD,mBAAO,CAACU,GAAR,CAAYnD,IAAZ;;AACA,iBAAKoM,SAAL,CAAeyG,cAAf,CAA+B7S,IAA/B,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,4DAAsDmB,IAAtD,CAA1B;;AACA,qBAAI,CAACgH,aAAL;AACD,aAJH;AAMD,WAdD,MAcO;AACL;AAEA,iBAAKiB,SAAL,CAAeuB,cAAf,CAA+B,KAAKiF,YAAL,CAAkBnK,KAAjD,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,uDAA+CmB,IAA/C,CAA1B;;AACA,qBAAI,CAACgH,aAAL;AACH,aAJH;AAKD;AAIF;;;gCAEOrN,E,EAAU;AAAA;;AAEhB,eAAKsO,SAAL,CAAemB,cAAf,CAA+BzP,EAA/B,EACSiC,SADT,CACqB,YAAK;AAChB,mBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,mBAAI,CAACvL,YAAL,CAAkBe,OAAlB,CAA0B,oCAA1B;AACD,WAJT;AAMD;;;;;;;uBApFUyP,iB,EAAiB,2J,EAAA,sI,EAAA,2H,EAAA,gEAWlB,wEAXkB,C,EAWH,4I;AAAA,K;;;YAXdA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,qU;AAAA;AAAA;ACZ9B;;AACE;;AACE;;AAAmC;;AAAS;;AAC9C;;AACF;;AAEA;;AAAiC;AAAA,mBAAU,IAAA5I,IAAA,EAAV;AAAgB,WAAhB;;AAG/B;;AACE;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AAEF;;AAEE;;AACE;;AAOE;;AACF;;AACA;;AAAoC;;AAAM;;AAC5C;;AAIJ;;;;AA1BM;;AAAA;;AAiBE;;AAAA;;;;;;;;;sEDXK4I,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTzR,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;gBAWYuR,iB;AAAiB;kBAAtD,oDAAsD;mBAA/C,wE;AAA+C;;;;;;;;;;;;;;;;;;;;;;AEvB3D;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAEE;;;;AACF;;;;;;AADU;;AAAA;;;;QDWGK,oB;AAQX,oCACS1G,SADT,EAEU1B,SAFV,EAGkC1K,IAHlC,EAISiC,YAJT,EAImC;AAAA;;AAH1B,aAAAmK,SAAA,GAAAA,SAAA;AACC,aAAA1B,SAAA,GAAAA,SAAA;AACwB,aAAA1K,IAAA,GAAAA,IAAA;AACzB,aAAAiC,YAAA,GAAAA,YAAA;AANT,aAAA8Q,GAAA,GAAM,8CAAN;AAOK;;;;mCAEG;AACN,cAAG,KAAK/S,IAAL,CAAUoN,GAAb,EAAiB;AACf,iBAAK4F,UAAL,CAAgB,KAAKhT,IAAL,CAAUoN,GAA1B;AACD;AACF;;;oCACWtP,E,EAAU;AAAA;;AACpB,eAAKsO,SAAL,CAAe6G,eAAf,CAA+BnV,EAA/B,EACGiC,SADH,CACa,UAAA0N,QAAQ,EAAI;AACrB,gBAAG,CAACA,QAAJ,EAAa;AACX,qBAAI,CAACtC,aAAL;AACD;;AAED,mBAAI,CAACsC,QAAL,GAAgBA,QAAhB;;AACA,mBAAI,CAACuF,UAAL,CAAgB,OAAI,CAACvF,QAAL,CAAcL,GAA9B;;AACA3K,mBAAO,CAACU,GAAR,CAAY,OAAI,CAAC+P,GAAjB;AAGD,WAXH;AAYD;;;mCACU9F,G,EAAW;AACpB,cAAGA,GAAG,IAAE,WAAR,EAAoB;AAClB,iBAAKjC,aAAL;AACA,iBAAKlJ,YAAL,CAAkBU,IAAlB,CAAuB,4BAAvB;AACD,WAHD,MAII;AAEF,iBAAKuQ,GAAL,GAAW9F,GAAX;AAED;AACF;;;wCACY;AAEX,eAAK1C,SAAL,CAAeU,KAAf;AACD;;;;;;;uBAhDU0H,oB,EAAoB,2J,EAAA,sI,EAAA,gEAWrB,wEAXqB,C,EAWN,4I;AAAA,K;;;YAXdA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,yG;AAAA;AAAA;ACbjC;;;;AAAc;;;;;;;;;;sEDaDA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT9R,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;gBAWS4R,oB;AAAoB;kBAAzD,oDAAyD;mBAAlD,wE;AAAkD;;;;;;;;;;;;;;;;;;;;;;AExB9D;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeaK,a;AAOX,6BACS3H,kBADT,EAEUlF,KAFV,EAEgC;AAAA;;AADvB,aAAAkF,kBAAA,GAAAA,kBAAA;AACC,aAAAlF,KAAA,GAAAA,KAAA;AANV,aAAAmF,QAAA,GAAW,KAAX;AAOK;;;;mCAEG;AAAA;;AACN,eAAKD,kBAAL,CAAwBE,mBAAxB;AAEA,eAAKpF,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,kBAAgB;AAAA,gBAAb2F,MAAa,UAAbA,MAAa;;AACpD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,qBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,uBAAI,CAACkG,cAAL,CAAqBjG,MAAM,CAACD,MAA5B;AACD,eAFD,MAEO;AACL,uBAAI,CAACkG,cAAL,CAAqB,KAArB;AACD;AACF;AACF,WAVD;AAWD;;;uCAEclG,M,EAAgB;AAAA;;AAE7B,cAAKA,MAAM,KAAK,KAAhB,EAAwB;AACtBhD,mBAAO,CAACU,GAAR,CAAY,oBAAZ;AACA,iBAAKqI,kBAAL,CAAwBE,mBAAxB;AAED,WAJD,MAIO;AACL;AACA,iBAAKF,kBAAL,CAAwBI,eAAxB,CAAwCnG,MAAxC,EAAgD1F,SAAhD,CAA2D,UAAA8L,YAAY,EAAI;AACzEpJ,qBAAO,CAACU,GAAR,CAAY,qBAAZ,EAAmC0I,YAAnC;;AACA,kBAAKA,YAAL,EAAmB;AACnB,uBAAI,CAACL,kBAAL,CAAwBM,SAAxB,CAAkCD,YAAY,CAAC,cAAD,CAA9C;AACC;AACF,aALD;AAMD;AAEF;;;iCAEQpD,K,EAAgB;AAAA;;AACvB;AACA,eAAK+C,kBAAL,CAAwBtL,IAAxB,CAA6B+H,QAA7B,CAAsC,aAAtC,EAAqDO,QAArD,CAA8D,KAAKZ,aAAL,CAAmB/B,WAAjF;AACA,eAAK2F,kBAAL,CAAwBO,gBAAxB,CAAyC,KAAKP,kBAAL,CAAwBtL,IAAxB,CAA6BuI,KAAtE,EAA6E1I,SAA7E,CAAwF,UAAA8C,IAAI,EAAI;AAC9FJ,mBAAO,CAACU,GAAR,CAAY,eAAZ,EAA6BN,IAA7B;;AACA,gBAAM8F,GAAG,GAAW,4DAAOC,SAAP,CAAkB,OAAI,CAAChB,aAAvB,CAApB;;AACAe,eAAG,CAAClD,MAAJ,GAAa5C,IAAI,CAAC/E,EAAlB;AACA6K,eAAG,CAACjD,MAAJ,GAAa,WAAb,CAJ8F,CAK9F;;AACA,mBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAoB,2EAAqB;AAAEnD,oBAAM,EAAEiD;AAAV,aAArB,CAApB,EAN8F,CAO9F;;AACD,WARD,EAHuB,CAYvB;AACD;;;mCAEU,CAEV;;;;;;;uBA/DUwK,a,EAAa,iJ,EAAA,kH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,6f;AAAA;AAAA;;;ACf1B;;AAEI;;AAEI;;AACI;;AACE;;AACA;;AAAgB;;AAA+B;;AAC/C;;AAAmB;;AAAgC;;AACrD;;AAEA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAiE;AAAA,mBAAU,IAAAnH,QAAA,EAAV;AAAoB,WAApB;;AAC/D;;AAIA;;AAAyH;AAAA;;AAAA;;AAAA,mBAAU,IAAAC,QAAA,WAAV;AAA+B,WAA/B;;AACvH;;AACE;;AAAkE;;AAAI;;AACtE;;AACF;;AACA;;AACE;;AAAmE;;AAAK;;AACxE;;AACF;;AACF;;AAGJ;;AAEA;;AACF;;AAEN;;AACA;;AA+BJ;;;;AAtDoB;;AAAA;;AAMiB;;AAAA;;AAIA;;AAAA;;;;;;;;;sEDZxBkH,a,EAAa;cALzB,uDAKyB;eALf;AACTnS,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTqC,gBAAM,EAAE,CAAC,EAAD;AAHC,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEf1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa8P,S;AAEX,yBAAqBtP,WAArB,EAAuDhF,MAAvD,EAAqE;AAAA;;AAAhD,aAAAgF,WAAA,GAAAA,WAAA;AAAkC,aAAAhF,MAAA,GAAAA,MAAA;AACrD2D,eAAO,CAACU,GAAR,CAAY,uDAAZ;AACD;;;;oCAGCkQ,I,EACAC,K,EAA0B;AAExB;AACA7Q,iBAAO,CAACU,GAAR,CAAY,gBAAZ,EAA8BkQ,IAAI,CAACE,WAAL,CAAiBlV,IAA/C;AACAoE,iBAAO,CAACU,GAAR,CAAY,iBAAZ,EAA+BmQ,KAA/B;AAGF,iBAAO,IAAP;AACD;;;;;;;uBAhBUF,S,EAAS,0H,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACV5P,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACTtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuEY;;AAAsC;;AAAS;;;;;;;;AAC/C;;AAAuC;;AACrC;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAL;;AACF;;;;;;;;AAFuC;;AAAA;;AACE;;AAAA;;;;;;AAKzC;;AAAsC;;AAAG;;;;;;;;AACzC;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAIA;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIvC;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAKA;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAc;;AAC1B;;AACF;;;;;;AAGF;;;;;;AACA;;;;QDnGGgQ,0B;AAYX,0CACSC,cADT,EAEU3P,WAFV,EAGUoC,WAHV,EAIUpH,MAJV,EAKUqH,MALV,EAMSiG,SANT,EAOSnK,YAPT,EAQSD,sBART,EASUsE,KATV,EASgC;AAAA;;AARvB,aAAAmN,cAAA,GAAAA,cAAA;AACC,aAAA3P,WAAA,GAAAA,WAAA;AACA,aAAAoC,WAAA,GAAAA,WAAA;AACA,aAAApH,MAAA,GAAAA,MAAA;AACA,aAAAqH,MAAA,GAAAA,MAAA;AACD,aAAAiG,SAAA,GAAAA,SAAA;AACA,aAAAnK,YAAA,GAAAA,YAAA;AACA,aAAAD,sBAAA,GAAAA,sBAAA;AACC,aAAAsE,KAAA,GAAAA,KAAA;AAbV,aAAA+F,SAAA,GAAwB,EAAxB;AACA,aAAAC,kBAAA,GAA+B,CAAC,UAAD,EAAY,SAAZ,EAAsB,MAAtB,EAA8B,MAA9B,EAAsC,QAAtC,CAA/B;AACA,aAAApK,QAAA,GAAW,oCAAX;AAYK;;;;mCAEG;AAAA;;AAEN,eAAK0E,WAAL,GAAoB5B,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAApB;AAEA,eAAK4M,iBAAL,GAAyB,KAAKxN,WAAL,CAAiBvG,KAAjB,CAAuB;AAC1C9B,gBAAI,EAAC,CAAC,IAAD,EAAO,0DAAWwB,QAAlB,CADqC;AAE1CsU,uBAAW,EAAC,CAAC,IAAD,EAAO,0DAAWtU,QAAlB,CAF8B;AAG1CuU,uBAAW,EAAC,CAAC,IAAD,EAAO,0DAAWvU,QAAlB;AAH8B,WAAvB,CAAzB;AAMA,eAAKiH,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,kBAAgB;AAAA,gBAAb2F,MAAa,UAAbA,MAAa;;AACpD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,qBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,uBAAI,CAACoO,gBAAL,CAAuBnO,MAAM,CAACD,MAA9B;AACD,eAFD,MAEO;AACL,uBAAI,CAACoO,gBAAL,CAAsB,KAAtB;AACD;AACF;AACF,WAVD;AAWD;;;yCAEgB/V,E,EAAU;AAAA;;AAEzB,cAAGA,EAAE,KAAK,KAAV,EAAgB;AACd;AACD;;AACD,eAAK2V,cAAL,CAAoBK,MAApB,CAA2BhW,EAA3B,EACGiC,SADH,CACa,UAAAgU,aAAa,EAAI;AAC1B,gBAAKA,aAAL,EAAqB;AAAA,kBACZlW,IADY,GACqBkW,aADrB,CACZlW,IADY;AAAA,kBACN8V,WADM,GACqBI,aADrB,CACNJ,WADM;AAAA,kBACMC,WADN,GACqBG,aADrB,CACMH,WADN;AAEnB,qBAAI,CAACG,aAAL,GAAqBA,aAArB;AACA,qBAAI,CAAC1H,SAAL,GAAiB0H,aAAa,CAAC1H,SAA/B;;AACA,qBAAI,CAACqH,iBAAL,CAAuBlL,QAAvB,CAAgC;AAAC3K,oBAAI,EAAJA,IAAD;AAAO8V,2BAAW,EAAXA,WAAP;AAAmBC,2BAAW,EAAXA;AAAnB,eAAhC;AACD;AACF,WARH;AASD;;;oCAEW;AACV,cAAK,KAAKhM,aAAL,CAAmBrC,WAAxB,EAAsC;AACpC,gBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,KAAKhB,aAAvB,CAApB;;AACA,gBAAI,KAAKyE,SAAL,CAAeK,MAAf,GAAwB,CAA5B,EAA+B;AACzB/D,iBAAG,CAACnD,MAAJ,GAAa,KAAKoB,WAAL,CAAiB9I,EAA9B;AACA6K,iBAAG,CAACjD,MAAJ,GAAa,WAAb,CAFyB,CAGzB;;AACA,mBAAKY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,sBAAM,EAAEiD;AAAV,eAArB,CAArB;AACD,aALL,MAKU;AACFA,iBAAG,CAACjD,MAAJ,GAAa,WAAb;AACH;AACN;AACF;;;+BAEM;AAAA;;AAAA,cAEE7H,IAFF,GAEU,KAAK6V,iBAAL,CAAuBjL,KAFjC,CAEE5K,IAFF;;AAIL,cAAK,KAAKkW,aAAV,EAA0B;AACxB;AACA,gBAAM/T,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAK0T,iBAAL,CAAuBjL,KADlB,CAAG,EACoB;AAC/B3K,gBAAE,EAAE,KAAKiW,aAAL,CAAmBjW;AADQ,aADpB,CAAb;;AAIA,iBAAK2V,cAAL,CAAoBO,mBAApB,CAAyChU,IAAzC,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,iEAA2DnF,IAA3D,CAA1B;;AACA,kBAAI,CAAC,OAAI,CAAC+J,aAAL,CAAmBrC,WAAxB,EAAqC;AACnC,uBAAI,CAACzG,MAAL,CAAYgK,aAAZ,CAA0B,iBAA1B;AACD,eAFD,MAEO;AACL,uBAAI,CAACgE,SAAL;AACD;AACF,aARH;AAUD,WAhBD,MAgBO;AACL;AAEA,iBAAK2G,cAAL,CAAoBQ,mBAApB,CAAyC,KAAKP,iBAAL,CAAuBjL,KAAhE,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB;AACA,kBAAK,OAAI,CAAC+E,aAAL,CAAmBrC,WAAxB,EAAsC;AACpC,oBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,OAAI,CAAChB,aAAvB,CAApB;;AACAe,mBAAG,CAAClD,MAAJ,GAAa5C,IAAI,CAACkR,aAAL,CAAmBjW,EAAhC;AACA6K,mBAAG,CAACnD,MAAJ,GAAa,OAAI,CAACoB,WAAL,CAAiB9I,EAA9B;AACA6K,mBAAG,CAACjD,MAAJ,GAAa,WAAb,CAJoC,CAKpC;;AACA,uBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,wBAAM,EAAEiD;AAAV,iBAArB,CAArB;AACD;;AACD,qBAAI,CAACkL,gBAAL,CAAsBhR,IAAI,CAACkR,aAAL,CAAmBjW,EAAzC;;AACA,qBAAI,CAACmE,YAAL,CAAkBe,OAAlB,CAA0B,4DAAoDnF,IAApD,CAA1B,EAXyB,CAazB;;AACH,aAfH;AAgBD;AAIF;;;gCAEOC,E,EAAU;AAAA;;AAEhB,eAAK2V,cAAL,CAAoBS,mBAApB,CAAyCpW,EAAzC,EACSiC,SADT,CACqB,YAAK;AAChB,mBAAI,CAAC0T,cAAL,CAAoBU,iBAApB;;AACA,mBAAI,CAAClS,YAAL,CAAkBU,IAAlB,CAAuB,gDAAvB;AACD,WAJT;AAMD,S,CAED;;;;uCACY;AAAA;;AACV,eAAKyJ,SAAL,CAAeoB,YAAf,GACGzN,SADH,CACa,UAAAsM,SAAS;AAAA,mBAAI,OAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WADtB;AAED;;;gDACoB;AAAA;;AACnB,cAAMa,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEyF,oBAAM,EAAE,KAAKsO,aAAL,CAAmBjW,EAA7B;AACEqP,wBAAU,EAAE;AADd;AADsD,WAApC,CAA1B;AAKAD,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AAEnD,mBAAI,CAACsK,gBAAL,CAAsB,OAAI,CAACE,aAAL,CAAmBjW,EAAzC,EAFmD,CAGnD;;AAED,WALD;AAMD;;;iDACwBA,E,EAAU;AAAA;;AACjC,cAAMoP,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEmN,wBAAU,EAAErP;AAAd;AADsD,WAApC,CAA1B;AAGAoP,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AACnD,mBAAI,CAACsK,gBAAL,CAAsB,OAAI,CAACE,aAAL,CAAmBjW,EAAzC;;AACA,mBAAI,CAACgP,SAAL;AACD,WAHD;AAID;;;kDAEyBM,G,EAAW;AACnC,cAAMC,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAACC,KAAb,GAAqB,MAArB;AACAD,sBAAY,CAACrN,IAAb,GAAoB;AAACoN,eAAG,EAAEA;AAAN,WAApB;AACA,cAAMF,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,yFAAjB,EAAuCwI,YAAvC,CAA1B;AAED;;;uCAEevP,E,EAAU;AAAA;;AAExB,eAAKsO,SAAL,CAAemB,cAAf,CAA+BzP,EAA/B,EACSiC,SADT,CACqB,YAAK;AAChB,mBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,mBAAI,CAACvL,YAAL,CAAkBU,IAAlB,CAAuB,2CAAvB;;AACA,mBAAI,CAACkR,gBAAL,CAAsB,OAAI,CAACE,aAAL,CAAmBjW,EAAzC;;AACA,mBAAI,CAACgP,SAAL;AACD,WANT;AAQD;AAED;;;;;;;yCAKc;AAAA;;AAEZ,cAAMW,QAAQ,GAAa;AAAC3P,cAAE,EAAC,EAAJ;AAAOqG,gBAAI,EAAC,gBAAZ;AAA6B5B,gBAAI,EAAE,EAAnC;AAAuCkD,kBAAM,EAAC,KAAKsO,aAAL,CAAmBjW,EAAjE;AAAoEsP,eAAG,EAAC,WAAxE;AAAqF1H,kBAAM,EAAC,QAA5F;AAAsGgI,sBAAU,EAAE,IAAIxG,IAAJ;AAAlH,WAA3B;;AACA,eAAKkF,SAAL,CAAeuB,cAAf,CAA8BF,QAA9B,EACG1N,SADH,CACa,YAAK;AAEd,mBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,mBAAI,CAACvL,YAAL,CAAkBe,OAAlB,CAA0B,0CAA1B;;AACA,mBAAI,CAAC6Q,gBAAL,CAAsB,OAAI,CAACE,aAAL,CAAmBjW,EAAzC;AACD,WANH;AAQD;;;mCAEUA,E,EAAY;AAAA;;AACrB,eAAKqI,MAAL,CAAYtB,IAAZ,CAAiB,yHAAjB;AACA,eAAK7C,sBAAL,CAA4B6L,SAA5B,CAAuC,MAAvC,EAA+C/P,EAA/C;AAEA,eAAKkE,sBAAL,CAA4Bc,iBAA5B,CACa/C,SADb,CACwB,UAAC8C,IAAD,EAAe;AACzB;AAEA,mBAAI,CAACiL,UAAL,CAAgBjL,IAAI,CAAC4K,QAAL,CAAcL,GAA9B;;AACA,mBAAI,CAACyG,gBAAL,CAAsB,OAAI,CAACE,aAAL,CAAmBjW,EAAzC,EAJyB,CAKzB;;;AACA,mBAAI,CAACgP,SAAL;AACD,WARb;AASD;;;mCAEUM,G,EAAK;AAEd,cAAIA,GAAG,IAAI,WAAX,EAAwB;AACtB,iBAAKlL,QAAL,GAAgB,oCAAhB;AACA;AACD;;AACD,cAAM6L,GAAG,GAAGX,GAAG,CAACY,KAAJ,CAAU,GAAV,CAAZ,CANc,CAOd;;AAEA,cAAID,GAAG,CAAC,CAAD,CAAH,KAAW,KAAf,EAAsB;AACpB,iBAAK7L,QAAL,GAAgB,+BAAhB;AACD;AAEF;;;;;;;uBAlOUsR,0B,EAA0B,2K,EAAA,mI,EAAA,2H,EAAA,wH,EAAA,mI,EAAA,4J,EAAA,6I,EAAA,uL,EAAA,mH;AAAA,K;;;YAA1BA,0B;AAA0B,8C;AAAA,e;AAAA,a;AAAA,sqC;AAAA;AAAA;ACzBvC;;AACE;;AAEE;;AACE;;AAAgB;;AAAc;;AAE9B;;AACE;;AAAsC;AAAA,mBAAU,IAAA3J,IAAA,EAAV;AAAgB,WAAhB;;AAEpC;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEF;;AACE;;AACA;;AAOE;;AACF;;AACF;;AACA;;AACF;;AACF;;AAEF;;AAIA;;AACE;;AACE;;AAGE;AAAA,mBAAS,IAAA8D,cAAA,EAAT;AAAyB,WAAzB;;AAGA;;AAAU;;AAAG;;AAAW;;AAC1B;;AACF;;AAEA;;AACE;;AACE;;AAAgB;;AAAU;;AAC5B;;AACA;;AACA;;AACE;;AAEE;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AASF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AACF;;AACF;;AACF;;AAWF;;;;AApIc;;AAAA;;AA8BF;;AAAA;;AAmBJ;;AAAA;;AAYiB;;AAAA;;AAuDI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDnGT6F,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTxS,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzBvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBI;;AAAuC;;AAAe;;;;;;AACtD;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAY;;;;;;AACnD;;AAAwC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAwC;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmD;;AAAU;;AAAM;;AAC9H;;AAAW;;;;;;AAKX;;AAAsC;;AAAQ;;;;;;;;AAC9C;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;QDhCWkT,sB;AAKX,sCACSX,cADT,EAESxR,YAFT,EAGUnD,MAHV,EAIUwH,KAJV,EAIgC;AAAA;;AAHvB,aAAAmN,cAAA,GAAAA,cAAA;AACA,aAAAxR,YAAA,GAAAA,YAAA;AACC,aAAAnD,MAAA,GAAAA,MAAA;AACA,aAAAwH,KAAA,GAAAA,KAAA;AAPV,aAAA+N,cAAA,GAAkC,EAAlC;AACA,aAAA/J,gBAAA,GAA6B,CAAC,MAAD,EAAQ,aAAR,EAAsB,MAAtB,EAA6B,QAA7B,CAA7B;AAOK;;;;mCAEG;AACN,eAAK6J,iBAAL;AACD;;;4CAEgB;AAAA;;AACf,eAAKV,cAAL,CAAoBU,iBAApB,GACGpU,SADH,CACa,UAAAsU,cAAc;AAAA,mBAAI,OAAI,CAACA,cAAL,GAAsBA,cAA1B;AAAA,WAD3B;AAED;;;6BAEIvW,E,EAAU;AACb,eAAKwI,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEpD,kBAAM,EAAE3H;AAAV,WAArB,CAArB;AACA,eAAKgB,MAAL,CAAYgK,aAAZ,CAA0B,qBAA1B;AACD;;;gCAEMhL,E,EAAU;AAAA;;AACf,eAAK2V,cAAL,CAAoBS,mBAApB,CAAwCpW,EAAxC,EACGiC,SADH,CACa,YAAK;AAEd,mBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,gDAAvB;;AACA,mBAAI,CAACwR,iBAAL;AACD,WALH;AAMD;;;;;;;uBAjCUC,sB,EAAsB,2K,EAAA,4I,EAAA,uH,EAAA,kH;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,wtB;AAAA;AAAA;ACbnC;;AACE;;AACA;;AAAK;;AAAkB;;AACvB;;AACE;;AAA2D;;AAAM;;AAEjE;;AAA0C;;AAAkB;;AAC9D;;AACF;;AAKA;;AAEA;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AAKF;;AAEA;;AACA;;AACF;;;;AA1C+B;;AAAA;;AAWd;;AAAA;;AA6BI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDhCDA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTpT,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdnaoT,iB;;;;;YAAAA;;;;yBAAAA,iB;AAAiB,O;AAAA,gBA9C1B,4DA8C0B,EA7C1B,sEA6C0B,EA5C1B,qEA4C0B,EA3C1B,iEA2C0B,EA1C1B,+DA0C0B,EAzC1B,qEAyC0B,EAxC1B,oFAwC0B,EAvC1B,uEAuC0B,EAtC1B,oFAsC0B,EArC1B,yEAqC0B,EApC1B,sFAoC0B,EAnC1B,qEAmC0B,EAlC1B,6EAkC0B,EAjC1B,uEAiC0B,EAhC1B,2EAgC0B,EA/B1B,iFA+B0B,EA9B1B,yEA8B0B,EA7B1B,2EA6B0B,EA5B1B,+EA4B0B,EA3B1B,gFA2B0B,EA1B1B,8EA0B0B,EAzB1B,qEAyB0B,EAxB1B,uEAwB0B,EAvB1B,qEAuB0B,EAtB1B,qEAsB0B,EArB1B,2EAqB0B,EApB1B,+EAoB0B,EAnB1B,oFAmB0B,EAlB1B,4FAkB0B,EAjB1B,uEAiB0B,EAhB1B,uEAgB0B,EAf1B,yEAe0B,EAd1B,2EAc0B,EAb1B,yEAa0B,EAZ1B,oFAY0B,EAX1B,8EAW0B,EAV1B,qEAU0B,EAT1B,uEAS0B,EAR1B,qEAQ0B,EAP1B,2EAO0B,EAN1B,2EAM0B,EAL1B,qEAK0B,EAJ1B,gEAI0B,EAH1B,sEAG0B;;;;0HAAjBA,iB,EAAiB;AAAA,kBA9C1B,4DA8C0B,EA7C1B,sEA6C0B,EA5C1B,qEA4C0B,EA3C1B,iEA2C0B,EA1C1B,+DA0C0B,EAzC1B,qEAyC0B,EAxC1B,oFAwC0B,EAvC1B,uEAuC0B,EAtC1B,oFAsC0B,EArC1B,yEAqC0B,EApC1B,sFAoC0B,EAnC1B,qEAmC0B,EAlC1B,6EAkC0B,EAjC1B,uEAiC0B,EAhC1B,2EAgC0B,EA/B1B,iFA+B0B,EA9B1B,yEA8B0B,EA7B1B,2EA6B0B,EA5B1B,+EA4B0B,EA3B1B,gFA2B0B,EA1B1B,8EA0B0B,EAzB1B,qEAyB0B,EAxB1B,uEAwB0B,EAvB1B,qEAuB0B,EAtB1B,qEAsB0B,EArB1B,2EAqB0B,EApB1B,+EAoB0B,EAnB1B,oFAmB0B,EAlB1B,4FAkB0B,EAjB1B,uEAiB0B,EAhB1B,uEAgB0B,EAf1B,yEAe0B,EAd1B,2EAc0B,EAb1B,yEAa0B,EAZ1B,oFAY0B,EAX1B,8EAW0B,EAV1B,qEAU0B,EAT1B,uEAS0B,EAR1B,qEAQ0B,EAP1B,2EAO0B,EAN1B,2EAM0B,EAL1B,qEAK0B,EAJ1B,gEAI0B,EAH1B,sEAG0B;AAAA,O;AAHX,K;;;;;sEAGNA,iB,EAAiB;cAhD7B,sDAgD6B;eAhDpB;AACRnW,iBAAO,EAAE,CACP,4DADO,EAEP,sEAFO,EAGP,qEAHO,EAIP,iEAJO,EAKP,+DALO,EAMP,qEANO,EAOP,oFAPO,EAQP,uEARO,EASP,oFATO,EAUP,yEAVO,EAWP,sFAXO,EAYP,qEAZO,EAaP,6EAbO,EAcP,uEAdO,EAeP,2EAfO,EAgBP,iFAhBO,EAiBP,yEAjBO,EAkBP,2EAlBO,EAmBP,+EAnBO,EAoBP,gFApBO,EAqBP,8EArBO,EAsBP,qEAtBO,EAuBP,uEAvBO,EAwBP,qEAxBO,EAyBP,qEAzBO,EA0BP,2EA1BO,EA2BP,+EA3BO,EA4BP,oFA5BO,EA6BP,4FA7BO,EA8BP,uEA9BO,EA+BP,uEA/BO,EAgCP,yEAhCO,EAiCP,2EAjCO,EAkCP,yEAlCO,EAmCP,oFAnCO,EAoCP,8EApCO,EAqCP,qEArCO,EAsCP,uEAtCO,EAuCP,qEAvCO,EAwCP,2EAxCO,EAyCP,2EAzCO,EA0CP,qEA1CO,EA2CP,gEA3CO,EA4CP,sEA5CO;AADD,S;AAgDoB,Q;;;;;;;;;;;;;;;;;;AC9F9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0CU;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAwC;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAuE;;AAAU;;AAAM;;AAClJ;;AAAW;;;;;;AAKX;;AAAsC;;AAAQ;;;;;;;;AAC9C;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;AAnDR;;AACE;;AACE;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AACvC;;AAAU;;AAAG;;AAAW;;AAC1B;;AACF;;AACA;;AACE;;AACE;;AAAgB;;AAAM;;AACxB;;AACA;;AACE;;AAME;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AACF;;AACF;;AACF;;;;;;AA5CuB;;AAAA;;AAuCI;;AAAA;;AACP;;AAAA;;;;QD3DPoW,mB;AASX,mCACS5F,OADT,EAEU6F,iBAFV,EAGUrO,MAHV,EAISrH,MAJT,EAKS0L,cALT,EAMSiK,SANT,EAOSxS,YAPT,EAOmC;AAAA;;AAN1B,aAAA0M,OAAA,GAAAA,OAAA;AACC,aAAA6F,iBAAA,GAAAA,iBAAA;AACA,aAAArO,MAAA,GAAAA,MAAA;AACD,aAAArH,MAAA,GAAAA,MAAA;AACA,aAAA0L,cAAA,GAAAA,cAAA;AACA,aAAAiK,SAAA,GAAAA,SAAA;AACA,aAAAxS,YAAA,GAAAA,YAAA,CAA0B,CAVnC;;AACA,aAAAyS,SAAA,GAAwB,EAAxB;AACA,aAAApK,gBAAA,GAA6B,CAAC,MAAD,EAAS,QAAT,EAAkB,MAAlB,EAA0B,QAA1B,CAA7B;AASK;;;;mCAEG;AAAA;;AAEN,eAAKE,cAAL,CAAoBsE,MAApB,CACC/O,SADD,CACY;AAAA,gBAAGjC,EAAH,UAAGA,EAAH;AAAA,mBAAY,OAAI,CAAC6W,SAAL,CAAgB7W,EAAhB,CAAZ;AAAA,WADZ;AAEA,eAAK8W,UAAL,GAAkB,KAAKJ,iBAAL,CAAuB7U,KAAvB,CAA6B;AAC7CwE,gBAAI,EAAC,CAAC,IAAD,EAAO,0DAAW9E,QAAlB,CADwC;AAE7CwV,qBAAS,EAAC,CAAC,IAAD,CAFmC;AAG7CC,uBAAW,EAAC,CAAC,IAAD;AAHiC,WAA7B,CAAlB;AAQD;;;kCAEShX,E,EAAU;AAAA;;AAClB,cAAGA,EAAE,KAAG,KAAR,EAAc;AACZ;AACD;;AACD,eAAK6Q,OAAL,CAAaoG,KAAb,CAAmBjX,EAAnB,EACGiC,SADH,CACa,UAAA6D,MAAM,EAAI;AACnB,gBAAG,CAACA,MAAJ,EAAW;AACT,qBAAO,OAAI,CAAC9E,MAAL,CAAYgK,aAAZ,YAAP;AACD;;AAHkB,gBAIZ3E,IAJY,GAIoBP,MAJpB,CAIZO,IAJY;AAAA,gBAIN0Q,SAJM,GAIoBjR,MAJpB,CAINiR,SAJM;AAAA,gBAIKC,WAJL,GAIoBlR,MAJpB,CAIKkR,WAJL;AAKnB,mBAAI,CAAClR,MAAL,GAAcA,MAAd;AACA,mBAAI,CAAC8Q,SAAL,GAAiB9Q,MAAM,CAAC8Q,SAAxB;;AACA,mBAAI,CAACE,UAAL,CAAgBpM,QAAhB,CAAyB;AAACrE,kBAAI,EAAJA,IAAD;AAAO0Q,uBAAS,EAATA,SAAP;AAAkBC,yBAAW,EAAXA;AAAlB,aAAzB;AACD,WATH;AAUD;;;+BAEM;AAAA;;AAAA,cAEE3Q,IAFF,GAEU,KAAKyQ,UAAL,CAAgBnM,KAF1B,CAEEtE,IAFF;;AAGL,cAAK,KAAKP,MAAV,EAAmB;AACjB;AACA,gBAAM5D,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAK4U,UAAL,CAAgBnM,KADX,CAAG,EACa;AACxB3K,gBAAE,EAAE,KAAK8F,MAAL,CAAY9F,EADQ;AAExB+W,uBAAS,EAAE,KAAKjR,MAAL,CAAYiR;AAFC,aADb,CAAb;AAKApS,mBAAO,CAACU,GAAR,CAAYnD,IAAZ;;AACA,iBAAK2O,OAAL,CAAaqG,YAAb,CAA2BhV,IAA3B,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,yDAAmDmB,IAAnD,CAA1B;AACD,aAHH;AAKD,WAbD,MAaO;AACL;AAEA,iBAAKwK,OAAL,CAAasG,YAAb,CAA2B,KAAKL,UAAL,CAAgBnM,KAA3C,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,oDAA8CmB,IAA9C,CAA1B;;AACA,qBAAI,CAACrF,MAAL,CAAYgK,aAAZ,mBAAsCjG,IAAI,CAACe,MAAL,CAAY9F,EAAlD;AACH,aAJH;AAKD;AAIF;;;iDAEqB;AACpB,eAAKoX,iBAAL,GAAyB,KAAK/O,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,CAAzB;AACD;;;gDAEoB;AAAA;;AACnB,cAAMsQ,qBAAqB,GAAG,KAAKhP,MAAL,CAAYtB,IAAZ,CAAiB,uFAAjB,EAAwC;AACpE7E,gBAAI,EAAE;AAAEoV,sBAAQ,EAAE,KAAKxR,MAAL,CAAY9F,EAAxB;AACEwG,wBAAU,EAAE;AADd;AAD8D,WAAxC,CAA9B;AAKA6Q,+BAAqB,CAAC7L,WAAtB,GAAoCvJ,SAApC,CAA+C,UAAAwJ,MAAM,EAAI;AACvD,mBAAI,CAACoL,SAAL,CAAe,OAAI,CAAC/Q,MAAL,CAAY9F,EAA3B;AACD,WAFD;AAGD;;;iDAEwBA,E,EAAU;AAAA;;AACjC,cAAMqX,qBAAqB,GAAG,KAAKhP,MAAL,CAAYtB,IAAZ,CAAiB,uFAAjB,EAAwC;AACpE7E,gBAAI,EAAE;AAAEsE,wBAAU,EAAExG;AAAd;AAD8D,WAAxC,CAA9B;AAGAqX,+BAAqB,CAAC7L,WAAtB,GAAoCvJ,SAApC,CAA+C,UAAAwJ,MAAM,EAAI;AACvD,mBAAI,CAACoL,SAAL,CAAe,OAAI,CAAC/Q,MAAL,CAAY9F,EAA3B;AACD,WAFD;AAID;;;uCAEW;AAAA;;AACV,eAAK2W,SAAL,CAAeY,YAAf,GACCtV,SADD,CACW,UAAA2U,SAAS;AAAA,mBAAI,OAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WADpB;AAEH;;;uCAEe5W,E,EAAU;AAAA;;AAExB,eAAK2W,SAAL,CAAea,cAAf,CAA+BxX,EAA/B,EACSiC,SADT,CACqB,YAAK;AAChB,mBAAI,CAAC4U,SAAL,CAAe,OAAI,CAAC/Q,MAAL,CAAY9F,EAA3B;;AACA,mBAAI,CAACmE,YAAL,CAAkBU,IAAlB,CAAuB,uCAAvB;AACD,WAJT;AAMD;;;;;;;uBArHY4R,mB,EAAmB,qJ,EAAA,2H,EAAA,mI,EAAA,uH,EAAA,+H,EAAA,2J,EAAA,4I;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,65B;AAAA;AAAA;ACfhC;;AACE;;AACA;;AACE;;AAAgB;;AAAM;;AACxB;;AACA;;AACE;;AAA+B;AAAA,mBAAU,IAAA1K,IAAA,EAAV;AAAgB,WAAhB;;AAC7B;;AACF;;AAEE;;AACA;;AAAW;;AAA0B;;AACvC;;AACF;;AACE;;AACA;;AAAuG;;AAAO;;AAC9G;;AACF;;AACA;;AACA;;AAEF;;AAEA;;AAyDA;;;;AA1EU;;AAAA;;AASiE;;AAAA;;AAQpE;;AAAA;;;;;;;;;sEDRM0K,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTvT,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOI;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAU;;;;;;AACjD;;AAAwC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAY;;;;;;AACnD;;AAAwC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;;;;;AAC9C;;AAAwC;;AAAmF;;AAAU;;AAAM;;AAC3I;;AAAW;;;;;;AADgD;;AAAA;;;;;;AAM3D;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;QDnCWqU,e;AAKX,+BACS5G,OADT,EAES1M,YAFT,EAEmC;AAAA;;AAD1B,aAAA0M,OAAA,GAAAA,OAAA;AACA,aAAA1M,YAAA,GAAAA,YAAA;AALT,aAAA2M,OAAA,GAAoB,EAApB;AACA,aAAAtE,gBAAA,GAA6B,CAAC,MAAD,EAAS,WAAT,EAAsB,aAAtB,EAAoC,MAApC,EAA4C,QAA5C,CAA7B;AAMK;;;;mCAEG;AACN,eAAK8E,UAAL;AACD;;;qCAES;AAAA;;AACR,eAAKT,OAAL,CAAaS,UAAb,GACCrP,SADD,CACW,UAAA6O,OAAO;AAAA,mBAAI,OAAI,CAACA,OAAL,GAAeA,OAAnB;AAAA,WADlB;AAEH;;;gCAEO9Q,E,EAAU;AAAA;;AAEhB,eAAK6Q,OAAL,CAAaa,YAAb,CAA2B1R,EAA3B,EACSiC,SADT,CACqB,YAAK;AAChB,mBAAI,CAAC4O,OAAL,CAAaS,UAAb;;AACA,mBAAI,CAACnN,YAAL,CAAkBU,IAAlB,CAAuB,wCAAvB;AACD,WAJT;AAMD;;;;;;;uBA5BY4S,e,EAAe,qJ,EAAA,4I;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,2mB;AAAA;AAAA;ACX5B;;AAME;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;;;AA/CiB;;AA6CI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDnCDA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTvU,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACkBY;;AAAsB;;AAAiB;;AACvC;;AAAsB;;AAAgB;;AACtC;;AAAuD;;AAAiB;;AACxE;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAoB;;AAAsB;;;;;;AAD1C;;AAAA;;AACoB;;AAAA;;;;;;AAO9C;;AACE;;AAAU;;AAAS;;AACrB;;;;;;;;AAFwB;;;;;;;;;;AAYlB;;AAA8F;;AAAiB;;;;;;AAArD;;AAAoC;;AAAA;;;;;;AAA9F;;;;;;AAAQ;;;;;;AANZ;;AAEE;;AAMF;;;;;;;;AANgB;;AAAA;;;;;;;;;;QDlBbsU,c;AAIX,8BAAoB1R,WAApB,EACoB2R,WADpB,EAEoB9E,eAFpB,EAGoB+E,aAHpB,EAIoBpP,KAJpB,EAI0C;AAAA;;AAJtB,aAAAxC,WAAA,GAAAA,WAAA;AACA,aAAA2R,WAAA,GAAAA,WAAA;AACA,aAAA9E,eAAA,GAAAA,eAAA;AACA,aAAA+E,aAAA,GAAAA,aAAA;AACA,aAAApP,KAAA,GAAAA,KAAA;AANpB,aAAA3C,QAAA,GAAW,uDAAX;AACA,aAAAgS,aAAA,GAAgB,MAAhB;AAMiB;;;;mCAET;AAEN,eAAKzR,IAAL,GAAY,KAAKuR,WAAL,CAAiBvR,IAA7B,CAFM,CAGN;;AACA,eAAK4M,OAAL;AACD;;;iCAEK;AACJ,eAAKxK,KAAL,CAAWuC,QAAX,CAAqB,mFAArB;AACA,eAAK/E,WAAL,CAAiB8R,MAAjB;AACD;;;kCAES;AAAA;;AACR,eAAK1R,IAAL,GAAYc,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAAZ;;AAEA,cAAI,KAAK5C,IAAT,EAAe;AACb,iBAAKyM,eAAL,CAAqBkF,WAArB,CAAiC,KAAK3R,IAAL,CAAUI,UAA3C,EAAuDvE,SAAvD,CAAkE,UAAA+V,UAAU,EAAI;AAC9E,qBAAI,CAACJ,aAAL,CAAmBf,SAAnB,CAA6BmB,UAAU,CAACV,QAAxC,EAAkDrV,SAAlD,CAA6D,UAAAgW,QAAQ,EAAI;AACvE;AAEA,oBAAK,OAAI,CAAC7R,IAAL,CAAUG,IAAV,KAAmB,YAAxB,EAAuC;AACrC,yBAAI,CAACsR,aAAL,GAAqBI,QAAQ,CAAC5R,IAA9B;AACD,iBAFD,MAEO;AACL,yBAAI,CAACwR,aAAL,GAAqB,MAArB;AACD;AAEF,eATD;AAUD,aAXD;AAYD;AAEF;;;;;;;uBAzCUH,c,EAAc,mI,EAAA,mI,EAAA,oJ,EAAA,8I,EAAA,kH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,2rB;AAAA;AAAA;AClB3B;;AACI;;AACE;;AACE;;AACE;;AAEF;;AAGA;;AACA;;AAA2F;;AAAU;;AAAU;;AAAY;;AAAM;;AACjI;;AACE;;AAAU;;AAAc;;AACxB;;AACA;;AAAU;;AAAe;;AAC3B;;AACA;;AACE;;AAOF;;AAIA;;AAIA;;AAEE;;AAYA;;AAIJ;;AAGF;;AAEF;;AAEA;;AAIM;;AAIN;;;;;;AAtDyB;;AAAA,6FAA0B,oBAA1B,EAA0B,8GAA1B;;AAEjB;;AAAA;;AAeoD;;AAAA;;AAM/C;;AAAA;;;;;;;;;sEDhBFA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTxU,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEliD,CAEA;;;QAuJa8U,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,iBAZX,CACT;AACE5U,eAAO,EAAE,uEADX;AAEEC,gBAAQ,EAAE,4FAFZ;AAGEC,aAAK,EAAE;AAHT,OADS,C;AAOV,gBAlBQ,CACP,4DADO,EAEP,4DAFO,EAGP,2EAHO,EAIP,gEAJO,EAKP;AACA,gEANO,EAOP,kEAPO,EAQP,kFARO,EASP,6DAAa2U,QAAb,CAAsB,yDAAtB,CATO,CAkBR;;;;0HAKUD,W,EAAW;AAAA,uBA5EpB,+DA4EoB,EA3EpB,iFA2EoB,EA1EpB,qEA0EoB,EAzEpB,0FAyEoB,EAxEpB,mHAwEoB,EAvEpB,0FAuEoB,EAtEpB,sGAsEoB,EArEpB,+GAqEoB,EApEpB,wHAoEoB,EAnEpB,+GAmEoB,EAlEpB,4EAkEoB,EAjEpB,6FAiEoB,EAhEpB,yEAgEoB,EA/DpB,kFA+DoB,EA9DpB,+EA8DoB,EA7DpB,wFA6DoB,EA5DpB,4EA4DoB,EA3DpB,qFA2DoB,EA1DpB,+EA0DoB,EAzDpB,kHAyDoB,EAxDpB,yEAwDoB,EAvDpB,kFAuDoB,EAtDpB,2HAsDoB,EArDpB,2FAqDoB,EApDpB,gFAoDoB,EAnDpB,6EAmDoB,EAlDpB,wHAkDoB,EAjDpB,2HAiDoB,EAhDpB,sFAgDoB,EA/CpB,mFA+CoB,EA9CpB,gEA8CoB,EA7CpB,kHA6CoB,EA5CpB,yGA4CoB,EA3CpB,kHA2CoB,EA1CpB,yHA0CoB,EAzCpB,+GAyCoB,EAxCpB,wHAwCoB,EAvCpB,6FAuCoB,EAtCpB,sGAsCoB,EArCpB,gGAqCoB,EApCpB,yGAoCoB,EAnCpB,kHAmCoB,EAlCpB,2HAkCoB,EAjCpB,4EAiCoB,EAhCpB,qFAgCoB,EA/BpB,gGA+BoB,EA9BpB,yGA8BoB,EA7BpB,mEA6BoB,EA5BpB,kFA4BoB,EA3BpB,mFA2BoB,EA1BpB,2EA0BoB,EAzBpB,uEAyBoB;AAzBN,kBAGd,4DAHc,EAId,4DAJc,EAKd,2EALc,EAMd,gEANc,EAOd;AACA,kEARc,EASd,kEATc,EAUd,kFAVc,EAUY,4DAVZ,CAyBM;AAfM,kBAY1B,+DAZ0B;AAeN,O;AAHN,K;;;;;sEAGLA,W,EAAW;cA9EvB,sDA8EuB;eA9Ed;AACRrU,sBAAY,EAAE,CACZ,+DADY,EAEZ,iFAFY,EAGZ,qEAHY,EAIZ,0FAJY,EAKZ,mHALY,EAMZ,0FANY,EAOZ,sGAPY,EAQZ,+GARY,EASZ,wHATY,EAUZ,+GAVY,EAWZ,4EAXY,EAYZ,6FAZY,EAaZ,yEAbY,EAcZ,kFAdY,EAeZ,+EAfY,EAgBZ,wFAhBY,EAiBZ,4EAjBY,EAkBZ,qFAlBY,EAmBZ,+EAnBY,EAoBZ,kHApBY,EAqBZ,yEArBY,EAsBZ,kFAtBY,EAuBZ,2HAvBY,EAwBZ,2FAxBY,EAyBZ,gFAzBY,EA0BZ,6EA1BY,EA2BZ,wHA3BY,EA4BZ,2HA5BY,EA6BZ,sFA7BY,EA8BZ,mFA9BY,EA+BZ,gEA/BY,EAgCZ,kHAhCY,EAiCZ,yGAjCY,EAkCZ,kHAlCY,EAmCZ,yHAnCY,EAoCZ,+GApCY,EAqCZ,wHArCY,EAsCZ,6FAtCY,EAuCZ,sGAvCY,EAwCZ,gGAxCY,EAyCZ,yGAzCY,EA0CZ,kHA1CY,EA2CZ,2HA3CY,EA4CZ,4EA5CY,EA6CZ,qFA7CY,EA8CZ,gGA9CY,EA+CZ,yGA/CY,EAgDZ,mEAhDY,EAiDZ,kFAjDY,EAkDZ,mFAlDY,EAmDZ,2EAnDY,EAoDZ,uEApDY,CADN;AAuDR/C,iBAAO,EAAE,CACP,4DADO,EAEP,4DAFO,EAGP,2EAHO,EAIP,gEAJO,EAKP;AACA,oEANO,EAOP,kEAPO,EAQP,kFARO,EASP,6DAAaqX,QAAb,CAAsB,yDAAtB,CATO,CAvDD;AAkERrU,mBAAS,EAAE,CACT;AACER,mBAAO,EAAE,uEADX;AAEEC,oBAAQ,EAAE,4FAFZ;AAGEC,iBAAK,EAAE;AAHT,WADS,CAlEH;AA0ERnD,iBAAO,EAAE,CACP,+DADO;AA1ED,S;AA8Ec,Q;;;;;;;;;;;;;;;;;;ACxJxiCO,QAAM+X,WAAW,GAAW,CAC/B;AAAE7X,UAAI,EAAE,WAAR;AAAqBC,eAAS,EAAE,iFAAhC;AAAoD0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA1D,KAD+B,EAE/B;AAAE9X,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE,qEAA5B;AAA4C0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAAlD,KAF+B,EAG/B;AAAE9X,UAAI,EAAE,kBAAR;AAA4BC,eAAS,EAAE,qGAAvC;AAAiE0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAAvE,KAH+B,EAI/B;AAAE9X,UAAI,EAAE,qBAAR;AAA+BC,eAAS,EAAE,8GAA1C;AAAwE0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA9E,KAJ+B,EAK/B;AAAE9X,UAAI,EAAE,qBAAR;AAA+BC,eAAS,EAAE,8GAA1C;AAAuE0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA7E,KAL+B,EAM/B;AAAE9X,UAAI,EAAE,wBAAR;AAAkCC,eAAS,EAAE,uHAA7C;AAA8E0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAApF,KAN+B,EAO/B;AAAE9X,UAAI,EAAE,sBAAR;AAAgCC,eAAS,EAAE,kHAA3C;AAAyE0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA/E,KAP+B,EAQ/B;AAAE9X,UAAI,EAAE,yBAAR;AAAmCC,eAAS,EAAE,2HAA9C;AAAgF0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAAtF,KAR+B,EAS/B;AAAE9X,UAAI,EAAE,WAAR;AAAqBC,eAAS,EAAE,2EAAhC;AAAkD0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAAxD,KAT+B,EAU/B;AAAE9X,UAAI,EAAE,aAAR;AAAuBC,eAAS,EAAE,oFAAlC;AAAwD0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA9D,KAV+B,EAW/B;AAAE9X,UAAI,EAAE,SAAR;AAAmBC,eAAS,EAAE,wEAA9B;AAA+CG,iBAAW,EAAE,CAAC,6DAAD,CAA5D;AAAyEuB,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA/E,KAX+B,EAY/B;AAAE9X,UAAI,EAAE,YAAR;AAAsBC,eAAS,EAAE,iFAAjC;AAAsDG,iBAAW,EAAE,CAAC,6DAAD,CAAnE;AAAgFuB,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAAtF,KAZ+B,EAa/B;AAAE9X,UAAI,EAAE,YAAR;AAAsBC,eAAS,EAAE,kFAAjC;AAAqD0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA3D,KAb+B,EAc/B;AAAE9X,UAAI,EAAE,eAAR;AAAyBC,eAAS,EAAE,2FAApC;AAA4D0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAAlE,KAd+B,EAe/B;AAAE9X,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE,yEAA7B;AAA8C0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAApD,KAf+B,EAgB/B;AAAE9X,UAAI,EAAE,qBAAR;AAA+BC,eAAS,EAAE,kHAA1C;AAAwE0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA9E,KAhB+B,EAiB/B;AAAE9X,UAAI,EAAE,wBAAR;AAAkCC,eAAS,EAAE,yHAA7C;AAA8E0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAApF,KAjB+B,EAkB/B;AAAE9X,UAAI,EAAE,gBAAR;AAA0BC,eAAS,EAAE,gGAArC;AAA6D0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAAnE,KAlB+B,EAmB/B;AAAE9X,UAAI,EAAE,mBAAR;AAA6BC,eAAS,EAAE,yGAAxC;AAAoE0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA1E,KAnB+B,EAoB/B;AAAE9X,UAAI,EAAE,qBAAR;AAA+BC,eAAS,EAAE,+GAA1C;AAAuE0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA7E,KApB+B,EAqB/B;AAAE9X,UAAI,EAAE,wBAAR;AAAkCC,eAAS,EAAE,wHAA7C;AAA8E0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAApF,KArB+B,EAsB/B;AAAE9X,UAAI,EAAE,eAAR;AAAyBC,eAAS,EAAE,6FAApC;AAA2D0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAAjE,KAtB+B,EAuB/B;AAAE9X,UAAI,EAAE,kBAAR;AAA4BC,eAAS,EAAE,sGAAvC;AAAkE0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAAxE,KAvB+B,EAwB/B;AAAE9X,UAAI,EAAE,sBAAR;AAAgCC,eAAS,EAAE,kHAA3C;AAAyE0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA/E,KAxB+B,EAyB/B;AAAE9X,UAAI,EAAE,yBAAR;AAAmCC,eAAS,EAAE,2HAA9C;AAAgF0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAAtF,KAzB+B,EA0B/B;AAAE9X,UAAI,EAAE,gBAAR;AAA0BC,eAAS,EAAE,gGAArC;AAA6D0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAAnE,KA1B+B,EA2B/B;AAAE9X,UAAI,EAAE,mBAAR;AAA6BC,eAAS,EAAE,yGAAxC;AAAoE0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA1E,KA3B+B,EA4B/B;AAAE9X,UAAI,EAAE,WAAR;AAAqBC,eAAS,EAAE,kFAAhC;AAAoD0B,UAAI,EAAE;AAACmW,cAAM,EAAE;AAAT;AAA1D,KA5B+B,EA6B/B;AAAE9X,UAAI,EAAE,EAAR;AAAY+X,gBAAU,EAAE,WAAxB;AAAqCC,eAAS,EAAE;AAAhD,KA7B+B,CAA5B;;;;;;;;;;;;;;;;AClCP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYM;;AAEE;;AACE;;AAEE;;AACE;;AAKF;;AAEA;;AACE;;AAKF;;AAGE;;AACE;;AAMA;;AAIA;;AACF;;AAEJ;;AACA;;AAGE;;AACE;;AAKF;;AAEA;;AACE;;AAMA;;AAIA;;AACF;;AAEA;;AACE;;AAKF;;AAEF;;AACF;;AAIF;;AAEE;;AACE;;AAKF;;AACA;;AACE;;AAKF;;AACA;;AACA;;AACE;;AAKF;;AACA;;AACA;;AACE;;AAKF;;AAGF;;AAEF;;;;;;;;;;AAtGY;;AAAA;;AAQA;;AAAA;;AAUE;;AAAA;;AADA;;AAKA;;AAAA;;AAaF;;AAAA;;AASA;;AAAA;;AADA;;AAKA;;AAAA;;AASA;;AAAA;;AAeJ;;AAAA;;AAOA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;;;;;AAoBF;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIvC;;AAAsC;;AAAW;;;;;;AACjD;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAKF;;AAAsC;;AAAQ;;;;;;AAC9C;;AAAuC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIvC;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAGzC;;;;;;AACA;;;;;;AAOE;;AAAsC;;AAAS;;;;;;AAC/C;;AAAuC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIvC;;AAAsC;;AAAI;;;;;;AAC1C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIvC;;AAAsC;;AAAQ;;;;;;AAC9C;;AAAuC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAGzC;;;;;;AACA;;;;QDnKKC,e;AASX,+BACSrU,YADT,EAEU+H,aAFV,EAGU2G,eAHV,EAIU+E,aAJV,EAKS3L,yBALT,EAMSW,SANT,EAMiD;AAAA;;AALxC,aAAAzI,YAAA,GAAAA,YAAA;AACC,aAAA+H,aAAA,GAAAA,aAAA;AACA,aAAA2G,eAAA,GAAAA,eAAA;AACA,aAAA+E,aAAA,GAAAA,aAAA;AACD,aAAA3L,yBAAA,GAAAA,yBAAA;AACA,aAAAW,SAAA,GAAAA,SAAA;AAbT,aAAAhE,iBAAA,GAA8B,CAAC,MAAD,EAAS,aAAT,EAAwB,UAAxB,EAAoC,OAApC,CAA9B;AACA,aAAAC,sBAAA,GAAmC,CAAC,UAAD,EAAa,MAAb,EAAqB,UAArB,CAAnC;AAaK;;;;mCAEG;AACN,eAAKjB,MAAL,GAAc,KAAKsE,aAAL,CAAmBuM,cAAjC;AACA9T,iBAAO,CAACU,GAAR,CAAY,sBAAZ,EAAoC,KAAKuC,MAAzC;AACA,eAAKmC,qBAAL,CAA2B,KAAKnC,MAAL,CAAYG,WAAvC;AACA,eAAK2Q,eAAL,CAAqB,KAAK9Q,MAAL,CAAYG,WAAjC;AACD;;;8CAEqB/H,E,EAAU;AAAA;;AAC9B,eAAKiM,yBAAL,CAA+BxB,aAA/B,CAA6CzK,EAA7C,EACGiC,SADH,CACa,UAAAsI,kBAAkB,EAAI;AAC/B,gBAAI,CAACA,kBAAL,EAAwB;AACtB;AACD;;AACD,mBAAI,CAACA,kBAAL,GAA0BA,kBAA1B;AACA,mBAAI,CAAC9B,QAAL,GAAgB8B,kBAAkB,CAAC9B,QAAnC;AACA,mBAAI,CAACE,aAAL,GAAqB4B,kBAAkB,CAAC5B,aAAxC;AAED,WATH;AAUD;;;kCAEM;AACL;AACA;AACA,eAAKiE,SAAL,CAAeU,KAAf;AACD;;;wCAEevF,W,EAAW;AAAA;;AACzB,eAAKmE,aAAL,CAAmByM,gBAAnB,CAAoC5Q,WAApC,EAAiD9F,SAAjD,CAA4D,UAAA6H,aAAa,EAAI;AAC3EnF,mBAAO,CAACU,GAAR,CAAY,eAAZ,EAA6ByE,aAA7B;;AACA,mBAAI,CAAC+I,eAAL,CAAqBkF,WAArB,CAAiCjO,aAAa,CAAC2I,SAAd,CAAwBjM,UAAzD,EAAqEvE,SAArE,CAA+E,UAAA2W,QAAQ,EAAI;AACvF,qBAAI,CAAChB,aAAL,CAAmBf,SAAnB,CAA6B+B,QAAQ,CAACtB,QAAtC,EAAgDrV,SAAhD,CAA0D,UAAA6D,MAAM,EAAI;AAClE,uBAAI,CAAC+R,aAAL,GAAqB/R,MAAM,CAACO,IAA5B;AACD,eAFD;AAGH,aAJD;AAKD,WAPD,EADyB,CASzB;AACD;;;;;;;uBAtDUmS,e,EAAe,qI,EAAA,8I,EAAA,oJ,EAAA,8I,EAAA,mL,EAAA,sI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,c;AAAA,6lD;AAAA;AAAA;ACjB5B;;AACI;;AACI;;AAAmC;;AAAmB;;AACtD;;AAAoD;AAAA,mBAAS,IAAAK,OAAA,EAAT;AAAkB,WAAlB;;AAAkC;;AAAU;;AAAK;;AAAW;;AACpH;;AAEF;;AAEA;;AAEE;;AAEE;;AAiHF;;AAIA;;AACE;;AAAI;;AAAK;;AACT;;AAIE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACA;;AACF;;AAEA;;AACA;;AAAI;;AAA2B;;AAC/B;;AACE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACA;;AACF;;AAEF;;AAEF;;AAEA;;AACE;;AACI;;AAAmC;;AAA8B;;AAErE;;AAEF;;AAEA;;AACI;;AACI;;AACE;;AAAI;;AAAY;;AAChB;;AAAI;;AAAc;;AAClB;;AAAI;;AAAY;;AAClB;;AAEJ;;AACA;;AACI;;AACE;;AAAI;;AAAe;;AACnB;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAiB;;AACvB;;AAEJ;;AACJ;;;;AAxMc;;AAAA;;AAuHO;;AAAA;;AA0BI;;AAAA;;AACP;;AAAA;;AAKG;;AAAA;;AAgBI;;AAAA;;AACP;;AAAA;;AA0BJ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;sED/LHL,e,EAAe;cAL3B,uDAK2B;eALjB;AACTtV,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC+DM;;AAAuC;;AAAQ;;;;;;AAC/C;;AAAoC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAKpC;;AAAuC;;AAAM;;;;;;AAC7C;;AAAoC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAKpC;;AAAuC;;AAAO;;;;;;AAC9C;;AAAoC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAQpC;;AAAuC;;AAAS;;;;;;;;AAChD;;AAEE;;AAAwC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAAQ;;AAExE;;;;;;AAKF;;;;;;AACA;;;;;;;;;;;;QDhFS0V,kB;AAgBX,kCAAoBzQ,MAApB,EAA8C6D,aAA9C,EAA0E;AAAA;;AAAtD,aAAA7D,MAAA,GAAAA,MAAA;AAA0B,aAAA6D,aAAA,GAAAA,aAAA;AAb9C,aAAAM,gBAAA,GAA6B,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,SAA7B,CAA7B;AACA,aAAAtK,IAAA,GAAkB,EAAlB;AACA,aAAA6Q,OAAA,GAAoB,EAApB;AACA,aAAAG,OAAA,GAAU,KAAV;AAIA,aAAAC,IAAA,GAAO,CAAP;AACA,aAAAC,IAAA,GAAO,CAAP;AAKgF;;;;mCAExE;AACN,eAAK2F,MAAL;AACD;;;iCAEQ;AAAA;;AACP,eAAK7M,aAAL,CAAmB8M,iBAAnB,CAAqC,KAAK9M,aAAL,CAAmB+M,UAAnB,CAA8BtO,KAAnE,EACO1I,SADP,CAEU,UAACC,IAAD,EAAU;AACR;AACA,mBAAI,CAAC6Q,OAAL,GAAe7Q,IAAI,CAAC0F,MAApB;AACA,mBAAI,CAAC1F,IAAL,GAAY,OAAI,CAAC6Q,OAAjB;;AACA,mBAAI,CAACQ,OAAL,CAAa;AAACC,uBAAS,EAAE,OAAI,CAACL,IAAjB;AAAuBM,sBAAQ,EAAE,OAAI,CAACL;AAAtC,aAAb;AACD,WAPX,EAQU,UAACxO,KAAD,EAA8B;AAC5BD,mBAAO,CAACU,GAAR,CAAYT,KAAZ;AACD,WAVX;AAYD,S,CAGH;;;;gCACUqD,G,EAAK;AACX,cAAIyL,KAAK,GAAG,CAAZ;AAAA,cACAC,aAAa,GAAG1L,GAAG,CAACuL,SAAJ,GAAgBvL,GAAG,CAACwL,QADpC;AAAA,cAEAG,WAAW,GAAGD,aAAa,GAAG1L,GAAG,CAACwL,QAFlC;AAIA,eAAKvR,IAAL,GAAY,KAAK6Q,OAAL,CAAaO,MAAb,CAAoB,YAAM;AACpCI,iBAAK;AACL,mBAAQA,KAAK,GAAGC,aAAR,IAAyBD,KAAK,IAAIE,WAAnC,GAAkD,IAAlD,GAAyD,KAAhE;AACD,WAHW,CAAZ;AAID;;;+BAEOsF,G,EAAK;AACX,eAAKhN,aAAL,CAAmBiN,YAAnB,CAAgCD,GAAhC,EADW,CAEX;;AACA,cAAM3J,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAAC6J,YAAb,GAA4B,IAA5B;AACA7J,sBAAY,CAAC8J,SAAb,GAAyB,IAAzB;AACA9J,sBAAY,CAACC,KAAb,GAAqB,KAArB;AACA,cAAM5C,SAAS,GAAG,KAAKvE,MAAL,CAAYtB,IAAZ,CAAiB,wEAAjB,EAAkCwI,YAAlC,CAAlB;AAEA3C,mBAAS,CAACpB,WAAV,GAAwBvJ,SAAxB,CAAkC,UAAAwJ,MAAM,EAAI,CAC1C;AACD,WAFD;AAGD;;;;;;;uBA9DUqN,kB,EAAkB,mI,EAAA,8I;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA;AAAA;oEAclB,wE,EAAY,I;;;;;;;;;;;;;;AC7BzB;;AACE;;AACA;;AAAI;;AAAoC;;AACxC;;AACE;;AAA2D;;AAAM;;AAEjE;;AAA0C;;AAAqB;;AACjE;;AACF;;AAKA;;AAEA;;AACA;;AACA;;AAEI;;AAA6C;AAAA,mBAAY,IAAAC,MAAA,EAAZ;AAAoB,WAApB;;AACzC;;AAEA;;AACI;;AAMA;;AAIA;;AACA;;AAAW;;AAAmD;;AAChE;;AAEA;;AACE;;AAMA;;AAIA;;AACA;;AAAW;;AAAmD;;AAChE;;AAGE;;AAAwF;;AAAM;;AACtG;;AACJ;;AAEA;;AAEE;;AAGE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAMA;;AACE;;AACA;;AAKF;;AAIA;;AACA;;AAEF;;AACA;;;;;;;;AA9F6B;;AAAA;;AAerB;;AAAA;;AAOI;;AAAA;;AAKA;;AAAA;;AAUA;;AAAA;;AAKA;;AAAA;;AAOyB;;AAAA;;AAMpB;;AAAA;;AAmCI;;AAAA;;AACP;;AAAA;;AAG0B;;AAAA,8JAAoC,UAApC,EAAoC,EAApC;;;;;;;;;sEDnF7BD,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT5V,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;gBAc5B,uD;iBAAU,wE;;;;;;;;;;;;;;;;;;;;AE7Bb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOakW,W;;;;;;;kCAEDvG,O,EAAmBO,M,EAAoB;AAC/C;AACA,kBAASA,MAAT;AACE,iBAAK,SAAL;AACE,qBAAOP,OAAO,CAACO,MAAR,CAAgB,UAAA1L,MAAM;AAAA,uBAAIA,MAAM,CAACA,MAAP,KAAkB,SAAtB;AAAA,eAAtB,CAAP;;AACF,iBAAK,WAAL;AACE,qBAAOmL,OAAO,CAACO,MAAR,CAAgB,UAAA1L,MAAM;AAAA,uBAAIA,MAAM,CAACA,MAAP,KAAkB,WAAtB;AAAA,eAAtB,CAAP;;AACF,iBAAK,WAAL;AACE,qBAAOmL,OAAO,CAACO,MAAR,CAAgB,UAAA1L,MAAM;AAAA,uBAAIA,MAAM,CAACA,MAAP,KAAkB,WAAtB;AAAA,eAAtB,CAAP;;AACF;AACE,qBAAOmL,OAAP;AARJ;AAWD;;;;;;;uBAfUuG,W;AAAW,K;;;;YAAXA,W;AAAW;;;;;sEAAXA,W,EAAW;cAHvB,kDAGuB;eAHlB;AACJjT,cAAI,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKakT,c;;;;;;;kCAEDC,I,EAAcC,I,EAAY;AAClC9U,iBAAO,CAACU,GAAR,CAAY,QAAZ,EAAsBmU,IAAtB;;AACA,cAAI,CAACA,IAAL,EAAW;AAAE,mBAAO,EAAP;AAAY;;AACzB,cAAI,CAACC,IAAL,EAAY;AAAE,mBAAOD,IAAP;AAAc;;AAC5B,cAAME,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAf,CAJkC,CAKlC;;AACA,cAAMC,KAAK,GAAG,IAAIvQ,IAAJ,CAASoQ,IAAT,CAAd;AACA,cAAI/N,MAAJ;;AAEA,cAAKgO,IAAI,KAAK,KAAd,EAAsB;AACpBhO,kBAAM,GAAGkO,KAAK,CAACC,OAAN,EAAT;AACD,WAFD,MAEO,IAAKH,IAAI,KAAK,OAAd,EAAwB;AAC7BhO,kBAAM,GAAGiO,MAAM,CAACC,KAAK,CAACE,QAAN,EAAD,CAAf;AACD,WAFM,MAEA;AACLpO,kBAAM,GAAGkO,KAAK,CAACG,WAAN,EAAT;AACD;;AAED,iBAAOrO,MAAP;AAEC;;;;;;;uBArBQ8N,c;AAAc,K;;;;YAAdA,c;AAAc;;;;;sEAAdA,c,EAAc;cAH1B,kDAG0B;eAHrB;AACJlT,cAAI,EAAE;AADF,S;AAGqB,Q;;;;;;;;;;;;;;;;;;ACL3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKa0T,gB;;;;;;;kCACDpP,K,EAAeiE,M,EAAc;AACrC;AACA,cAAMoL,WAAW,GAAG,EAApB;AACA,cAAMC,OAAO,GAAG,KAAhB;;AAGA,cAAI,OAAOtP,KAAP,KAAiB,WAArB,EAAkC;AAAE,mBAAOA,KAAP;AAAe;;AACnD,cAAIA,KAAK,CAACiE,MAAN,IAAgBA,MAApB,EAA4B;AAAE,mBAAOjE,KAAP;AAAe,WAPR,CASrC;;;AACA,cAAIuP,aAAa,GAAGvP,KAAK,CAACwP,KAAN,CAAY,CAAZ,EAAevL,MAAM,GAAGoL,WAAxB,CAApB,CAVqC,CAYrC;;AACA,iBAAOE,aAAa,CAACtL,MAAd,GAAuBA,MAAM,GAAGqL,OAAO,CAACrL,MAA/C,EAAuD;AACnD,gBAAMwL,SAAS,GAAGF,aAAa,CAACG,WAAd,CAA0B,GAA1B,CAAlB;;AAEA,gBAAID,SAAS,KAAK,CAAC,CAAnB,EAAsB;AAAE;AAAQ;;AAEhCF,yBAAa,GAAGA,aAAa,CAACC,KAAd,CAAoB,CAApB,EAAuBC,SAAvB,EAAkCE,OAAlC,CAA0C,SAA1C,EAAqD,EAArD,CAAhB;AAEH,WApBoC,CAsBtC;;;AAEC,iBAAOJ,aAAa,GAAGD,OAAvB;AACF;;;;;;;uBA1BWF,gB;AAAgB,K;;;;YAAhBA,gB;AAAgB;;;;;sEAAhBA,gB,EAAgB;cAH5B,kDAG4B;eAHvB;AACJ1T,cAAI,EAAE;AADF,S;AAGuB,Q;;;;;;;;;;;;;;;;;;ACL7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaakU,qB;AAMX,qCACS5D,SADT,EAEU6D,mBAFV,EAGU5N,SAHV,EAIkC1K,IAJlC,EAKSiC,YALT,EAKmC;AAAA;;AAJ1B,aAAAwS,SAAA,GAAAA,SAAA;AACC,aAAA6D,mBAAA,GAAAA,mBAAA;AACA,aAAA5N,SAAA,GAAAA,SAAA;AACwB,aAAA1K,IAAA,GAAAA,IAAA;AACzB,aAAAiC,YAAA,GAAAA,YAAA;AACJ;;;;mCAEG;AACN,cAAG,KAAKjC,IAAL,CAAUsE,UAAV,KAAyB,KAA5B,EAAkC;AAChC,iBAAKuR,WAAL,CAAiB,KAAK7V,IAAL,CAAUsE,UAA3B;AACD;;AAED,eAAKiU,YAAL,GAAoB,KAAKD,mBAAL,CAAyB3Y,KAAzB,CAA+B;AACjDwE,gBAAI,EAAC,CAAC,IAAD,EAAO,0DAAW9E,QAAlB,CAD4C;AAEjD+V,oBAAQ,EAAC,CAAC,KAAKpV,IAAL,CAAUoV,QAAX,CAFwC;AAGjDlF,kBAAM,EAAC,CAAC,IAAD,EAAO,0DAAW7Q,QAAlB;AAH0C,WAA/B,CAApB;AAMD;;;oCACWvB,E,EAAU;AAAA;;AACpB,eAAK2W,SAAL,CAAeoB,WAAf,CAA2B/X,EAA3B,EACGiC,SADH,CACa,UAAA2W,QAAQ,EAAI;AACrB,gBAAG,CAACA,QAAJ,EAAa;AACX,qBAAI,CAACvL,aAAL;AACD;;AAHoB,gBAIdhH,IAJc,GAIYuS,QAJZ,CAIdvS,IAJc;AAAA,gBAIRiR,QAJQ,GAIYsB,QAJZ,CAIRtB,QAJQ;AAAA,gBAIElF,MAJF,GAIYwG,QAJZ,CAIExG,MAJF;AAKrB,mBAAI,CAACwG,QAAL,GAAgBA,QAAhB;;AACA,mBAAI,CAAC6B,YAAL,CAAkB/P,QAAlB,CAA2B;AAACrE,kBAAI,EAAJA,IAAD;AAAOiR,sBAAQ,EAARA,QAAP;AAAiBlF,oBAAM,EAANA;AAAjB,aAA3B;AACD,WARH;AASD;;;wCACY;AACX,eAAKxF,SAAL,CAAeU,KAAf;AACD;;;+BAEM;AAAA;;AAAA,cAEEjH,IAFF,GAEU,KAAKoU,YAAL,CAAkB9P,KAF5B,CAEEtE,IAFF;;AAGL,cAAK,KAAKuS,QAAV,EAAqB;AACnB;AACA,gBAAM1W,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAKuY,YAAL,CAAkB9P,KADb,CAAG,EACe;AAC1B3K,gBAAE,EAAE,KAAK4Y,QAAL,CAAc5Y,EADQ;AAE1BsX,sBAAQ,EAAE,KAAKsB,QAAL,CAActB;AAFE,aADf,CAAb;;AAMA,iBAAKX,SAAL,CAAe+D,cAAf,CAA+BxY,IAA/B,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,wDAAkDmB,IAAlD,CAA1B;;AACA,qBAAI,CAACgH,aAAL;AACD,aAJH;AAMD,WAdD,MAcO;AACL;AAEA,iBAAKsJ,SAAL,CAAegE,cAAf,CAA+B,KAAKF,YAAL,CAAkB9P,KAAjD,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,mDAA2CmB,IAA3C,CAA1B;;AACA,qBAAI,CAACgH,aAAL;AACH,aAJH;AAKD;AAIF;;;;;;;uBAtEUkN,qB,EAAqB,2J,EAAA,2H,EAAA,sI,EAAA,gEAUtB,wEAVsB,C,EAUP,4I;AAAA,K;;;YAVdA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,oa;AAAA;AAAA;ACblC;;AACE;;AACE;;AAAmC;;AAAK;;AAC1C;;AACF;;AAEA;;AAAiC;AAAA,mBAAU,IAAAxO,IAAA,EAAV;AAAgB,WAAhB;;AAC/B;;AACA;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACE;;AAGI;;AAAyB;;AAAE;;AAC3B;;AAA0B;;AAAE;;AAEhC;;AACA;;AAAW;;AAA0B;;AACvC;;AACA;;AACA;;AACA;;AAOE;;AACF;;AACA;;AAAoC;;AAAM;;AAC1C;;AACA;;;;AA9BI;;AAAA;;AAwBF;;AAAA;;;;;;;;;sEDjBSwO,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTrX,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;gBAUQmX,qB;AAAqB;kBAA1D,oDAA0D;mBAAnD,wE;AAAmD;;;;;;;;;;;;;;;;;;;;;;AEvB/D;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOI;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAS;;;;;;AAChD;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAK;;;;;;;;;;AAC5C;;AAAwC;;AAA+F;;AAAU;;AAAM;;AACvJ;;AAAW;;;;;;AADgD;;AAAA;;;;;;AAI7D;;;;;;AACA;;;;QDrBWK,iB;AAKX,iCACSjE,SADT,EAEU/J,SAFV,EAEoD;AAAA;;AAD3C,aAAA+J,SAAA,GAAAA,SAAA;AACC,aAAA/J,SAAA,GAAAA,SAAA;AALV,aAAAgK,SAAA,GAAwB,EAAxB;AACA,aAAApK,gBAAA,GAA6B,CAAC,MAAD,EAAS,UAAT,EAAqB,QAArB,EAA8B,MAA9B,CAA7B;AAKK;;;;mCAEG;AACN,eAAK+K,YAAL;AACD;;;uCAEW;AAAA;;AACV,eAAKZ,SAAL,CAAeY,YAAf,GACCtV,SADD,CACW,UAAA2U,SAAS;AAAA,mBAAI,OAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WADpB;AAEH;;;wCAEY;AAEX,eAAKhK,SAAL,CAAeU,KAAf;AACD;;;;;;;uBAtBYsN,iB,EAAiB,2J,EAAA,sI;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,+f;AAAA;AAAA;ACV9B;;AAME;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAEA;;AACA;;AACF;;;;AAhCiB;;AA8BI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDrBDA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT1X,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUc;;AACE;;AAAoC;;AAAiB;;AACvD;;;;;;AADc;;AAAA;;AAAwB;;AAAA;;;;QDGvCyX,sB;AAKX,sCACSC,UADT,EAESnE,SAFT,EAGS3V,MAHT,EAIS0L,cAJT,EAKUtE,WALV,EAMSjE,YANT,EAMmC;AAAA;;AAL1B,aAAA2W,UAAA,GAAAA,UAAA;AACA,aAAAnE,SAAA,GAAAA,SAAA;AACA,aAAA3V,MAAA,GAAAA,MAAA;AACA,aAAA0L,cAAA,GAAAA,cAAA;AACC,aAAAtE,WAAA,GAAAA,WAAA;AACD,aAAAjE,YAAA,GAAAA,YAAA;AAPF,aAAAyS,SAAA,GAAyB,EAAzB;AAQF;;;;mCAEG;AAAA;;AACN,eAAKlK,cAAL,CAAoBsE,MAApB,CACK/O,SADL,CACgB;AAAA,gBAAGjC,EAAH,UAAGA,EAAH;AAAA,mBAAY,OAAI,CAACqS,YAAL,CAAmBrS,EAAnB,CAAZ;AAAA,WADhB;AAGA,eAAK+a,aAAL,GAAqB,KAAK3S,WAAL,CAAiBvG,KAAjB,CAAuB;AACtC2E,sBAAU,EAAC,CAAC,IAAD,EAAO,0DAAWjF,QAAlB,CAD2B;AAEtC+F,yBAAa,EAAC,CAAC,IAAD,EAAO,0DAAW/F,QAAlB,CAFwB;AAGtCgG,iBAAK,EAAC,CAAC,IAAD,EAAO,0DAAWhG,QAAlB;AAHgC,WAAvB,CAArB;AAMA,eAAKgW,YAAL;AACD;;;qCAEYvX,E,EAAU;AAAA;;AAErB,cAAGA,EAAE,KAAK,KAAV,EAAgB;AACd;AACD;;AACD,eAAK8a,UAAL,CAAgBzI,YAAhB,CAA6BrS,EAA7B,EACGiC,SADH,CACa,UAAAwQ,SAAS,EAAI;AACtB,gBAAK,CAACA,SAAN,EAAkB;AAChB,qBAAO,OAAI,CAACzR,MAAL,CAAYgK,aAAZ,eAAP;AACD;;AAHqB,gBAIfxE,UAJe,GAIqBiM,SAJrB,CAIfjM,UAJe;AAAA,gBAIHc,aAJG,GAIqBmL,SAJrB,CAIHnL,aAJG;AAAA,gBAIYC,KAJZ,GAIqBkL,SAJrB,CAIYlL,KAJZ;AAKtB,mBAAI,CAACkL,SAAL,GAAiBA,SAAjB;;AACA,mBAAI,CAACsI,aAAL,CAAmBrQ,QAAnB,CAA4B;AAAClE,wBAAU,EAAVA,UAAD;AAAac,2BAAa,EAAbA,aAAb;AAA4BC,mBAAK,EAALA;AAA5B,aAA5B;AACD,WARH;AASD;;;+BAEM;AAAA;;AAAA,cAEED,aAFF,GAEmB,KAAKyT,aAAL,CAAmBpQ,KAFtC,CAEErD,aAFF;;AAIL,cAAK,KAAKmL,SAAV,EAAsB;AACpB;AACA,gBAAMvQ,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAK6Y,aAAL,CAAmBpQ,KADd,CAAG,EACgB;AAC3B3K,gBAAE,EAAE,KAAKyS,SAAL,CAAezS;AADQ,aADhB,CAAb;;AAIA,iBAAK8a,UAAL,CAAgBE,eAAhB,CAAiC9Y,IAAjC,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,0DAAoDoC,aAApD,CAA1B;AACD,aAHH;AAKD,WAXD,MAWO;AACL;AAEA,iBAAKwT,UAAL,CAAgBG,eAAhB,CAAiC,KAAKF,aAAL,CAAmBpQ,KAApD,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB,qBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,qDAA6CoC,aAA7C,CAA1B;;AACA,qBAAI,CAACtG,MAAL,CAAYgK,aAAZ,sBAAyCjG,IAAI,CAAC0N,SAAL,CAAezS,EAAxD;AACH,aAJH;AAKD;AAIF;;;uCAEW;AAAA;;AACV,eAAK2W,SAAL,CAAeY,YAAf,GAA8BtV,SAA9B,CAAwC,UAAA2U,SAAS;AAAA,mBAAI,OAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WAAjD;AACD;;;;;;;uBA1EUiE,sB,EAAsB,8J,EAAA,2J,EAAA,uH,EAAA,+H,EAAA,2H,EAAA,4I;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,wc;AAAA;AAAA;ACdnC;;AACE;;AACE;;AAAgB;;AAAO;;AAEvB;;AACE;;AAAkC;AAAA,mBAAU,IAAA9O,IAAA,EAAV;AAAgB,WAAhB;;AAChC;;AACE;;AACE;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACA;;AACE;;AACF;;AACF;;AAEF;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACA;;AACE;;AACF;;AACF;;AAGF;;AACA;;AACE;;AAOE;;AACF;;AACF;;AACA;;AACF;;AACF;;AACF;;;;AA5CY;;AAAA;;AAKgB;;AAAA;;AA+BlB;;AAAA;;;;;;;;;sED3BG8O,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT3X,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;AAAuC;;AAAM;;;;;;AAE7C;;AAAwC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAe;;;;;;AACtD;;AAAwC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAIxC;;AAAuC;;AAAM;;;;;;AAC7C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;;;;;AAC9C;;AAAwC;;AAAsF;;AAAU;;AAAM;;AAC9I;;AAAW;;;;;;AADgD;;AAAA;;;;;;AAM3D;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;QDxBW8X,kB;AAQX,kCACSJ,UADT,EAES3W,YAFT,EAGSwS,SAHT,EAGmC;AAAA;;AAF1B,aAAAmE,UAAA,GAAAA,UAAA;AACA,aAAA3W,YAAA,GAAAA,YAAA;AACA,aAAAwS,SAAA,GAAAA,SAAA;AATT,aAAAwE,UAAA,GAA2B,EAA3B;AACA,aAAA3O,gBAAA,GAA6B,CAAC,YAAD,EAAe,eAAf,EAAgC,OAAhC,EAAyC,MAAzC,EAAiD,QAAjD,CAA7B;AACA,aAAAoK,SAAA,GAAyB,EAAzB;AAQK;;;;mCAGG;AACN,eAAKwE,aAAL;AACA,eAAK7D,YAAL;AACD;;;wCACY;AAAA;;AACX,eAAKuD,UAAL,CAAgBM,aAAhB,GACGnZ,SADH,CACa,UAAAkZ,UAAU;AAAA,mBAAI,OAAI,CAACA,UAAL,GAAkBA,UAAtB;AAAA,WADvB;AAED;;;gCAEOnb,E,EAAU;AAAA;;AAEhB,eAAK8a,UAAL,CAAgBO,eAAhB,CAAiCrb,EAAjC,EACSiC,SADT,CACqB,YAAK;AAEhB,mBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,yCAAvB;;AACA,mBAAI,CAACuW,aAAL;AACD,WALT;AAOD;;;uCACW;AAAA;;AACV,eAAKzE,SAAL,CAAeY,YAAf,GACGtV,SADH,CACa,UAAA2U,SAAS;AAAA,mBAAI,QAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WADtB;AAED;;;wCAEe5W,E,EAAU;AACxB,iBAAO,KAAK4Y,QAAL,GAAgB,KAAKhC,SAAL,CAAe0E,IAAf,CAAoB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACvb,EAAF,KAASA,EAAb;AAAA,WAArB,CAAvB;AAED;;;qCAEYA,E,EAAU;AACrB2E,iBAAO,CAACU,GAAR,CAAY,gBAAZ,EAA8B,KAAKmW,eAAL,CAAqBxb,EAArB,CAA9B;AACA,eAAKqG,IAAL,GAAY,KAAKmV,eAAL,CAAqBxb,EAArB,EAAyBqG,IAArC;AACD;;;;;;;uBA/CU6U,kB,EAAkB,8J,EAAA,4I,EAAA,2J;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,+mB;AAAA;AAAA;ACZ/B;;AAEE;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AAKF;;AAEA;;AACA;;AACF;;;;AArCiB;;AAmCI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDxBDA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACThY,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsGY;;AAAsC;;AAAS;;;;;;;;AAC/C;;AAAuC;;AACrC;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAL;;AACF;;;;;;;;AAFuC;;AAAA;;AACE;;AAAA;;;;;;AAKzC;;AAAsC;;AAAG;;;;;;;;AACzC;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAIA;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAKA;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAc;;AAC1B;;AACF;;;;;;AAGF;;;;;;AACA;;;;QDnIGqY,yB;AAaX,yCACSC,aADT,EAEU1V,WAFV,EAGUoC,WAHV,EAIUpH,MAJV,EAKUqH,MALV,EAMSiG,SANT,EAOSnK,YAPT,EAQSD,sBART,EASUsE,KATV,EASgC;AAAA;;AARvB,aAAAkT,aAAA,GAAAA,aAAA;AACC,aAAA1V,WAAA,GAAAA,WAAA;AACA,aAAAoC,WAAA,GAAAA,WAAA;AACA,aAAApH,MAAA,GAAAA,MAAA;AACA,aAAAqH,MAAA,GAAAA,MAAA;AACD,aAAAiG,SAAA,GAAAA,SAAA;AACA,aAAAnK,YAAA,GAAAA,YAAA;AACA,aAAAD,sBAAA,GAAAA,sBAAA;AACC,aAAAsE,KAAA,GAAAA,KAAA;AAdV,aAAA+F,SAAA,GAAwB,EAAxB;AACA,aAAAC,kBAAA,GAA+B,CAAC,UAAD,EAAY,SAAZ,EAAsB,MAAtB,EAA8B,MAA9B,EAAsC,QAAtC,CAA/B;AACA,aAAApK,QAAA,GAAW,oCAAX;AACA,aAAAQ,KAAA,GAAU;AAAC+W,iBAAO,EAAC,KAAT;AAAeC,sBAAY,EAAC;AAA5B,SAAV;AAYK;;;;mCAEG;AAAA;;AAEN,eAAK9S,WAAL,GAAoB5B,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAApB;AACA,eAAK6S,gBAAL,GAAwB,KAAKzT,WAAL,CAAiBvG,KAAjB,CAAuB;AAC7Cia,oBAAQ,EAAC,CAAC,IAAD,EAAO,0DAAWva,QAAlB,CADoC;AAE7Cwa,qBAAS,EAAC,CAAC,IAAD,EAAO,0DAAWxa,QAAlB,CAFmC;AAG7Cya,mBAAO,EAAC,CAAC,IAAD,EAAO,CAAC,0DAAWza,QAAZ,CAAP;AAHqC,WAAvB,EAKrB;AAAC0a,qBAAS,EAAE,KAAKC,SAAL,CAAgB,WAAhB,EAA6B,SAA7B;AAAZ,WALqB,CAAxB;AAOA,eAAK1T,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,kBAAgB;AAAA,gBAAb2F,MAAa,UAAbA,MAAa;;AAChD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,sBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,wBAAI,CAACwU,eAAL,CAAsBvU,MAAM,CAACD,MAA7B;AACD,eAFD,MAEO;AACL,wBAAI,CAACwU,eAAL,CAAsB,KAAtB;AACD;AACF;AACF,WAVL;AAYD;;;wCAIenc,E,EAAU;AAAA;;AAExB,cAAIA,EAAE,KAAK,KAAX,EAAiB;AACf;AACD;;AACD,eAAK0b,aAAL,CAAmBU,MAAnB,CAA0Bpc,EAA1B,EACGiC,SADH,CACa,UAAAoa,YAAY,EAAI;AAEzB,gBAAKA,YAAL,EAAmB;AAAA,kBACZP,QADY,GACoBO,YADpB,CACZP,QADY;AAAA,kBACFC,SADE,GACoBM,YADpB,CACFN,SADE;AAAA,kBACSC,OADT,GACoBK,YADpB,CACSL,OADT;AAEnB,sBAAI,CAACK,YAAL,GAAoBA,YAApB;AACA,sBAAI,CAAC9N,SAAL,GAAiB8N,YAAY,CAAC9N,SAA9B;;AACA,sBAAI,CAACsN,gBAAL,CAAsBnR,QAAtB,CAA+B;AAACoR,wBAAQ,EAARA,QAAD;AAAWC,yBAAS,EAATA,SAAX;AAAsBC,uBAAO,EAAPA;AAAtB,eAA/B;AACC;AACF,WATH;AAUD;;;oCAEW;AACV,cAAI,KAAKlS,aAAL,CAAmBrC,WAAvB,EAAoC;AAChC,gBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,KAAKhB,aAAvB,CAApB;;AACA,gBAAI,KAAKyE,SAAL,CAAeK,MAAf,GAAwB,CAA5B,EAA+B;AACzB/D,iBAAG,CAACnD,MAAJ,GAAa,KAAKoB,WAAL,CAAiB9I,EAA9B;AACA6K,iBAAG,CAACjD,MAAJ,GAAa,WAAb,CAFyB,CAGzB;;AACA,mBAAKY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,sBAAM,EAAEiD;AAAV,eAArB,CAArB;AACD,aALL,MAKU;AACFA,iBAAG,CAACjD,MAAJ,GAAa,WAAb;AACH;AACR;AACF;;;+BAEM;AAAA;;AAAA,cAEEkU,QAFF,GAEc,KAAKD,gBAAL,CAAsBlR,KAFpC,CAEEmR,QAFF;;AAIL,cAAK,KAAKO,YAAV,EAAyB;AACvB;AACA,gBAAMna,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAK2Z,gBAAL,CAAsBlR,KADjB,CAAG,EACmB;AAC9B3K,gBAAE,EAAE,KAAKqc,YAAL,CAAkBrc;AADQ,aADnB,CAAb;;AAIA,iBAAK0b,aAAL,CAAmBY,kBAAnB,CAAuCpa,IAAvC,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,sBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,oEAA8D4W,QAA9D,CAA1B;;AACA,kBAAI,CAAC,QAAI,CAAChS,aAAL,CAAmBrC,WAAxB,EAAqC;AACnC,wBAAI,CAACzG,MAAL,CAAYgK,aAAZ,CAA0B,gBAA1B;AACD,eAFD,MAEO;AACL,wBAAI,CAACgE,SAAL;AACD;AACF,aARH;AAUD,WAhBD,MAgBO;AACL;AAEA,iBAAK0M,aAAL,CAAmBa,kBAAnB,CAAuC,KAAKV,gBAAL,CAAsBlR,KAA7D,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB,kBAAI,QAAI,CAAC+E,aAAL,CAAmBrC,WAAvB,EAAoC;AAChC,oBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,QAAI,CAAChB,aAAvB,CAApB;;AACAe,mBAAG,CAAClD,MAAJ,GAAa5C,IAAI,CAACsX,YAAL,CAAkBrc,EAA/B;AACA6K,mBAAG,CAACnD,MAAJ,GAAa,QAAI,CAACoB,WAAL,CAAiB9I,EAA9B;AACA6K,mBAAG,CAACjD,MAAJ,GAAa,WAAb,CAJgC,CAKhC;;AACA,wBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,wBAAM,EAAEiD;AAAV,iBAArB,CAArB;AACH;;AACD,sBAAI,CAACsR,eAAL,CAAqBpX,IAAI,CAACsX,YAAL,CAAkBrc,EAAvC;;AACA,sBAAI,CAACmE,YAAL,CAAkBe,OAAlB,CAA0B,+DAAwD4W,QAAxD,CAA1B,EAVyB,CAYzB;;AACH,aAdH;AAeD;AAIF;;;gCAEO9b,E,EAAU;AAAA;;AAEhB,eAAK0b,aAAL,CAAmBc,kBAAnB,CAAuCxc,EAAvC,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACyZ,aAAL,CAAmBe,gBAAnB;;AACA,oBAAI,CAACtY,YAAL,CAAkBU,IAAlB,CAAuB,mDAAvB;AACD,WAJT;AAMD;;;kCAGO6X,W,EAAqBC,mB,EAA6B;AAC1D,iBAAO,UAAC3S,SAAD,EAA0B;AAC7B,gBAAMvH,OAAO,GAAGuH,SAAS,CAACG,QAAV,CAAmBuS,WAAnB,CAAhB;AACA,gBAAME,eAAe,GAAG5S,SAAS,CAACG,QAAV,CAAmBwS,mBAAnB,CAAxB;;AAEA,gBAAIC,eAAe,CAAC7Z,MAAhB,IAA0B,CAAC6Z,eAAe,CAAC7Z,MAAhB,CAAuB8Z,SAAtD,EAAiE;AAC7D;AACA;AACH,aAP4B,CAS7B;;;AACA,gBAAIpa,OAAO,CAACkI,KAAR,GAAgBiS,eAAe,CAACjS,KAApC,EAA2C;AACvCiS,6BAAe,CAACvS,SAAhB,CAA0B;AAAEwS,yBAAS,EAAE;AAAb,eAA1B;AACH,aAFD,MAEO;AACHD,6BAAe,CAACvS,SAAhB,CAA0B,IAA1B;AACH;AACJ,WAfD;AAgBD,S,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;;;;uCACY;AAAA;;AACV,eAAKiE,SAAL,CAAeoB,YAAf,GACGzN,SADH,CACa,UAAAsM,SAAS;AAAA,mBAAI,QAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WADtB;AAED;;;gDACoB;AAAA;;AACnB,cAAMa,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEyF,oBAAM,EAAE,KAAK0U,YAAL,CAAkBrc,EAA5B;AACEqP,wBAAU,EAAE;AADd;AADsD,WAApC,CAA1B;AAKAD,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AAEnD,oBAAI,CAAC0Q,eAAL,CAAqB,QAAI,CAACE,YAAL,CAAkBrc,EAAvC,EAFmD,CAGnD;;AAED,WALD;AAMD;;;iDACwBA,E,EAAU;AAAA;;AACjC,cAAMoP,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEmN,wBAAU,EAAErP;AAAd;AADsD,WAApC,CAA1B;AAGAoP,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AACnD,oBAAI,CAAC0Q,eAAL,CAAqB,QAAI,CAACE,YAAL,CAAkBrc,EAAvC;;AACA2E,mBAAO,CAACU,GAAR,CAAY,qBAAZ,EAAmC,QAAI,CAACkJ,SAAxC;;AACA,oBAAI,CAACS,SAAL;AACD,WAJD;AAKD;;;kDAEyBM,G,EAAW;AACnC,cAAMC,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAACC,KAAb,GAAqB,MAArB;AACAD,sBAAY,CAACrN,IAAb,GAAoB;AAACoN,eAAG,EAAEA;AAAN,WAApB;AACA,cAAMF,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,yFAAjB,EAAuCwI,YAAvC,CAA1B;AAED;;;uCAEevP,E,EAAU;AAAA;;AAExB,eAAKsO,SAAL,CAAemB,cAAf,CAA+BzP,EAA/B,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,oBAAI,CAACvL,YAAL,CAAkBU,IAAlB,CAAuB,2CAAvB;;AACA,oBAAI,CAACsX,eAAL,CAAqB,QAAI,CAACE,YAAL,CAAkBrc,EAAvC;;AACA2E,mBAAO,CAACU,GAAR,CAAY,qBAAZ,EAAmC,QAAI,CAACkJ,SAAxC;;AACA,oBAAI,CAACS,SAAL;AACD,WAPT;AASD;AAED;;;;;;;yCAKc;AAAA;;AACZ,cAAMW,QAAQ,GAAa;AAAC3P,cAAE,EAAC,EAAJ;AAAOqG,gBAAI,EAAC,gBAAZ;AAA6B5B,gBAAI,EAAE,EAAnC;AAAuCkD,kBAAM,EAAC,KAAK0U,YAAL,CAAkBrc,EAAhE;AAAmEsP,eAAG,EAAC,WAAvE;AAAoF1H,kBAAM,EAAE,QAA5F;AAAsGgI,sBAAU,EAAE,IAAIxG,IAAJ;AAAlH,WAA3B;;AACA,eAAKkF,SAAL,CAAeuB,cAAf,CAA8BF,QAA9B,EACG1N,SADH,CACa,YAAK;AAEd,oBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,oBAAI,CAACvL,YAAL,CAAkBe,OAAlB,CAA0B,0CAA1B;;AACA,oBAAI,CAACiX,eAAL,CAAqB,QAAI,CAACE,YAAL,CAAkBrc,EAAvC;AAED,WAPH;AASD;;;mCAEUA,E,EAAY;AAAA;;AACrB,eAAKqI,MAAL,CAAYtB,IAAZ,CAAiB,yHAAjB;AACA,eAAK7C,sBAAL,CAA4B6L,SAA5B,CAAuC,MAAvC,EAA+C/P,EAA/C;AAEA,eAAKkE,sBAAL,CAA4Bc,iBAA5B,CACa/C,SADb,CACwB,UAAC8C,IAAD,EAAe;AACzB;AAEA,oBAAI,CAACiL,UAAL,CAAgBjL,IAAI,CAAC4K,QAAL,CAAcL,GAA9B;;AACA,oBAAI,CAAC6M,eAAL,CAAqB,QAAI,CAACE,YAAL,CAAkBrc,EAAvC;;AACA,oBAAI,CAACgP,SAAL;AACD,WAPb;AAQD;;;mCAEUM,G,EAAK;AAEd,cAAIA,GAAG,IAAI,WAAX,EAAwB;AACtB,iBAAKlL,QAAL,GAAgB,oCAAhB;AACA;AACD;;AACD,cAAM6L,GAAG,GAAGX,GAAG,CAACY,KAAJ,CAAU,GAAV,CAAZ,CANc,CAOd;;AAEA,cAAID,GAAG,CAAC,CAAD,CAAH,KAAW,KAAf,EAAsB;AACpB,iBAAK7L,QAAL,GAAgB,+BAAhB;AACD;AAEF;;;;;;;uBApQUqX,yB,EAAyB,wK,EAAA,mI,EAAA,2H,EAAA,wH,EAAA,mI,EAAA,4J,EAAA,6I,EAAA,uL,EAAA,mH;AAAA,K;;;YAAzBA,yB;AAAyB,6C;AAAA,e;AAAA,c;AAAA,q2C;AAAA;AAAA;ACxBtC;;AACE;;AACA;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAQ;;AAAW;;AAAS;;AAA2C;;AAC7E;;AACA;;AAEA;;AAEE;;AAEE;;AAGE;;AAEE;;AAAqC;AAAA,mBAAU,IAAA1P,IAAA,EAAV;AAAgB,WAAhB;;AAEnC;;AACE;;AACE;;AAAiC;;AAAW;;AAC5C;;AAAiC;;AAAW;;AAC9C;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAMA;;AAIA;;AACA;;AAAY;;AAA0B;;AACxC;;AAEA;;AACE;;AAOA;;AAIA;;AACA;;AAAW;;AAAqE;;AAClF;;AAGF;;AACE;;AACA;;AAOE;;AACF;;AACF;;AACA;;AACF;;AACF;;AAEF;;AAIA;;AACE;;AACE;;AAGE;AAAA,mBAAS,IAAA8D,cAAA,EAAT;AAAyB,WAAzB;;AAGA;;AAAU;;AAAG;;AAAW;;AAC1B;;AACF;;AAEA;;AACE;;AACE;;AAAgB;;AAAU;;AAC5B;;AACA;;AACA;;AACE;;AAEE;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AASF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AACF;;AACF;;AACF;;AAWF;;;;;;;;AA1Jc;;AAAA;;AAgBA;;AAAA;;AAKA;;AAAA;;AAUA;;AAAA;;AAMA;;AAAA;;AAcF;;AAAA;;AAmBJ;;AAAA;;AAYiB;;AAAA;;AAwDI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDnIT4L,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACTvY,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,qCAAD;AAHF,S;AAK2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzBtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBI;;AAAuC;;AAAU;;;;;;AACjD;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAa;;;;;;AACpD;;AAAwC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAY;;;;;;AACnD;;AAAwC;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAwC;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmD;;AAAU;;AAAM;;AAC9H;;AAAW;;;;;;AAKX;;AAAsC;;AAAQ;;;;;;;;AAC9C;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;QDnCW0Z,qB;AAKX,qCACSpB,aADT,EAESvX,YAFT,EAGUnD,MAHV,EAIUwH,KAJV,EAIgC;AAAA;;AAHvB,aAAAkT,aAAA,GAAAA,aAAA;AACA,aAAAvX,YAAA,GAAAA,YAAA;AACC,aAAAnD,MAAA,GAAAA,MAAA;AACA,aAAAwH,KAAA,GAAAA,KAAA;AAPV,aAAAuU,aAAA,GAAgC,EAAhC;AACA,aAAAvQ,gBAAA,GAA6B,CAAC,UAAD,EAAY,WAAZ,EAAyB,SAAzB,EAAmC,MAAnC,EAA0C,QAA1C,CAA7B;AAOK;;;;mCAEG;AACN,eAAKiQ,gBAAL;AACD;;;2CAEe;AAAA;;AACd,eAAKf,aAAL,CAAmBe,gBAAnB,GACGxa,SADH,CACa,UAAA8a,aAAa;AAAA,mBAAI,QAAI,CAACA,aAAL,GAAqBA,aAAzB;AAAA,WAD1B;AAED;;;6BAEI/c,E,EAAU;AACb,eAAKwI,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEpD,kBAAM,EAAE3H;AAAV,WAArB,CAArB;AACA,eAAKgB,MAAL,CAAYgK,aAAZ,CAA0B,oBAA1B;AACD;;;gCAEMhL,E,EAAU;AAAA;;AACf,eAAK0b,aAAL,CAAmBc,kBAAnB,CAAsCxc,EAAtC,EACGiC,SADH,CACa,YAAK;AAEd,oBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,iDAAvB;;AACA,oBAAI,CAAC4X,gBAAL;AACD,WALH;AAMD;;;;;;;uBAjCUK,qB,EAAqB,wK,EAAA,4I,EAAA,uH,EAAA,kH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,uvB;AAAA;AAAA;ACflC;;AACE;;AACA;;AAAI;;AAAkB;;AACtB;;AACE;;AAA2D;;AAAM;;AAEjE;;AAA0C;;AAAkB;;AAC9D;;AACF;;AAKA;;AAEA;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AAKF;;AAEA;;AACA;;AACF;;;;AA/C+B;;AAAA;;AAWd;;AAAA;;AAkCI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDnCDA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT5Z,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEflC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaa4Z,gB;AAMX,gCACS1U,QADT,EAEStH,MAFT,EAGS0L,cAHT,EAIUE,SAJV,EAKUqQ,kBALV,EAMkC/a,IANlC,EAOSiC,YAPT,EAOmC;AAAA;;AAN1B,aAAAmE,QAAA,GAAAA,QAAA;AACA,aAAAtH,MAAA,GAAAA,MAAA;AACA,aAAA0L,cAAA,GAAAA,cAAA;AACC,aAAAE,SAAA,GAAAA,SAAA;AACA,aAAAqQ,kBAAA,GAAAA,kBAAA;AACwB,aAAA/a,IAAA,GAAAA,IAAA;AACzB,aAAAiC,YAAA,GAAAA,YAAA;AAEH;;;;mCAEE;AACN,cAAG,KAAKjC,IAAL,CAAUqJ,SAAV,KAAwB,KAA3B,EAAiC;AAC/B,iBAAK2R,UAAL,CAAgB,KAAKhb,IAAL,CAAUqJ,SAA1B;AACD;;AAED,eAAK4R,WAAL,GAAmB,KAAKF,kBAAL,CAAwBpb,KAAxB,CAA8B;AAC/CwE,gBAAI,EAAC,CAAC,IAAD,EAAO,0DAAW9E,QAAlB,CAD0C;AAE/CsU,uBAAW,EAAC,CAAC,IAAD,EAAO,0DAAWtU,QAAlB,CAFmC;AAG/C6b,oBAAQ,EAAC,CAAC,IAAD,EAAO,0DAAW7b,QAAlB,CAHsC;AAI/C8b,iBAAK,EAAC,CAAC,IAAD,EAAO,CAAC,0DAAW9b,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,wBAAnB,CAAtB,CAAP,CAJyC;AAK/C8J,qBAAS,EAAC,CAAC,KAAKpJ,IAAL,CAAUoJ,SAAX;AALqC,WAA9B,CAAnB;AAQD;;;mCACUtL,E,EAAU;AAAA;;AACnB,eAAKsI,QAAL,CAAc4U,UAAd,CAAyBld,EAAzB,EACGiC,SADH,CACa,UAAAqb,OAAO,EAAI;AACpB,gBAAG,CAACA,OAAJ,EAAY;AACV,sBAAI,CAACjQ,aAAL;AACD;;AAHmB,gBAIbhH,IAJa,GAIoCiX,OAJpC,CAIbjX,IAJa;AAAA,gBAIPwP,WAJO,GAIoCyH,OAJpC,CAIPzH,WAJO;AAAA,gBAIMuH,QAJN,GAIoCE,OAJpC,CAIMF,QAJN;AAAA,gBAIgBC,KAJhB,GAIoCC,OAJpC,CAIgBD,KAJhB;AAAA,gBAIuB/R,SAJvB,GAIoCgS,OAJpC,CAIuBhS,SAJvB;AAKpB,oBAAI,CAACgS,OAAL,GAAeA,OAAf;;AACA,oBAAI,CAACH,WAAL,CAAiBzS,QAAjB,CAA0B;AAACrE,kBAAI,EAAJA,IAAD;AAAOwP,yBAAW,EAAXA,WAAP;AAAoBuH,sBAAQ,EAARA,QAApB;AAA8BC,mBAAK,EAALA,KAA9B;AAAqC/R,uBAAS,EAATA;AAArC,aAA1B;AACD,WARH;AASD;;;wCACY;AAEX,eAAKsB,SAAL,CAAeU,KAAf;AACD;;;+BACM;AAAA;;AAAA,cAEEjH,IAFF,GAEU,KAAK8W,WAAL,CAAiBxS,KAF3B,CAEEtE,IAFF;;AAGL,cAAK,KAAKiX,OAAV,EAAoB;AAClB;AACA,gBAAMpb,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAKib,WAAL,CAAiBxS,KADZ,CAAG,EACc;AACzB3K,gBAAE,EAAE,KAAKsd,OAAL,CAAatd,EADQ;AAEzBsL,uBAAS,EAAE,KAAKgS,OAAL,CAAahS;AAFC,aADd,CAAb;AAKA3G,mBAAO,CAACU,GAAR,CAAYnD,IAAZ;;AACA,iBAAKoG,QAAL,CAAciV,aAAd,CAA6Brb,IAA7B,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,sBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,uDAAiDmB,IAAjD,CAA1B;;AACA,sBAAI,CAACgH,aAAL;AACD,aAJH;AAMD,WAdD,MAcO;AACL;AAEA,iBAAK/E,QAAL,CAAckV,aAAd,CAA6B,KAAKL,WAAL,CAAiBxS,KAA9C,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB,sBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,kDAA0CmB,IAA1C,CAA1B;;AACA,sBAAI,CAACgH,aAAL;AACH,aAJH;AAKD;AAIF;;;gCAEOrN,E,EAAU;AAAA;;AAEhB,eAAKsI,QAAL,CAAcoD,aAAd,CAA6B1L,EAA7B,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACqG,QAAL,CAAc8C,WAAd;;AACA,oBAAI,CAACjH,YAAL,CAAkBU,IAAlB,CAAuB,wCAAvB;AACD,WAJT;AAMD;;;;;;;uBArFUmY,gB,EAAgB,wJ,EAAA,uH,EAAA,+H,EAAA,sI,EAAA,2H,EAAA,gEAYjB,wEAZiB,C,EAYF,4I;AAAA,K;;;YAZdA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,8lB;AAAA;AAAA;ACX7B;;AACE;;AACE;;AAAmC;;AAAI;;AACzC;;AACF;;AAEA;;AAAgC;AAAA,mBAAU,IAAAjR,IAAA,EAAV;AAAgB,WAAhB;;AAC9B;;AAEA;;AACE;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AACF;;AAEA;;AACE;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACE;;AACA;;AAAW;;AAA8C;;AAC3D;;AACF;;AAEE;;AACE;;AAOE;;AACF;;AACA;;AAAoC;;AAAM;;AAC5C;;AAGJ;;AACA;;;;AA1CM;;AAAA;;AAiCE;;AAAA;;;;;;;;;sED5BKiR,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT9Z,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;gBAYa4Z,gB;AAAgB;kBAArD,oDAAqD;mBAA9C,wE;AAA8C;;;;;;;;;;;;;;;;;;;;;;AEzB1D;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuEY;;AAAsC;;AAAS;;;;;;;;AAC/C;;AAAuC;;AACrC;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAL;;AACF;;;;;;;;AAFuC;;AAAA;;AACE;;AAAA;;;;;;AAKzC;;AAAsC;;AAAG;;;;;;;;AACzC;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAIA;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIvC;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAKA;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAc;;AAC1B;;AACF;;;;;;AAGF;;;;;;AACA;;;;QDnGGS,+B;AAUX,+CACSC,mBADT,EAEU1X,WAFV,EAGUoC,WAHV,EAIUpH,MAJV,EAKUqH,MALV,EAMSiG,SANT,EAOSnK,YAPT,EAQSD,sBART,EASUsE,KATV,EASgC;AAAA;;AARvB,aAAAkV,mBAAA,GAAAA,mBAAA;AACC,aAAA1X,WAAA,GAAAA,WAAA;AACA,aAAAoC,WAAA,GAAAA,WAAA;AACA,aAAApH,MAAA,GAAAA,MAAA;AACA,aAAAqH,MAAA,GAAAA,MAAA;AACD,aAAAiG,SAAA,GAAAA,SAAA;AACA,aAAAnK,YAAA,GAAAA,YAAA;AACA,aAAAD,sBAAA,GAAAA,sBAAA;AACC,aAAAsE,KAAA,GAAAA,KAAA;AAbV,aAAA+F,SAAA,GAAwB,EAAxB;AACA,aAAAC,kBAAA,GAA+B,CAAC,UAAD,EAAa,SAAb,EAAwB,MAAxB,EAAgC,MAAhC,EAAwC,QAAxC,CAA/B;AACA,aAAApK,QAAA,GAAW,oCAAX;AAYK;;;;mCAEG;AAAA;;AACN,eAAK0E,WAAL,GAAoB5B,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAApB;AACA,eAAK2U,sBAAL,GAA8B,KAAKvV,WAAL,CAAiBvG,KAAjB,CAAuB;AAC/C9B,gBAAI,EAAE,CAAC,IAAD,EAAO,0DAAWwB,QAAlB,CADyC;AAE/CsU,uBAAW,EAAE,CAAC,IAAD,CAFkC;AAG/C+H,oBAAQ,EAAE,CAAC,IAAD,EAAO,0DAAWrc,QAAlB;AAHqC,WAAvB,CAA9B;AAMA,eAAKiH,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,kBAAgB;AAAA,gBAAb2F,MAAa,UAAbA,MAAa;;AAChD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,sBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,wBAAI,CAACkW,qBAAL,CAA4BjW,MAAM,CAACD,MAAnC;AACD,eAFD,MAEO;AACL,wBAAI,CAACkW,qBAAL,CAA4B,KAA5B;AACD;AACF;AACF,WAVL;AAWD;;;8CAEqB7d,E,EAAU;AAAA;;AAE9B,cAAIA,EAAE,KAAK,KAAX,EAAiB;AACf;AACD;;AACD,eAAK0d,mBAAL,CAAyB1H,MAAzB,CAAgChW,EAAhC,EACGiC,SADH,CACa,UAAA6b,kBAAkB,EAAI;AAE/B,gBAAKA,kBAAL,EAA0B;AAAA,kBACjB/d,IADiB,GACa+d,kBADb,CACjB/d,IADiB;AAAA,kBACX8V,WADW,GACaiI,kBADb,CACXjI,WADW;AAAA,kBACC+H,QADD,GACaE,kBADb,CACCF,QADD;AAExB,sBAAI,CAACE,kBAAL,GAA0BA,kBAA1B;AACA,sBAAI,CAACvP,SAAL,GAAiBuP,kBAAkB,CAACvP,SAApC;;AACA,sBAAI,CAACoP,sBAAL,CAA4BjT,QAA5B,CAAqC;AAAC3K,oBAAI,EAAJA,IAAD;AAAO8V,2BAAW,EAAXA,WAAP;AAAmB+H,wBAAQ,EAARA;AAAnB,eAArC;AACD;AACF,WATH;AAUD;;;oCAEW;AACV,cAAI,KAAK9T,aAAL,CAAmBrC,WAAvB,EAAoC;AAClC,gBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,KAAKhB,aAAvB,CAApB;;AACA,gBAAI,KAAKyE,SAAL,CAAeK,MAAf,GAAwB,CAA5B,EAA+B;AACzB/D,iBAAG,CAACnD,MAAJ,GAAa,KAAKoB,WAAL,CAAiB9I,EAA9B;AACA6K,iBAAG,CAACjD,MAAJ,GAAa,WAAb,CAFyB,CAGzB;;AACA,mBAAKY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,sBAAM,EAAEiD;AAAV,eAArB,CAArB;AACD,aALL,MAKU;AACFA,iBAAG,CAACjD,MAAJ,GAAa,WAAb;AACH;AACN;AACF;;;+BAEM;AAAA;;AAAA,cAEE7H,IAFF,GAEU,KAAK4d,sBAAL,CAA4BhT,KAFtC,CAEE5K,IAFF;;AAIL,cAAK,KAAK+d,kBAAV,EAA+B;AAC7B;AACA,gBAAM5b,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAKyb,sBAAL,CAA4BhT,KADvB,CAAG,EACyB;AACpC3K,gBAAE,EAAE,KAAK8d,kBAAL,CAAwB9d;AADQ,aADzB,CAAb;;AAIA,iBAAK0d,mBAAL,CAAyBK,wBAAzB,CAAmD7b,IAAnD,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,sBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,wEAAkEnF,IAAlE,CAA1B;;AAEA,kBAAI,CAAC,QAAI,CAAC+J,aAAL,CAAmBrC,WAAxB,EAAqC;AACnC,wBAAI,CAACzG,MAAL,CAAYgK,aAAZ,CAA0B,sBAA1B;AACD,eAFD,MAEO;AACL,wBAAI,CAACgE,SAAL;AACD;AACF,aATH;AAWD,WAjBD,MAiBO;AACL;AAEA,iBAAK0O,mBAAL,CAAyBM,wBAAzB,CAAmD,KAAKL,sBAAL,CAA4BhT,KAA/E,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB;AACA,kBAAI,QAAI,CAAC+E,aAAL,CAAmBrC,WAAvB,EAAoC;AAClC,oBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,QAAI,CAAChB,aAAvB,CAApB;;AACAe,mBAAG,CAAClD,MAAJ,GAAa5C,IAAI,CAAC+Y,kBAAL,CAAwB9d,EAArC;AACA6K,mBAAG,CAACnD,MAAJ,GAAa,QAAI,CAACoB,WAAL,CAAiB9I,EAA9B;AACA6K,mBAAG,CAACjD,MAAJ,GAAa,WAAb,CAJkC,CAKlC;;AACA,wBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,wBAAM,EAAEiD;AAAV,iBAArB,CAArB;AACD;;AAED,sBAAI,CAACgT,qBAAL,CAA2B9Y,IAAI,CAAC+Y,kBAAL,CAAwB9d,EAAnD;;AACA,sBAAI,CAACmE,YAAL,CAAkBe,OAAlB,CAA0B,mEAA4DnF,IAA5D,CAA1B,EAZyB,CAczB;;AACH,aAhBH;AAiBD;AAIF;;;gCAEOC,E,EAAU;AAAA;;AAEhB,eAAK0d,mBAAL,CAAyBO,wBAAzB,CAAmDje,EAAnD,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACyb,mBAAL,CAAyBQ,sBAAzB;;AACA,oBAAI,CAAC/Z,YAAL,CAAkBU,IAAlB,CAAuB,uDAAvB;AACD,WAJT;AAMD,S,CAED;;;;uCACY;AAAA;;AACV,eAAKyJ,SAAL,CAAeoB,YAAf,GACGzN,SADH,CACa,UAAAsM,SAAS;AAAA,mBAAI,QAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WADtB;AAED;;;gDACoB;AAAA;;AACnB,cAAMa,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEyF,oBAAM,EAAE,KAAKmW,kBAAL,CAAwB9d,EAAlC;AACEqP,wBAAU,EAAE;AADd;AADsD,WAApC,CAA1B;AAKAD,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AAEnD,oBAAI,CAACoS,qBAAL,CAA2B,QAAI,CAACC,kBAAL,CAAwB9d,EAAnD,EAFmD,CAGnD;;AACD,WAJD;AAKD;;;iDACwBA,E,EAAU;AAAA;;AACjC,cAAMoP,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEmN,wBAAU,EAAErP;AAAd;AADsD,WAApC,CAA1B;AAGAoP,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AACnD,oBAAI,CAACoS,qBAAL,CAA2B,QAAI,CAACC,kBAAL,CAAwB9d,EAAnD;;AACA,oBAAI,CAACgP,SAAL;AACD,WAHD;AAID;;;kDAEyBM,G,EAAW;AACnC,cAAMC,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAACC,KAAb,GAAqB,MAArB;AACAD,sBAAY,CAACrN,IAAb,GAAoB;AAACoN,eAAG,EAAHA;AAAD,WAApB;AACA,cAAMF,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,yFAAjB,EAAuCwI,YAAvC,CAA1B;AAED;;;uCAEevP,E,EAAU;AAAA;;AAExB,eAAKsO,SAAL,CAAemB,cAAf,CAA+BzP,EAA/B,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,oBAAI,CAACvL,YAAL,CAAkBU,IAAlB,CAAuB,2CAAvB;;AACA,oBAAI,CAACgZ,qBAAL,CAA2B,QAAI,CAACC,kBAAL,CAAwB9d,EAAnD;;AACA,oBAAI,CAACgP,SAAL;AACD,WANT;AAQD;AAED;;;;;;;yCAKc;AAAA;;AACZ,cAAMW,QAAQ,GAAa;AAAC3P,cAAE,EAAC,EAAJ;AAAOqG,gBAAI,EAAC,uBAAZ;AAAoC5B,gBAAI,EAAE,EAA1C;AAA8CkD,kBAAM,EAAC,KAAKmW,kBAAL,CAAwB9d,EAA7E;AAAgFsP,eAAG,EAAC,WAApF;AAAiG1H,kBAAM,EAAC,QAAxG;AAAkHgI,sBAAU,EAAE,IAAIxG,IAAJ;AAA9H,WAA3B;;AACA,eAAKkF,SAAL,CAAeuB,cAAf,CAA8BF,QAA9B,EACG1N,SADH,CACa,YAAK;AAEd,oBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,oBAAI,CAACvL,YAAL,CAAkBe,OAAlB,CAA0B,0CAA1B;;AACA,oBAAI,CAAC2Y,qBAAL,CAA2B,QAAI,CAACC,kBAAL,CAAwB9d,EAAnD;AACD,WANH;AAQD;;;mCAEUA,E,EAAY;AAAA;;AACrB,eAAKqI,MAAL,CAAYtB,IAAZ,CAAiB,yHAAjB;AACA,eAAK7C,sBAAL,CAA4B6L,SAA5B,CAAuC,MAAvC,EAA+C/P,EAA/C;AAEA,eAAKkE,sBAAL,CAA4Bc,iBAA5B,CACa/C,SADb,CACwB,UAAC8C,IAAD,EAAe;AACzB;AAEA,oBAAI,CAACiL,UAAL,CAAgBjL,IAAI,CAAC4K,QAAL,CAAcL,GAA9B;;AACA,oBAAI,CAACuO,qBAAL,CAA2B,QAAI,CAACC,kBAAL,CAAwB9d,EAAnD,EAJyB,CAKzB;;;AACA,oBAAI,CAACgP,SAAL;AACD,WARb;AASD;;;mCAEUM,G,EAAK;AAEd,cAAIA,GAAG,KAAK,WAAZ,EAAyB;AACvB,iBAAKlL,QAAL,GAAgB,oCAAhB;AACA;AACD;;AACD,cAAM6L,GAAG,GAAGX,GAAG,CAACY,KAAJ,CAAU,GAAV,CAAZ,CANc,CAOd;;AAEA,cAAID,GAAG,CAAC,CAAD,CAAH,KAAW,KAAf,EAAsB;AACpB,iBAAK7L,QAAL,GAAgB,+BAAhB;AACD;AAEF;;;;;;;uBA/NUqZ,+B,EAA+B,0L,EAAA,mI,EAAA,2H,EAAA,wH,EAAA,mI,EAAA,4J,EAAA,6I,EAAA,uL,EAAA,mH;AAAA,K;;;YAA/BA,+B;AAA+B,mD;AAAA,e;AAAA,a;AAAA,yqC;AAAA;AAAA;ACzB5C;;AACE;;AAEE;;AACE;;AAAgB;;AAAiB;;AAEjC;;AACE;;AAA2C;AAAA,mBAAU,IAAA1R,IAAA,EAAV;AAAgB,WAAhB;;AAEzC;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACA;;AACE;;AACF;;AACF;;AAGF;;AACE;;AAOE;;AACF;;AACF;;AACA;;AACF;;AACF;;AAEF;;AAIA;;AACE;;AACE;;AAGE;AAAA,mBAAS,IAAA8D,cAAA,EAAT;AAAyB,WAAzB;;AAGA;;AAAU;;AAAG;;AAAW;;AAC1B;;AACF;;AAEA;;AACE;;AACE;;AAAgB;;AAAU;;AAC5B;;AACA;;AACA;;AACE;;AAEE;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AASF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AACF;;AACF;;AACF;;AAWF;;;;AApIc;;AAAA;;AA8BF;;AAAA;;AAmBJ;;AAAA;;AAYiB;;AAAA;;AAuDI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDnGT4N,+B,EAA+B;cAL3C,uDAK2C;eALjC;AACTva,kBAAQ,EAAE,8BADD;AAETC,qBAAW,EAAE,2CAFJ;AAGTC,mBAAS,EAAE,CAAC,2CAAD;AAHF,S;AAKiC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzB5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBI;;AAAuC;;AAAe;;;;;;AACtD;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAY;;;;;;AACnD;;AAAwC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAwC;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmD;;AAAU;;AAAM;;AAC9H;;AAAW;;;;;;AAKX;;AAAsC;;AAAQ;;;;;;;;AAC9C;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;QD/BW+a,2B;AAKX,2CACST,mBADT,EAESvZ,YAFT,EAGUnD,MAHV,EAIUwH,KAJV,EAIgC;AAAA;;AAHvB,aAAAkV,mBAAA,GAAAA,mBAAA;AACA,aAAAvZ,YAAA,GAAAA,YAAA;AACC,aAAAnD,MAAA,GAAAA,MAAA;AACA,aAAAwH,KAAA,GAAAA,KAAA;AAPV,aAAA4V,mBAAA,GAA4C,EAA5C;AACA,aAAA5R,gBAAA,GAA6B,CAAC,MAAD,EAAQ,aAAR,EAAsB,MAAtB,EAA6B,QAA7B,CAA7B;AAOK;;;;mCAEG;AACN,eAAK0R,sBAAL;AACD;;;iDAEqB;AAAA;;AACpB,eAAKR,mBAAL,CAAyBQ,sBAAzB,GACGjc,SADH,CACa,UAAAmc,mBAAmB;AAAA,mBAAI,QAAI,CAACA,mBAAL,GAA2BA,mBAA/B;AAAA,WADhC;AAED;;;6BAEIpe,E,EAAU;AACb,eAAKwI,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEpD,kBAAM,EAAE3H;AAAV,WAArB,CAArB;AACA,eAAKgB,MAAL,CAAYgK,aAAZ,CAA0B,0BAA1B;AACD;;;gCAEMhL,E,EAAU;AAAA;;AACf,eAAK0d,mBAAL,CAAyBO,wBAAzB,CAAkDje,EAAlD,EACGiC,SADH,CACa,YAAK;AAEd,oBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,uDAAvB;;AACA,oBAAI,CAACqZ,sBAAL;AACD,WALH;AAMD;;;;;;;uBAjCUC,2B,EAA2B,0L,EAAA,4I,EAAA,uH,EAAA,kH;AAAA,K;;;YAA3BA,2B;AAA2B,8C;AAAA,e;AAAA,a;AAAA,wtB;AAAA;AAAA;ACdxC;;AACE;;AACA;;AAAI;;AAA2B;;AAC/B;;AACE;;AAA2D;;AAAM;;AAEjE;;AAA0C;;AAA2B;;AACvE;;AACF;;AAKA;;AAEA;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AAKF;;AAEA;;AACA;;AACF;;;;AA1C+B;;AAAA;;AAWd;;AAAA;;AA6BI;;AAAA;;AACP;;AAAA;;;;;;;;;sED/BDA,2B,EAA2B;cALvC,uDAKuC;eAL7B;AACTjb,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK6B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgDM;;AAEE;;AACF;;;;QD3BOib,+B;AAWX,+CACQC,iBADR,EAEStY,WAFT,EAGSoC,WAHT,EAISpH,MAJT,EAKSqH,MALT,EAMQkW,mBANR,EAOQpa,YAPR,EAQQqa,sBARR,EASShW,KATT,EAS+B;AAAA;;AARvB,aAAA8V,iBAAA,GAAAA,iBAAA;AACC,aAAAtY,WAAA,GAAAA,WAAA;AACA,aAAAoC,WAAA,GAAAA,WAAA;AACA,aAAApH,MAAA,GAAAA,MAAA;AACA,aAAAqH,MAAA,GAAAA,MAAA;AACD,aAAAkW,mBAAA,GAAAA,mBAAA;AACA,aAAApa,YAAA,GAAAA,YAAA;AACA,aAAAqa,sBAAA,GAAAA,sBAAA;AACC,aAAAhW,KAAA,GAAAA,KAAA;AAdT,aAAAiW,iBAAA,GAAyC,EAAzC;AACA,aAAAC,0BAAA,GAAuC,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,EAAwB,QAAxB,CAAvC;AAEA,aAAAta,QAAA,GAAW,oCAAX;AAYK;;;;mCAEG;AAAA;;AAER,eAAK0E,WAAL,GAAoB5B,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAApB;AACA,eAAK2V,sBAAL,GAA8B,KAAKvW,WAAL,CAAiBvG,KAAjB,CAAuB;AACnD9B,gBAAI,EAAE,CAAC,IAAD,EAAO,0DAAWwB,QAAlB;AAD6C,WAAvB,CAA9B;AAKA,eAAKiH,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,kBAAgB;AAAA,gBAAb2F,MAAa,UAAbA,MAAa;;AACpD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,sBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,wBAAI,CAACiX,qBAAL,CAA4BhX,MAAM,CAACD,MAAnC;AACD,eAFD,MAEO;AACL,wBAAI,CAACiX,qBAAL,CAA4B,KAA5B;AACD;AACF;AACF,WAVD;AAaD;;;8CAEqB5e,E,EAAU;AAAA;;AAE9B,cAAIA,EAAE,KAAK,KAAX,EAAiB;AACf;AACD;;AACD,eAAKue,mBAAL,CAAyBM,MAAzB,CAAgC7e,EAAhC,EACGiC,SADH,CACa,UAAA6c,kBAAkB,EAAI;AAC/B;AACA;AACA;AACA,gBAAKA,kBAAL,EAAyB;AAAA,kBAClB/e,IADkB,GACV+e,kBADU,CAClB/e,IADkB;AAEzB,sBAAI,CAAC+e,kBAAL,GAA0BA,kBAA1B;AAEA,sBAAI,CAACL,iBAAL,GAAyBK,kBAAkB,CAACL,iBAA5C;;AAEA,sBAAI,CAACE,sBAAL,CAA4BjU,QAA5B,CAAqC;AAAC3K,oBAAI,EAAJA;AAAD,eAArC;AACC;AAEF,WAdH;AAeD;;;+BAGM;AAAA;;AAAA,cAEE2O,WAFF,GAEiB,KAAKiQ,sBAAL,CAA4BhU,KAF7C,CAEE+D,WAFF;;AAIL,cAAK,KAAKoQ,kBAAV,EAA+B;AAC7B;AACA,gBAAM5c,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAKyc,sBAAL,CAA4BhU,KADvB,CAAG,EACyB;AACpC3K,gBAAE,EAAE,KAAK8e,kBAAL,CAAwB9e;AADQ,aADzB,CAAb;;AAIA,iBAAKue,mBAAL,CAAyBQ,wBAAzB,CAAmD7c,IAAnD,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,sBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,6DAAuDwJ,WAAvD,CAA1B;;AACA,kBAAI,CAAC,QAAI,CAAC5E,aAAL,CAAmBrC,WAAxB,EAAqC;AACnC,wBAAI,CAACzG,MAAL,CAAYgK,aAAZ,CAA0B,uBAA1B;AACD,eAFD,MAEO,CACL;AACA;AACD;AACF,aATH;AAWD,WAjBD,MAiBO;AACL;AAEA,iBAAKuT,mBAAL,CAAyBS,wBAAzB,CAAmD,KAAKL,sBAAL,CAA4BhU,KAA/E,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB;AAEA,kBAAI,QAAI,CAAC+E,aAAL,CAAmBrC,WAAvB,EAAmC;AACjC,oBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,QAAI,CAAChB,aAAvB,CAApB;;AACAe,mBAAG,CAAClD,MAAJ,GAAa5C,IAAI,CAAC+Z,kBAAL,CAAwB9e,EAArC;AACA6K,mBAAG,CAACnD,MAAJ,GAAa,QAAI,CAACoB,WAAL,CAAiB9I,EAA9B;AACA6K,mBAAG,CAACjD,MAAJ,GAAa,WAAb,CAJiC,CAK/B;;AACF,wBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,wBAAM,EAAEiD;AAAV,iBAArB,CAArB;AACD;;AAED,sBAAI,CAAC+T,qBAAL,CAA2B7Z,IAAI,CAAC+Z,kBAAL,CAAwB9e,EAAnD;;AACA,sBAAI,CAACmE,YAAL,CAAkBe,OAAlB,CAA0B,wDAAiDwJ,WAAjD,CAA1B,EAbyB,CAezB;;AACH,aAjBH;AAkBD;AAIF;;;gCAEO1O,E,EAAU;AAAA;;AAEhB,eAAKue,mBAAL,CAAyBU,wBAAzB,CAAmDjf,EAAnD,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACsc,mBAAL,CAAyBW,sBAAzB;;AACA,oBAAI,CAAC/a,YAAL,CAAkBU,IAAlB,CAAuB,8DAAvB;AACD,WAJT;AAMD;;;gDAGoB;AAAA;;AACnB,cAAMuK,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEyF,oBAAM,EAAE,KAAKmX,kBAAL,CAAwB9e,EAAlC;AACEqP,wBAAU,EAAE;AADd;AADsD,WAApC,CAA1B;AAKAD,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AAEnD,oBAAI,CAACmT,qBAAL,CAA2B,QAAI,CAACE,kBAAL,CAAwB9e,EAAnD;AAGD,WALD;AAMD;;;iDACwBA,E,EAAU;AAAA;;AACjC,cAAMoP,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEmN,wBAAU,EAAErP;AAAd;AADsD,WAApC,CAA1B;AAGAoP,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AACnD,oBAAI,CAACmT,qBAAL,CAA2B,QAAI,CAACE,kBAAL,CAAwB9e,EAAnD;;AACA2E,mBAAO,CAACU,GAAR,CAAY,eAAZ;AACD,WAHD;AAID;;;mCAGUrF,E,EAAY;AAAA;;AACrB,eAAKqI,MAAL,CAAYtB,IAAZ,CAAiB,yHAAjB;AACA,eAAKyX,sBAAL,CAA4BzO,SAA5B,CAAuC,MAAvC,EAA+C/P,EAA/C;AAEA,eAAKwe,sBAAL,CAA4BxZ,iBAA5B,CACa/C,SADb,CACwB,UAAC8C,IAAD,EAAe;AACzB;AAEA,oBAAI,CAACiL,UAAL,CAAgBjL,IAAI,CAAC4K,QAAL,CAAcL,GAA9B;;AACA,oBAAI,CAACsP,qBAAL,CAA2B,QAAI,CAACE,kBAAL,CAAwB9e,EAAnD;AACD,WANb;AAOD;;;mCAEUsP,G,EAAK;AAEd,cAAIA,GAAG,KAAK,WAAZ,EAAyB;AACvB,iBAAKlL,QAAL,GAAgB,oCAAhB;AACA;AACD;;AACD,cAAM6L,GAAG,GAAGX,GAAG,CAACY,KAAJ,CAAU,GAAV,CAAZ,CANc,CAOd;;AAEA,cAAID,GAAG,CAAC,CAAD,CAAH,KAAW,KAAf,EAAsB;AACpB,iBAAK7L,QAAL,GAAgB,+BAAhB;AACD;AAGF;;;;;;;uBAnLYia,+B,EAA+B,oL,EAAA,mI,EAAA,2H,EAAA,uH,EAAA,mI,EAAA,2L,EAAA,6I,EAAA,uL,EAAA,mH;AAAA,K;;;YAA/BA,+B;AAA+B,mD;AAAA,e;AAAA,a;AAAA,mU;AAAA;AAAA;ACxB5C;;AACE;;AAEE;;AACE;;AAAgB;;AAAoB;;AAEpC;;AACE;;AAA2C;AAAA,mBAAU,IAAAtS,IAAA,EAAV;AAAgB,WAAhB;;AACzC;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AAGF;;AACA;;AACE;;AAOE;;AACF;;AACF;;AACA;;AACF;;AACF;;AAEF;;AASC;;AACA;;AACC;;AACE;;AAAgB;;AAAW;;AAC7B;;AACA;;AACE;;AAIF;;AAEA;;AACF;;AAEF;;;;AAlDc;;AAAA;;AAiBF;;AAAA;;AAwBQ;;AAAA;;;;;;;;;sEDxBPsS,+B,EAA+B;cAL3C,uDAK2C;eALjC;AACTnb,kBAAQ,EAAE,8BADD;AAETC,qBAAW,EAAE,2CAFJ;AAGTC,mBAAS,EAAE,CAAC,2CAAD;AAHF,S;AAKiC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExB5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoBI;;AAAuC;;AAAe;;;;;;AACtD;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAwC;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmD;;AAAU;;AAAM;;AAC9H;;AAAW;;;;;;AAKX;;AAAsC;;AAAQ;;;;;;;;AAC9C;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;QD5BW+b,4B;AAKX,4CACSZ,mBADT,EAESpa,YAFT,EAGUnD,MAHV,EAIUwH,KAJV,EAIgC;AAAA;;AAHvB,aAAA+V,mBAAA,GAAAA,mBAAA;AACA,aAAApa,YAAA,GAAAA,YAAA;AACC,aAAAnD,MAAA,GAAAA,MAAA;AACA,aAAAwH,KAAA,GAAAA,KAAA;AAPV,aAAA4W,mBAAA,GAA4C,EAA5C;AACA,aAAA5S,gBAAA,GAA6B,CAAC,MAAD,EAAQ,MAAR,EAAe,QAAf,CAA7B;AAQK;;;;mCAEG;AACN,eAAK0S,sBAAL;AACD;;;iDAEqB;AAAA;;AACpB,eAAKX,mBAAL,CAAyBW,sBAAzB,GACGjd,SADH,CACa,UAAAmd,mBAAmB;AAAA,mBAAI,QAAI,CAACA,mBAAL,GAA2BA,mBAA/B;AAAA,WADhC;AAED;;;6BAEIpf,E,EAAU;AACb,eAAKwI,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEpD,kBAAM,EAAE3H;AAAV,WAArB,CAArB;AACA,eAAKgB,MAAL,CAAYgK,aAAZ,CAA0B,0BAA1B;AACD;;;gCAEOhL,E,EAAU;AAAA;;AAEhB,eAAKue,mBAAL,CAAyBU,wBAAzB,CAAmDjf,EAAnD,EACSiC,SADT,CACqB,YAAK;AAEhB,oBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,uDAAvB;;AACA,oBAAI,CAACqa,sBAAL;AACD,WALT;AAOD;;;;;;;uBApCUC,4B,EAA4B,0L,EAAA,4I,EAAA,uH,EAAA,kH;AAAA,K;;;YAA5BA,4B;AAA4B,+C;AAAA,e;AAAA,a;AAAA,urB;AAAA;AAAA;ACbzC;;AACE;;AACA;;AAAK;;AAA2B;;AAChC;;AACE;;AAA2D;;AAAM;;AAEjE;;AAA0C;;AAA2B;;AACvE;;AACF;;AAKA;;AAGA;;AAEE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AAKF;;AAEA;;AACA;;AACF;;;;AAtC+B;;AAAA;;AAYd;;AAAA;;AAwBI;;AAAA;;AACP;;AAAA;;;;;;;;;sED5BDA,4B,EAA4B;cALxC,uDAKwC;eAL9B;AACTjc,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,uCAFJ;AAGTC,mBAAS,EAAE,CAAC,uCAAD;AAHF,S;AAK8B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaic,6B;AAOX,6CACSf,iBADT,EAEU1R,SAFV,EAGU0S,2BAHV,EAIkCpd,IAJlC,EAKSiC,YALT,EAMSmK,SANT,EAMmC;AAAA;;AAL1B,aAAAgQ,iBAAA,GAAAA,iBAAA;AACC,aAAA1R,SAAA,GAAAA,SAAA;AACA,aAAA0S,2BAAA,GAAAA,2BAAA;AACwB,aAAApd,IAAA,GAAAA,IAAA;AACzB,aAAAiC,YAAA,GAAAA,YAAA;AACA,aAAAmK,SAAA,GAAAA,SAAA;AACJ;;;;mCAEG;AACN,cAAG,KAAKpM,IAAL,CAAUqd,kBAAV,KAAiC,KAApC,EAA0C;AACxC,iBAAKC,mBAAL,CAAyB,KAAKtd,IAAL,CAAUqd,kBAAnC;AACD;;AAED,eAAKE,oBAAL,GAA4B,KAAKH,2BAAL,CAAiCzd,KAAjC,CAAuC;AACjEwE,gBAAI,EAAC,CAAC,IAAD,EAAO,0DAAW9E,QAAlB,CAD4D;AAEjE6P,eAAG,EAAC,CAAC,IAAD,EAAO,0DAAW7P,QAAlB,CAF6D;AAGjEiY,gBAAI,EAAC,CAAC,IAAD,EAAO,0DAAWjY,QAAlB,CAH4D;AAIjEoG,kBAAM,EAAC,CAAC,KAAKzF,IAAL,CAAUyF,MAAX;AAJ0D,WAAvC,CAA5B;AAOD;;;4CAEmB3H,E,EAAU;AAAA;;AAC5B,eAAKse,iBAAL,CAAuBkB,mBAAvB,CAA2Cxf,EAA3C,EACGiC,SADH,CACa,UAAAyd,gBAAgB,EAAI;AAC7B,gBAAG,CAACA,gBAAJ,EAAqB;AACnB,sBAAI,CAACrS,aAAL;AACD;;AAH4B,gBAItBhH,IAJsB,GAIKqZ,gBAJL,CAItBrZ,IAJsB;AAAA,gBAIhB+K,GAJgB,GAIKsO,gBAJL,CAIhBtO,GAJgB;AAAA,gBAIXoI,IAJW,GAIKkG,gBAJL,CAIXlG,IAJW;AAAA,gBAIL7R,MAJK,GAIK+X,gBAJL,CAIL/X,MAJK;AAK7B,oBAAI,CAAC+X,gBAAL,GAAwBA,gBAAxB;;AACA,oBAAI,CAACD,oBAAL,CAA0B/U,QAA1B,CAAmC;AAACrE,kBAAI,EAAJA,IAAD;AAAO+K,iBAAG,EAAHA,GAAP;AAAYoI,kBAAI,EAAJA,IAAZ;AAAkB7R,oBAAM,EAANA;AAAlB,aAAnC;AACD,WARH;AASD;;;wCAEY;AAEX,eAAKiF,SAAL,CAAeU,KAAf;AACD;;;+BACM;AAAA;;AAAA,cAEEjH,IAFF,GAEU,KAAKoZ,oBAAL,CAA0B9U,KAFpC,CAEEtE,IAFF;;AAGL,cAAK,KAAKqZ,gBAAV,EAA6B;AAC3B;AACA,gBAAMxd,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAKud,oBAAL,CAA0B9U,KADrB,CAAG,EACuB;AAClC3K,gBAAE,EAAE,KAAK0f,gBAAL,CAAsB1f,EADQ;AAElC2H,oBAAM,EAAE,KAAK+X,gBAAL,CAAsB/X;AAFI,aADvB,CAAb;AAKAhD,mBAAO,CAACU,GAAR,CAAYnD,IAAZ;;AACA,iBAAKoc,iBAAL,CAAuBqB,sBAAvB,CAA+Czd,IAA/C,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,sBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,4DAAsDmB,IAAtD,CAA1B;;AACA,sBAAI,CAACgH,aAAL;AACD,aAJH;AAMD,WAdD,MAcO;AACL;AAEA,iBAAKiR,iBAAL,CAAuBsB,sBAAvB,CAA+C,KAAKH,oBAAL,CAA0B9U,KAAzE,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB,sBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,uDAA+CmB,IAA/C,CAA1B;;AACA,sBAAI,CAACgH,aAAL;AAGH,aANH;AAOD;AAIF;;;gCAEOrN,E,EAAU;AAAA;;AAEhB,eAAKse,iBAAL,CAAuBuB,sBAAvB,CAA+C7f,EAA/C,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACqc,iBAAL,CAAuBwB,oBAAvB;;AACA,oBAAI,CAAC3b,YAAL,CAAkBU,IAAlB,CAAuB,6CAAvB;AACD,WAJT;AAMD;;;;;;;uBAvFUwa,6B,EAA6B,oL,EAAA,sI,EAAA,2H,EAAA,gEAW9B,wEAX8B,C,EAWf,4I,EAAA,2J;AAAA,K;;;YAXdA,6B;AAA6B,iD;AAAA,e;AAAA,a;AAAA,4jB;AAAA;AAAA;ACZ1C;;AACE;;AACE;;AAAmC;;AAAmB;;AACxD;;AACF;;AAEA;;AAAyC;AAAA,mBAAU,IAAAtT,IAAA,EAAV;AAAgB,WAAhB;;AACvC;;AAEA;;AACE;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AACF;;AAEA;;AACE;;AACE;;AAMA;;AAIA;;AACA;;AAAW;;AAA0B;;AACvC;;AACF;;AAEE;;AACE;;AAOE;;AACF;;AACA;;AAAoC;;AAAM;;AAC5C;;AAGJ;;AACA;;;;;;AA/CM;;AAAA;;AAoBE;;AAAA;;AAKA;;AAAA;;AAaA;;AAAA;;;;;;;;;sEDhCKsT,6B,EAA6B;cALzC,uDAKyC;eAL/B;AACTnc,kBAAQ,EAAE,4BADD;AAETC,qBAAW,EAAE,yCAFJ;AAGTC,mBAAS,EAAE,CAAC,yCAAD;AAHF,S;AAK+B,Q;;;;;;;;gBAWAic,6B;AAA6B;kBAAlE,oDAAkE;mBAA3D,wE;AAA2D;;;;;;;;;;;;;;;;;;;;;;;;AEzBvE;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC+DsB;;AAEE;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAL;;AACF;;;;;;AADoC;;AAAA;;;;;;;;AAGpC;;AAEE;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAL;;AACF;;;;;;AADkC;;AAAA;;;;;;;;AAVpC;;AACA;;AACE;;AACA;;AAKA;;AAIF;;AAEA;;AACE;;AAGA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;AAAU;;AAAM;;AAChB;;AACA;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AACE;;AAGA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAED;;AAAU;;AAAM;;AACf;;AACF;;AAEA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAED;;AAAU;;AAAc;;AACjC;;AACM;;AACF;;;;;;;;AAhDI;;AAAA;;AACc;;AAAA;;AAKA;;AAAA;;AAgBd;;AAAA;;AAGA;;AAAA;;;;;;AA5BJ;;AACE;;AAmDF;;;;;;;;AAnDgB;;AAAA;;;;;;;;AA5ClC;;AAEE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAAI;;AAAwB;;AAC5B;;AACE;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAAU;;AAAG;;AAAW;;AAC1B;;AACF;;AAEA;;AACE;;AACE;;AAAgB;;AAAU;;AAC5B;;AACA;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAS;;AACb;;AAAI;;AAAG;;AACP;;AAAI;;AAAM;;AACV;;AAAI;;AAAM;;AACV;;AAAI;;AAAM;;AACV;;AAAI;;AAAQ;;AACd;;AACF;;AACA;;AACI;;AAsDJ;;AAEF;;AACF;;AACF;;AACF;;AACF;;AAEF;;AACF;;;;;;;;AApGU;;AAAA;;AAGA;;AAAA;;AAkCY;;AAAA;;;;QDnCTU,yB;AAgBX,yCACSzB,iBADT,EAEUtY,WAFV,EAGS7B,YAHT,EAIUkE,MAJV,EAKSiG,SALT,EAMSpK,sBANT,EAOUsE,KAPV,EAOgC;AAAA;;AANvB,aAAA8V,iBAAA,GAAAA,iBAAA;AACC,aAAAtY,WAAA,GAAAA,WAAA;AACD,aAAA7B,YAAA,GAAAA,YAAA;AACC,aAAAkE,MAAA,GAAAA,MAAA;AACD,aAAAiG,SAAA,GAAAA,SAAA;AACA,aAAApK,sBAAA,GAAAA,sBAAA;AACC,aAAAsE,KAAA,GAAAA,KAAA;AAnBV,aAAAiW,iBAAA,GAAwC,EAAxC;AACA,aAAAuB,oBAAA,GAA2C,EAA3C;AACA,aAAAxT,gBAAA,GAA6B,CAAC,UAAD,EAAa,SAAb,EAAwB,MAAxB,EAAgC,KAAhC,EAAuC,MAAvC,EAA+C,QAA/C,CAA7B;AACA,aAAApI,QAAA,GAAW,oCAAX;AAEA,aAAAgI,cAAA,GAAiB,KAAjB;AACA,aAAAmC,SAAA,GAAwB,EAAxB;AACA,aAAAC,kBAAA,GAA+B,CAAC,UAAD,EAAY,SAAZ,EAAsB,MAAtB,EAA8B,MAA9B,EAAsC,QAAtC,CAA/B;AAaK;;;;mCAEG;AAAA;;AACN,eAAK1F,WAAL,GAAoB5B,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAApB,CADM,CAEN;AACA;AACA;AAEA;;AACA,eAAKR,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,kBAAgB;AAAA,gBAAb2F,MAAa,UAAbA,MAAa;;AACpD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,sBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,wBAAI,CAAC3H,EAAL,GAAU4H,MAAM,CAACD,MAAjB;;AACA,wBAAI,CAACmY,oBAAL,CAA2BlY,MAAM,CAACD,MAAlC;AACD;AACF;AACF,WATD;AAYD;;;6CAEoB3H,E,EAAU;AAAA;;AAC7B,eAAKse,iBAAL,CAAuB2B,SAAvB,CAAiCjgB,EAAjC,EACGiC,SADH,CACa,UAAAwc,iBAAiB,EAAI;AAE9B,oBAAI,CAACA,iBAAL,GAAyBA,iBAAzB;;AACA,oBAAI,CAAC/O,YAAL;AACD,WALH;AAQD;;;oCAEW;AACV;AACA,cAAI,KAAK5F,aAAL,CAAmBrC,WAAvB,EAAoC;AAClC,gBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,KAAKhB,aAAvB,CAApB;;AACAe,eAAG,CAACnD,MAAJ,GAAa,KAAKoB,WAAL,CAAiB9I,EAA9B;AACA6K,eAAG,CAACjD,MAAJ,GAAa,WAAb,CAHkC,CAIlC;;AACA,iBAAKY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,oBAAM,EAAEiD;AAAV,aAArB,CAArB;AACD;AACF;;;gCAEO7K,E,EAAU;AAAA;;AAEhB,eAAKse,iBAAL,CAAuBuB,sBAAvB,CAA+C7f,EAA/C,EACSiC,SADT,CACqB,YAAK;AAEhB,oBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,2CAAvB;;AACA,oBAAI,CAACib,oBAAL,CAA0B,QAAI,CAAC9f,EAA/B;AACD,WALT;AAOD;;;wDAE4B;AAAA;;AAC3B,cAAMkgB,yBAAyB,GAAG,KAAK7X,MAAL,CAAYtB,IAAZ,CAAiB,+FAAjB,EAAgD;AAChF7E,gBAAI,EAAE;AAAEyF,oBAAM,EAAE,KAAK3H,EAAf;AACEuf,gCAAkB,EAAE;AADtB;AAD0E,WAAhD,CAAlC;AAKAW,mCAAyB,CAAC1U,WAA1B,GAAwCvJ,SAAxC,CAAmD,UAAAwJ,MAAM,EAAI;AAC3D,oBAAI,CAACqU,oBAAL,CAA0B,QAAI,CAAC9f,EAA/B,EAD2D,CAE3D;;;AACA,oBAAI,CAACgP,SAAL;AACD,WAJD;AAMD;;;yDAEgChP,E,EAAU;AAAA;;AACzC,cAAMkgB,yBAAyB,GAAG,KAAK7X,MAAL,CAAYtB,IAAZ,CAAiB,+FAAjB,EAAgD;AAChF7E,gBAAI,EAAE;AACEqd,gCAAkB,EAAEvf;AADtB;AAD0E,WAAhD,CAAlC;AAKAkgB,mCAAyB,CAAC1U,WAA1B,GAAwCvJ,SAAxC,CAAmD,UAAAwJ,MAAM,EAAI;AAC3D,oBAAI,CAACqU,oBAAL,CAA0B,QAAI,CAAC9f,EAA/B;;AACA,oBAAI,CAACgP,SAAL;AACD,WAHD;AAKD;AAED;;;;;;;;;;;;;;;uCAcY;AAAA;;AACV,eAAKV,SAAL,CAAeoB,YAAf,GAA8BzN,SAA9B,CAAwC,UAAAsM,SAAS,EAAI;AACnD,oBAAI,CAACA,SAAL,GAAiBA,SAAjB;AACD,WAFD;AAGD;;;8CACqBvO,E,EAAS;AAAA;;AAC7B,eAAKsO,SAAL,CAAe6G,eAAf,CAA+BnV,EAA/B,EAAmCiC,SAAnC,CAA6C,UAAAsM,SAAS,EAAI;AACxD,oBAAI,CAACA,SAAL,GAAiBA,SAAjB;AACD,WAFD;AAGD;;;iDACwBvO,E,EAAU;AAAA;;AACjC,cAAMoP,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEmN,wBAAU,EAAErP;AAAd;AADsD,WAApC,CAA1B;AAGAoP,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AACnD,oBAAI,CAACiE,YAAL;;AACA,oBAAI,CAACV,SAAL;AACD,WAHD;AAID;;;kDAEyBM,G,EAAW;AACnC,cAAMC,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAACC,KAAb,GAAqB,MAArB;AACAD,sBAAY,CAACrN,IAAb,GAAoB;AAACoN,eAAG,EAAEA;AAAN,WAApB;AACA,cAAMF,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,yFAAjB,EAAuCwI,YAAvC,CAA1B;AAED;;;uCAEeI,Q,EAAkB;AAAA;;AAChCA,kBAAQ,CAAC/H,MAAT,GAAkB,UAAlB;;AACA,eAAK0G,SAAL,CAAeyG,cAAf,CAA+BpF,QAA/B,EACS1N,SADT,CACqB,YAAK;AAChB,oBAAI,CAACyN,YAAL;;AACA,oBAAI,CAACvL,YAAL,CAAkBU,IAAlB,CAAuB,2CAAvB;AAED,WALT;AAOD;;;uCAEc7E,E,EAAU;AAAA;;AACvB,cAAMwZ,IAAI,GAAG,IAAIpQ,IAAJ,EAAb;AACA,cAAMuG,QAAQ,GAAa;AAAC3P,cAAE,EAAC,EAAJ;AAAOqG,gBAAI,EAAC,qBAAZ;AAAkC5B,gBAAI,EAAE,EAAxC;AAA4CkD,kBAAM,EAAE3H,EAApD;AAAuDsP,eAAG,EAAC,WAA3D;AAAwE1H,kBAAM,EAAC,QAA/E;AAAyFgI,sBAAU,EAAE4J;AAArG,WAA3B;;AACA,eAAKlL,SAAL,CAAeuB,cAAf,CAA8BF,QAA9B,EACG1N,SADH,CACc,UAAC8C,IAAD,EAAc;AAExB,oBAAI,CAAC2K,YAAL;;AACA,oBAAI,CAACvL,YAAL,CAAkBe,OAAlB,CAA0B,0CAA1B;AAED,WANH;AAOD;;;8CAEqBlF,E,EAAS;AAAA;;AAC7B,cAAMmgB,SAAS,GAAa;AAACngB,cAAE,EAAC,EAAJ;AAAQqG,gBAAI,EAAC,qBAAb;AAAmC5B,gBAAI,EAAE,EAAzC;AAA6CkD,kBAAM,EAAE3H,EAArD;AAAyDsP,eAAG,EAAC,WAA7D;AAA0E1H,kBAAM,EAAC,QAAjF;AAA2FgI,sBAAU,EAAE,IAAIxG,IAAJ;AAAvG,WAA5B;;AACA,eAAKkF,SAAL,CAAeuB,cAAf,CAA8BsQ,SAA9B,EACCle,SADD,CACY,UAAC8C,IAAD,EAAc;AAExBJ,mBAAO,CAACU,GAAR,CAAYN,IAAI,CAAC4K,QAAjB;;AACA,oBAAI,CAACG,UAAL,CAAgB/K,IAAI,CAAC4K,QAAL,CAAc3P,EAA9B;AAID,WARD;AASD;;;6CAEoB2P,Q,EAAkB;AAAA;;AACrCA,kBAAQ,CAAC/H,MAAT,GAAgB,UAAhB;AACA,eAAKD,MAAL,GAAYgI,QAAQ,CAAChI,MAArB;;AACA,eAAK2G,SAAL,CAAeyG,cAAf,CAA8BpF,QAA9B,EACG1N,SADH,CACa,UAAC8C,IAAD,EAAc;AACvBJ,mBAAO,CAACU,GAAR,CAAYN,IAAI,CAAC4K,QAAL,CAActJ,IAA1B;;AACA,oBAAI,CAAC+Z,qBAAL,CAA2B,QAAI,CAACzY,MAAhC;AAED,WALH;AAMD;;;oCAEWgI,Q,EAAkB;AAC5B,eAAK0Q,oBAAL,CAA0B1Q,QAA1B;AAED;;;mCAEU3P,E,EAAY;AAAA;;AACrB,eAAKqI,MAAL,CAAYtB,IAAZ,CAAiB,yHAAjB;AACA,eAAK7C,sBAAL,CAA4B6L,SAA5B,CAAuC,MAAvC,EAA+C/P,EAA/C;AACA,eAAKkE,sBAAL,CAA4Bc,iBAA5B,CACa/C,SADb,CACwB,UAAC8C,IAAD,EAAe;AACzB;AACA,oBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,0DAA1B;;AACA,oBAAI,CAAC8K,UAAL,CAAgBjL,IAAI,CAAC4K,QAAL,CAAcL,GAA9B;;AACA,oBAAI,CAACI,YAAL,GAJyB,CAKzB;;;AACA,oBAAI,CAACV,SAAL;AACD,WARb;AASD;;;mCAEUM,G,EAAK;AAEd,cAAIA,GAAG,IAAI,WAAX,EAAwB;AACtB,iBAAKlL,QAAL,GAAgB,oCAAhB;AACA;AACD;;AACD,cAAM6L,GAAG,GAAGX,GAAG,CAACY,KAAJ,CAAU,GAAV,CAAZ,CANc,CAOd;;AAEA,cAAID,GAAG,CAAC,CAAD,CAAH,KAAW,KAAf,EAAsB;AACpB,iBAAK7L,QAAL,GAAgB,+BAAhB;AACD;AAEF;;;;;;;uBApOU2b,yB,EAAyB,oL,EAAA,mI,EAAA,6I,EAAA,mI,EAAA,4J,EAAA,uL,EAAA,mH;AAAA,K;;;YAAzBA,yB;AAAyB,4C;AAAA,c;AAAA,a;AAAA,ic;AAAA;AAAA;ACvBtC;;AACE;;AACE;;AAIE;AAAA,mBAAS,IAAAO,6BAAA,EAAT;AAAwC,WAAxC;;AAEA;;AAAU;;AAAG;;AAAW;;AAC1B;;AACF;;AAGF;;AAEA;;;;AAVM;;AAAA;;AAUQ;;AAAA;;;;;;;;;sEDQDP,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACT7c,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExBtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoEY;;AAAsC;;AAAS;;;;;;;;AAC/C;;AAAuC;;AACrC;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAL;;AACF;;;;;;;;AAFuC;;AAAA;;AACE;;AAAA;;;;;;AAKzC;;AAAsC;;AAAG;;;;;;;;AACzC;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAIA;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAKA;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAc;;AAC1B;;AACF;;;;;;AAGF;;;;;;AACA;;;;QDjGGmd,0B;AAYX,0CACSC,cADT,EAEUxa,WAFV,EAGUoC,WAHV,EAIUpH,MAJV,EAKUqH,MALV,EAMSiG,SANT,EAOSnK,YAPT,EAQSD,sBART,EASUsE,KATV,EASgC;AAAA;;AARvB,aAAAgY,cAAA,GAAAA,cAAA;AACC,aAAAxa,WAAA,GAAAA,WAAA;AACA,aAAAoC,WAAA,GAAAA,WAAA;AACA,aAAApH,MAAA,GAAAA,MAAA;AACA,aAAAqH,MAAA,GAAAA,MAAA;AACD,aAAAiG,SAAA,GAAAA,SAAA;AACA,aAAAnK,YAAA,GAAAA,YAAA;AACA,aAAAD,sBAAA,GAAAA,sBAAA;AACC,aAAAsE,KAAA,GAAAA,KAAA;AAbV,aAAA+F,SAAA,GAAwB,EAAxB;AACA,aAAAC,kBAAA,GAA+B,CAAC,UAAD,EAAY,SAAZ,EAAsB,MAAtB,EAA8B,MAA9B,EAAsC,QAAtC,CAA/B;AACA,aAAApK,QAAA,GAAW,oCAAX;AAYK;;;;mCAEG;AAAA;;AACN,eAAK0E,WAAL,GAAoB5B,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAApB;AACA,eAAKyX,iBAAL,GAAyB,KAAKrY,WAAL,CAAiBvG,KAAjB,CAAuB;AAC1C9B,gBAAI,EAAC,CAAC,IAAD,EAAO,0DAAWwB,QAAlB,CADqC;AAE1CsU,uBAAW,EAAC,CAAC,IAAD,EAAO,0DAAWtU,QAAlB;AAF8B,WAAvB,CAAzB;AAKA,eAAKiH,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,kBAAgB;AAAA,gBAAb2F,MAAa,UAAbA,MAAa;;AACpD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,sBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,wBAAI,CAAC+Y,gBAAL,CAAuB9Y,MAAM,CAACD,MAA9B;AACD,eAFD,MAEO;AACL,wBAAI,CAAC+Y,gBAAL,CAAuB,KAAvB;AACD;AACF;AACF,WAVD;AAWD;;;yCAEgB1gB,E,EAAU;AAAA;;AAEzB,cAAGA,EAAE,KAAK,KAAV,EAAgB;AACd;AACD;;AACD,eAAKwgB,cAAL,CAAoBG,MAApB,CAA2B3gB,EAA3B,EACGiC,SADH,CACa,UAAA2e,aAAa,EAAI;AAC1B,gBAAKA,aAAL,EAAqB;AAAA,kBACZ7gB,IADY,GACS6gB,aADT,CACZ7gB,IADY;AAAA,kBACN8V,WADM,GACS+K,aADT,CACN/K,WADM;AAEnB,sBAAI,CAAC+K,aAAL,GAAqBA,aAArB;AACA,sBAAI,CAACrS,SAAL,GAAiBqS,aAAa,CAACrS,SAA/B;;AACA,sBAAI,CAACkS,iBAAL,CAAuB/V,QAAvB,CAAgC;AAAC3K,oBAAI,EAAJA,IAAD;AAAO8V,2BAAW,EAAXA;AAAP,eAAhC;AACD;AACF,WARH;AASD;;;oCAEW;AACV,cAAI,KAAK/L,aAAL,CAAmBrC,WAAvB,EAAoC;AAClC,gBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,KAAKhB,aAAvB,CAApB;;AACA,gBAAI,KAAKyE,SAAL,CAAeK,MAAf,GAAwB,CAA5B,EAA+B;AACzB/D,iBAAG,CAACnD,MAAJ,GAAa,KAAKoB,WAAL,CAAiB9I,EAA9B;AACA6K,iBAAG,CAACjD,MAAJ,GAAa,WAAb,CAFyB,CAGzB;;AACA,mBAAKY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,sBAAM,EAAEiD;AAAV,eAArB,CAArB;AACD,aALL,MAKU;AACFA,iBAAG,CAACjD,MAAJ,GAAa,WAAb;AACH;AACN;AACF;;;+BAEM;AAAA;;AAAA,cAEE7H,IAFF,GAEU,KAAK0gB,iBAAL,CAAuB9V,KAFjC,CAEE5K,IAFF;;AAIL,cAAK,KAAK6gB,aAAV,EAA0B;AACxB;AACA,gBAAM1e,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAKue,iBAAL,CAAuB9V,KADlB,CAAG,EACoB;AAC/B3K,gBAAE,EAAE,KAAK4gB,aAAL,CAAmB5gB;AADQ,aADpB,CAAb;;AAIA,iBAAKwgB,cAAL,CAAoBK,mBAApB,CAAyC3e,IAAzC,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,sBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,kEAA4DnF,IAA5D,CAA1B;;AACA,kBAAI,CAAC,QAAI,CAAC+J,aAAL,CAAmBrC,WAAxB,EAAqC;AACnC,wBAAI,CAACzG,MAAL,CAAYgK,aAAZ,CAA0B,iBAA1B;AACD,eAFD,MAEO;AACL,wBAAI,CAACgE,SAAL;AACD;AACF,aARH;AAUD,WAhBD,MAgBO;AACL;AAEA,iBAAKwR,cAAL,CAAoBM,mBAApB,CAAyC,KAAKL,iBAAL,CAAuB9V,KAAhE,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB,kBAAI,QAAI,CAAC+E,aAAL,CAAmBrC,WAAvB,EAAoC;AAClC,oBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,QAAI,CAAChB,aAAvB,CAApB;;AACAe,mBAAG,CAAClD,MAAJ,GAAa5C,IAAI,CAAC6b,aAAL,CAAmB5gB,EAAhC;AACA6K,mBAAG,CAACnD,MAAJ,GAAa,QAAI,CAACoB,WAAL,CAAiB9I,EAA9B;AACA6K,mBAAG,CAACjD,MAAJ,GAAa,WAAb,CAJkC,CAKlC;;AACA,wBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,wBAAM,EAAEiD;AAAV,iBAArB,CAArB;AACD;;AACD,sBAAI,CAAC6V,gBAAL,CAAsB3b,IAAI,CAAC6b,aAAL,CAAmB5gB,EAAzC;;AACA,sBAAI,CAACmE,YAAL,CAAkBe,OAAlB,CAA0B,6DAAqDnF,IAArD,CAA1B,EAVyB,CAYzB;;AACH,aAdH;AAeD;AAIF;;;gCAEOC,E,EAAU;AAAA;;AAChB,eAAKwgB,cAAL,CAAoBO,mBAApB,CAAyC/gB,EAAzC,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACue,cAAL,CAAoBQ,iBAApB;;AACA,oBAAI,CAAC7c,YAAL,CAAkBU,IAAlB,CAAuB,8CAAvB;AACD,WAJT;AAKD,S,CAED;;;;uCACY;AAAA;;AACV,eAAKyJ,SAAL,CAAeoB,YAAf,GACGzN,SADH,CACa,UAAAsM,SAAS;AAAA,mBAAI,QAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WADtB;AAED;;;gDACoB;AAAA;;AACnB,cAAMa,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEyF,oBAAM,EAAE,KAAKiZ,aAAL,CAAmB5gB,EAA7B;AACEqP,wBAAU,EAAE;AADd;AADsD,WAApC,CAA1B;AAKAD,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AAEnD,oBAAI,CAACiV,gBAAL,CAAsB,QAAI,CAACE,aAAL,CAAmB5gB,EAAzC,EAFmD,CAGnD;;AAED,WALD;AAMD;;;iDACwBA,E,EAAU;AAAA;;AACjC,cAAMoP,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEmN,wBAAU,EAAErP;AAAd;AADsD,WAApC,CAA1B;AAGAoP,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AACnD,oBAAI,CAACiV,gBAAL,CAAsB,QAAI,CAACE,aAAL,CAAmB5gB,EAAzC;;AACA2E,mBAAO,CAACU,GAAR,CAAY,qBAAZ,EAAmC,QAAI,CAACkJ,SAAxC;;AACA,oBAAI,CAACS,SAAL;AACD,WAJD;AAKD;;;kDAEyBM,G,EAAW;AACnC,cAAMC,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAACC,KAAb,GAAqB,MAArB;AACAD,sBAAY,CAACrN,IAAb,GAAoB;AAACoN,eAAG,EAAEA;AAAN,WAApB;AACA,cAAMF,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,yFAAjB,EAAuCwI,YAAvC,CAA1B;AAED;;;uCAEevP,E,EAAU;AAAA;;AAExB,eAAKsO,SAAL,CAAemB,cAAf,CAA+BzP,EAA/B,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,oBAAI,CAACvL,YAAL,CAAkBU,IAAlB,CAAuB,2CAAvB;;AACA,oBAAI,CAAC6b,gBAAL,CAAsB,QAAI,CAACE,aAAL,CAAmB5gB,EAAzC;;AAEA,oBAAI,CAACgP,SAAL;AACD,WAPT;AAQD;;;yCAEa;AAAA;;AACZ,cAAMW,QAAQ,GAAa;AAAC3P,cAAE,EAAC,EAAJ;AAAOqG,gBAAI,EAAC,cAAZ;AAA2B5B,gBAAI,EAAE,EAAjC;AAAqCkD,kBAAM,EAAC,KAAKiZ,aAAL,CAAmB5gB,EAA/D;AAAkEsP,eAAG,EAAC,WAAtE;AAAmF1H,kBAAM,EAAC,QAA1F;AAAoGgI,sBAAU,EAAC,IAAIxG,IAAJ;AAA/G,WAA3B;;AACA,eAAKkF,SAAL,CAAeuB,cAAf,CAA8BF,QAA9B,EACG1N,SADH,CACa,YAAK;AAEZ,oBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,oBAAI,CAACvL,YAAL,CAAkBe,OAAlB,CAA0B,0CAA1B;;AACA,oBAAI,CAACwb,gBAAL,CAAsB,QAAI,CAACE,aAAL,CAAmB5gB,EAAzC;AACD,WANL;AAQD;;;mCAEUA,E,EAAY;AAAA;;AACrB,eAAKqI,MAAL,CAAYtB,IAAZ,CAAiB,yHAAjB;AACA,eAAK7C,sBAAL,CAA4B6L,SAA5B,CAAuC,MAAvC,EAA+C/P,EAA/C;AAEA,eAAKkE,sBAAL,CAA4Bc,iBAA5B,CACa/C,SADb,CACwB,UAAC8C,IAAD,EAAe;AACzB;AAEA,oBAAI,CAACiL,UAAL,CAAgBjL,IAAI,CAAC4K,QAAL,CAAcL,GAA9B;;AACA,oBAAI,CAACoR,gBAAL,CAAsB,QAAI,CAACE,aAAL,CAAmB5gB,EAAzC,EAJyB,CAKzB;;;AACA,oBAAI,CAACgP,SAAL;AACD,WARb;AASD;;;mCAEUM,G,EAAK;AAEd,cAAIA,GAAG,IAAI,WAAX,EAAwB;AACtB,iBAAKlL,QAAL,GAAgB,oCAAhB;AACA;AACD;;AACD,cAAM6L,GAAG,GAAGX,GAAG,CAACY,KAAJ,CAAU,GAAV,CAAZ,CANc,CAOd;;AAEA,cAAID,GAAG,CAAC,CAAD,CAAH,KAAW,KAAf,EAAsB;AACpB,iBAAK7L,QAAL,GAAgB,+BAAhB;AACD;AAEF;;;;;;;uBAvNUmc,0B,EAA0B,2K,EAAA,mI,EAAA,2H,EAAA,wH,EAAA,mI,EAAA,4J,EAAA,6I,EAAA,uL,EAAA,mH;AAAA,K;;;YAA1BA,0B;AAA0B,8C;AAAA,e;AAAA,a;AAAA,+mC;AAAA;AAAA;ACzBvC;;AACE;;AAEE;;AACE;;AAAgB;;AAAY;;AAE5B;;AACE;;AAAsC;AAAA,mBAAU,IAAAxU,IAAA,EAAV;AAAgB,WAAhB;;AACpC;;AACA;;AACE;;AACA;;AACE;;AACF;;AACF;;AAGF;;AACA;;AAEE;;AACE;;AACA;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAOE;;AACF;;AACF;;AACA;;AACF;;AACF;;AAEF;;AAIA;;AACE;;AACE;;AAGE;AAAA,mBAAS,IAAA8D,cAAA,EAAT;AAAyB,WAAzB;;AAGA;;AAAU;;AAAG;;AAAW;;AAC1B;;AACF;;AAEA;;AACE;;AACE;;AAAgB;;AAAU;;AAC5B;;AACA;;AACA;;AACE;;AAEE;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AASF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AACF;;AACF;;AACF;;AAWF;;;;AAlIc;;AAAA;;AA2BF;;AAAA;;AAmBJ;;AAAA;;AAYiB;;AAAA;;AAwDI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDjGT0Q,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTrd,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzBvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBI;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAY;;;;;;AACnD;;AAAwC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAwC;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmD;;AAAU;;AAAM;;AAC9H;;AAAW;;;;;;AAKX;;AAAsC;;AAAQ;;;;;;;;AAC9C;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;QD/BW6d,sB;AAKX,sCACST,cADT,EAESrc,YAFT,EAGUnD,MAHV,EAIUwH,KAJV,EAIgC;AAAA;;AAHvB,aAAAgY,cAAA,GAAAA,cAAA;AACA,aAAArc,YAAA,GAAAA,YAAA;AACC,aAAAnD,MAAA,GAAAA,MAAA;AACA,aAAAwH,KAAA,GAAAA,KAAA;AAPV,aAAA0Y,cAAA,GAAkC,EAAlC;AACA,aAAA1U,gBAAA,GAA6B,CAAC,MAAD,EAAQ,aAAR,EAAsB,MAAtB,EAA6B,QAA7B,CAA7B;AAOK;;;;mCAEG;AACN,eAAKwU,iBAAL;AACD;;;4CAEgB;AAAA;;AACf,eAAKR,cAAL,CAAoBQ,iBAApB,GACG/e,SADH,CACa,UAAAif,cAAc;AAAA,mBAAI,QAAI,CAACA,cAAL,GAAsBA,cAA1B;AAAA,WAD3B;AAED;;;6BAEIlhB,E,EAAU;AACb,eAAKwI,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEpD,kBAAM,EAAE3H;AAAV,WAArB,CAArB;AACA,eAAKgB,MAAL,CAAYgK,aAAZ,CAA0B,qBAA1B;AACD;;;gCAEMhL,E,EAAU;AAAA;;AACf,eAAKwgB,cAAL,CAAoBO,mBAApB,CAAwC/gB,EAAxC,EACGiC,SADH,CACa,YAAK;AAEd,oBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,iDAAvB;;AACA,oBAAI,CAACmc,iBAAL;AACD,WALH;AAMD;;;;;;;uBAjCUC,sB,EAAsB,2K,EAAA,4I,EAAA,uH,EAAA,kH;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,wtB;AAAA;AAAA;ACdnC;;AACE;;AACA;;AAAK;;AAAkB;;AACvB;;AACE;;AAA2D;;AAAM;;AAEjE;;AAA0C;;AAAkB;;AAC9D;;AACF;;AAKA;;AAEA;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AAKF;;AAEA;;AACA;;AACF;;;;AA1C+B;;AAAA;;AAWd;;AAAA;;AA6BI;;AAAA;;AACP;;AAAA;;;;;;;;;sED/BDA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT/d,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkCU;;AACE;;AAAwC;;AAAY;;AACpD;;AAAc;;AAAgB;;AAC9B;;AAAe;;;;AAA0B;;AAC3C;;;;;;AAFgB;;AAAA;;AACC;;AAAA;;;;;;;;QDzBd+d,e;AAKX,+BACSC,OADT,EAC+B;AAAA;;AAAtB,aAAAA,OAAA,GAAAA,OAAA;AAJT,aAAAxZ,MAAA,GAAoB,EAApB;AAMK;;;;mCAEG;AACN,eAAKyL,SAAL;AACD;;;oCAEQ;AAAA;;AACP,eAAK+N,OAAL,CAAaC,UAAb,GAA0Bpf,SAA1B,CAAoC,UAAA2F,MAAM;AAAA,mBAAI,QAAI,CAACA,MAAL,GAAcA,MAAlB;AAAA,WAA1C;AACD;;;;;;;uBAhBUuZ,e,EAAe,qJ;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,sd;AAAA;AAAA;ACZ5B;;AACE;;AAEE;;AACE;;AAEE;;AAAgB;;AAAc;;AAEhC;;AAEA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACA;;AACJ;;AAKF;;AACA;;AACA;;AACE;;AAEE;;AAAgB;;AAAe;;AAEjC;;AAEA;;AACE;;AAEE;;AAOF;;AACF;;AACA;;AACE;;AAIF;;AACF;;AAOF;;AACA;;AAEE;;AACE;;AACE;;AACE;;AAEA;;AACE;;AAAwC;;AAAmB;;AAC3D;;AACF;;AAGF;;AAGF;;AACA;;AACE;;AACE;;AAAI;;AAAU;;AAClB;;AAEF;;AAMF;;AACF;;;;AApD0C;;AAAA;;AAUnB;;AAAA,kFAAc,UAAd,EAAc,CAAd,EAAc,iBAAd,EAAc,qEAAd;;;;;;;;;;sEDhCVA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTje,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkHY;;AAAsC;;AAAS;;;;;;;;AAC/C;;AAAuC;;AACrC;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAL;;AACF;;;;;;;;AAFuC;;AAAA;;AACE;;AAAA;;;;;;AAKzC;;AAAsC;;AAAG;;;;;;;;AACzC;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAIA;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAKA;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAc;;AAC1B;;AACF;;;;;;AAGF;;;;;;AACA;;;;QD9IGke,gC;AAaX,gDACSC,oBADT,EAEUvb,WAFV,EAGUoC,WAHV,EAIUpH,MAJV,EAKUqH,MALV,EAMSiG,SANT,EAOSnK,YAPT,EAQSD,sBART,EASUsE,KATV,EASgC;AAAA;;AARvB,aAAA+Y,oBAAA,GAAAA,oBAAA;AACC,aAAAvb,WAAA,GAAAA,WAAA;AACA,aAAAoC,WAAA,GAAAA,WAAA;AACA,aAAApH,MAAA,GAAAA,MAAA;AACA,aAAAqH,MAAA,GAAAA,MAAA;AACD,aAAAiG,SAAA,GAAAA,SAAA;AACA,aAAAnK,YAAA,GAAAA,YAAA;AACA,aAAAD,sBAAA,GAAAA,sBAAA;AACC,aAAAsE,KAAA,GAAAA,KAAA,CAAsB,CAbhC;;AACA,aAAA+F,SAAA,GAAwB,EAAxB;AACA,aAAAC,kBAAA,GAA+B,CAAC,UAAD,EAAa,SAAb,EAAwB,MAAxB,EAAgC,MAAhC,EAAwC,QAAxC,CAA/B;AACA,aAAApK,QAAA,GAAW,oCAAX;AAYO;;;;mCAEC;AAAA;;AAEN,eAAK0E,WAAL,GAAoB5B,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAApB;AACA,eAAKwY,uBAAL,GAA+B,KAAKpZ,WAAL,CAAiBvG,KAAjB,CAAuB;AAChD4f,cAAE,EAAE,CAAC,IAAD,EAAO,0DAAWlgB,QAAlB,CAD4C;AAEhDmgB,eAAG,EAAE,CAAC,IAAD,EAAO,0DAAWngB,QAAlB,CAF2C;AAGhDogB,iBAAK,EAAE,CAAC,IAAD,EAAO,0DAAWpgB,QAAlB,CAHyC;AAIhDqgB,kBAAM,EAAE,CAAC,IAAD,EAAO,0DAAWrgB,QAAlB,CAJwC;AAKhDiY,gBAAI,EAAE,CAAC,IAAD,EAAO,0DAAWjY,QAAlB;AAL0C,WAAvB,CAA/B;AAQA,eAAKiH,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,kBAAgB;AAAA,gBAAb2F,MAAa,UAAbA,MAAa;;AAChD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,sBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,wBAAI,CAACka,sBAAL,CAA6Bja,MAAM,CAACD,MAApC;AACD,eAFD,MAEO;AACL,wBAAI,CAACka,sBAAL,CAA6B,KAA7B;AACD;AACF;AACF,WAVL;AAYD;AAEF;;;;;;;;;+CAOwB7hB,E,EAAU;AAAA;;AAE/B,cAAIA,EAAE,KAAK,KAAX,EAAiB;AACf;AACD;;AACD,eAAKuhB,oBAAL,CAA0BO,MAA1B,CAAiC9hB,EAAjC,EACGiC,SADH,CACa,UAAA8f,mBAAmB,EAAI;AAChC;AACA;AACA;AACA,gBAAKA,mBAAL,EAA2B;AAAA,kBACpBN,EADoB,GACaM,mBADb,CACpBN,EADoB;AAAA,kBAChBC,GADgB,GACaK,mBADb,CAChBL,GADgB;AAAA,kBACXC,KADW,GACaI,mBADb,CACXJ,KADW;AAAA,kBACJC,MADI,GACaG,mBADb,CACJH,MADI;AAAA,kBACIpI,IADJ,GACauI,mBADb,CACIvI,IADJ;AAE3B,sBAAI,CAACuI,mBAAL,GAA2BA,mBAA3B;AACA,sBAAI,CAACxT,SAAL,GAAiBwT,mBAAmB,CAACxT,SAArC;;AACA,sBAAI,CAACiT,uBAAL,CAA6B9W,QAA7B,CAAsC;AAAC+W,kBAAE,EAAFA,EAAD;AAAKC,mBAAG,EAAHA,GAAL;AAAUC,qBAAK,EAALA,KAAV;AAAiBC,sBAAM,EAANA,MAAjB;AAAyBpI,oBAAI,EAAJA;AAAzB,eAAtC;AACC;AACF,WAXH;AAYD;;;oCAEW;AACV;AACD,cAAK,KAAK1P,aAAL,CAAmBrC,WAAxB,EAAsC;AACrC,gBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,KAAKhB,aAAvB,CAApB;;AACA,gBAAI,KAAKyE,SAAL,CAAeK,MAAf,GAAwB,CAA5B,EAA+B;AACxB/D,iBAAG,CAACnD,MAAJ,GAAa,KAAKoB,WAAL,CAAiB9I,EAA9B;AACA6K,iBAAG,CAACjD,MAAJ,GAAa,WAAb,CAFwB,CAGxB;;AACA,mBAAKY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,sBAAM,EAAEiD;AAAV,eAArB,CAArB;AACD,aALN,MAKW;AACHA,iBAAG,CAACjD,MAAJ,GAAa,WAAb;AACF;AACL;AACF;;;+BAEM;AAAA;;AAAA,cAEEga,MAFF,GAEY,KAAKJ,uBAAL,CAA6B7W,KAFzC,CAEEiX,MAFF;;AAIL,cAAK,KAAKG,mBAAV,EAAgC;AAC9B;AACA,gBAAM7f,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAKsf,uBAAL,CAA6B7W,KADxB,CAAG,EAC0B;AACrC3K,gBAAE,EAAE,KAAK+hB,mBAAL,CAAyB/hB;AADQ,aAD1B,CAAb;;AAIA,iBAAKuhB,oBAAL,CAA0BS,yBAA1B,CAAqD9f,IAArD,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,sBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,qEAA+D0c,MAA/D,CAA1B;;AACA,kBAAI,CAAC,QAAI,CAAC9X,aAAL,CAAmBrC,WAAxB,EAAqC;AACnC,wBAAI,CAACzG,MAAL,CAAYgK,aAAZ,CAA0B,uBAA1B;AACD,eAFD,MAEO;AACL,wBAAI,CAACgE,SAAL;AACD;AACF,aARH;AAUD,WAhBD,MAgBO;AACL;AAEA,iBAAKuS,oBAAL,CAA0BU,yBAA1B,CAAqD,KAAKT,uBAAL,CAA6B7W,KAAlF,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB;AACA,kBAAK,QAAI,CAAC+E,aAAL,CAAmBrC,WAAxB,EAAsC;AACpC,oBAAMoD,GAAG,GAAW,4DAAOC,SAAP,CAAkB,QAAI,CAAChB,aAAvB,CAApB;;AACAe,mBAAG,CAAClD,MAAJ,GAAa5C,IAAI,CAACgd,mBAAL,CAAyB/hB,EAAtC;AACA6K,mBAAG,CAACnD,MAAJ,GAAa,QAAI,CAACoB,WAAL,CAAiB9I,EAA9B;AACA6K,mBAAG,CAACjD,MAAJ,GAAa,WAAb,CAJoC,CAKpC;;AACA,wBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,wBAAM,EAAEiD;AAAV,iBAArB,CAArB;;AAEA,wBAAI,CAACgX,sBAAL,CAA4B9c,IAAI,CAACgd,mBAAL,CAAyB/hB,EAArD;;AACA,wBAAI,CAACmE,YAAL,CAAkBe,OAAlB,CAA0B,gEAAyD0c,MAAzD,CAA1B;AACC,eAZsB,CAazB;;AACH,aAfH;AAgBD;AAIF;;;gCAEO5hB,E,EAAU;AAAA;;AAEhB,eAAKuhB,oBAAL,CAA0BW,yBAA1B,CAAqDliB,EAArD,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACsf,oBAAL,CAA0BY,uBAA1B;;AACA,oBAAI,CAAChe,YAAL,CAAkBU,IAAlB,CAAuB,oDAAvB;AACD,WAJT;AAMD,S,CAED;;;;uCACY;AAAA;;AACV,eAAKyJ,SAAL,CAAeoB,YAAf,GACGzN,SADH,CACa,UAAAsM,SAAS;AAAA,mBAAI,QAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WADtB;AAED;;;gDACoB;AAAA;;AACnB,cAAMa,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEyF,oBAAM,EAAE,KAAKoa,mBAAL,CAAyB/hB,EAAnC;AACEqP,wBAAU,EAAE;AADd;AADsD,WAApC,CAA1B;AAKAD,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AACnD,oBAAI,CAACoW,sBAAL,CAA4B,QAAI,CAACE,mBAAL,CAAyB/hB,EAArD;AAED,WAHD;AAID;;;iDACwBA,E,EAAU;AAAA;;AACjC,cAAMoP,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEmN,wBAAU,EAAErP;AAAd;AADsD,WAApC,CAA1B;AAGAoP,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AACnD,oBAAI,CAACoW,sBAAL,CAA4B,QAAI,CAACE,mBAAL,CAAyB/hB,EAArD;;AACA,oBAAI,CAACgP,SAAL;AAED,WAJD;AAKD;;;kDAEyBM,G,EAAW;AACnC,cAAMC,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAACC,KAAb,GAAqB,MAArB;AACAD,sBAAY,CAACrN,IAAb,GAAoB;AAACoN,eAAG,EAAHA;AAAD,WAApB;AACA,cAAMF,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,yFAAjB,EAAuCwI,YAAvC,CAA1B;AAED;;;uCAEevP,E,EAAU;AAAA;;AAExB,eAAKsO,SAAL,CAAemB,cAAf,CAA+BzP,EAA/B,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,oBAAI,CAACvL,YAAL,CAAkBU,IAAlB,CAAuB,2CAAvB;;AACA,oBAAI,CAACgd,sBAAL,CAA4B,QAAI,CAACE,mBAAL,CAAyB/hB,EAArD;;AACA,oBAAI,CAACgP,SAAL;AAED,WAPT;AASD;;;yCAEa;AAAA;;AACZ,cAAMwK,IAAI,GAAG,IAAIpQ,IAAJ,EAAb;AACA,cAAMuG,QAAQ,GAAa;AAAC3P,cAAE,EAAC,EAAJ;AAAOqG,gBAAI,EAAC,oBAAZ;AAAiC5B,gBAAI,EAAE,EAAvC;AAA2CkD,kBAAM,EAAC,KAAKoa,mBAAL,CAAyB/hB,EAA3E;AAA8EsP,eAAG,EAAC,WAAlF;AAA8F1H,kBAAM,EAAC,QAArG;AAA8GgI,sBAAU,EAAE4J;AAA1H,WAA3B;;AACA,eAAKlL,SAAL,CAAeuB,cAAf,CAA8BF,QAA9B,EACG1N,SADH,CACa,YAAK;AAEd,oBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,oBAAI,CAACvL,YAAL,CAAkBe,OAAlB,CAA0B,0CAA1B;;AACA,oBAAI,CAAC2c,sBAAL,CAA4B,QAAI,CAACE,mBAAL,CAAyB/hB,EAArD;AACD,WANH;AAQD;AAED;;;;;;;mCAMWA,E,EAAY;AAAA;;AACrB,eAAKqI,MAAL,CAAYtB,IAAZ,CAAiB,yHAAjB;AACA,eAAK7C,sBAAL,CAA4B6L,SAA5B,CAAuC,MAAvC,EAA+C/P,EAA/C;AAEA,eAAKkE,sBAAL,CAA4Bc,iBAA5B,CACa/C,SADb,CACwB,UAAC8C,IAAD,EAAe;AACzB;AAEA,oBAAI,CAACiL,UAAL,CAAgBjL,IAAI,CAAC4K,QAAL,CAAcL,GAA9B;;AACA,oBAAI,CAACuS,sBAAL,CAA4B,QAAI,CAACE,mBAAL,CAAyB/hB,EAArD,EAJyB,CAKzB;;;AACA,oBAAI,CAACgP,SAAL;AACD,WARb;AASD;;;mCAEUM,G,EAAK;AAEd,cAAIA,GAAG,KAAK,WAAZ,EAAyB;AACvB,iBAAKlL,QAAL,GAAgB,oCAAhB;AACA;AACD;;AACD,cAAM6L,GAAG,GAAGX,GAAG,CAACY,KAAJ,CAAU,GAAV,CAAZ,CANc,CAOd;;AAEA,cAAID,GAAG,CAAC,CAAD,CAAH,KAAW,KAAf,EAAsB;AACpB,iBAAK7L,QAAL,GAAgB,+BAAhB;AACD;AAEF;;;;;;;uBAlPUkd,gC,EAAgC,6L,EAAA,mI,EAAA,2H,EAAA,wH,EAAA,mI,EAAA,4J,EAAA,6I,EAAA,uL,EAAA,mH;AAAA,K;;;YAAhCA,gC;AAAgC,oD;AAAA,e;AAAA,a;AAAA,m5C;AAAA;AAAA;AC1B7C;;AAEE;;AACE;;AACE;;AAAgB;;AAAkB;;AAElC;;AACE;;AAA4C;AAAA,mBAAU,IAAAvV,IAAA,EAAV;AAAgB,WAAhB;;AAC5C;;AACE;;AAGA;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAEE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAEE;;AACA;;AACE;;AACF;;AACF;;AAGF;;AAGA;;AAEE;;AAEE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAMA;;AAIA;;AACA;;AAAW;;AAA0B;;AACvC;;AAGF;;AACF;;AAEE;;AACE;;AAEE;;AAOA;;AACF;;AAEA;;AAEF;;AAGA;;AACF;;AACF;;AAEF;;AAEA;;AAEE;;AACE;;AAGE;AAAA,mBAAS,IAAA8D,cAAA,EAAT;AAAyB,WAAzB;;AAGA;;AAAU;;AAAG;;AAAW;;AAC1B;;AACF;;AAEA;;AACE;;AACE;;AAAgB;;AAAU;;AAC5B;;AACA;;AACA;;AACE;;AAEE;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AASF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AACF;;AACF;;AAGF;;AAKA;;;;;;AA5KY;;AAAA;;AA8CA;;AAAA;;AAKA;;AAAA;;AAkBF;;AAAA;;AAuBJ;;AAAA;;AAYiB;;AAAA;;AAwDI;;AAAA;;AACP;;AAAA;;;;;;;;;sED9ITyR,gC,EAAgC;cAL5C,uDAK4C;eALlC;AACTpe,kBAAQ,EAAE,+BADD;AAETC,qBAAW,EAAE,4CAFJ;AAGTC,mBAAS,EAAE,CAAC,4CAAD;AAHF,S;AAKkC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1B7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBI;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAM;;;;;;AAC7C;;AAAwC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAQ;;;;;;AAC/C;;AAAwC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAMxC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAwC;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmD;;AAAU;;AAAM;;AAC9H;;AAAW;;;;;;AAKX;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;QDtCWgf,4B;AAKX,4CACSb,oBADT,EAESpd,YAFT,EAGUnD,MAHV,EAIUwH,KAJV,EAIgC;AAAA;;AAHvB,aAAA+Y,oBAAA,GAAAA,oBAAA;AACA,aAAApd,YAAA,GAAAA,YAAA;AACC,aAAAnD,MAAA,GAAAA,MAAA;AACA,aAAAwH,KAAA,GAAAA,KAAA;AAPV,aAAA6Z,oBAAA,GAA8C,EAA9C;AACA,aAAA7V,gBAAA,GAA6B,CAAC,QAAD,EAAW,MAAX,EAAoB,IAApB,EAAyB,MAAzB,EAAiC,QAAjC,CAA7B;AAOK;;;;mCAEG;AACN,eAAK2V,uBAAL;AACD;;;kDAGsB;AAAA;;AACrB,eAAKZ,oBAAL,CAA0BY,uBAA1B,GACGlgB,SADH,CACa,UAAAogB,oBAAoB;AAAA,mBAAI,QAAI,CAACA,oBAAL,GAA4BA,oBAAhC;AAAA,WADjC;AAED;;;6BACIriB,E,EAAU;AACb,eAAKwI,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEpD,kBAAM,EAAE3H;AAAV,WAArB,CAArB;AACA,eAAKgB,MAAL,CAAYgK,aAAZ,CAA0B,2BAA1B;AACD;;;gCAEOhL,E,EAAU;AAAA;;AAEhB,eAAKuhB,oBAAL,CAA0BW,yBAA1B,CAAqDliB,EAArD,EACSiC,SADT,CACqB,YAAK;AAEhB,oBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,oDAAvB;;AACA,oBAAI,CAACsd,uBAAL;AACD,WALT;AAOD;;;;;;;uBAnCUC,4B,EAA4B,6L,EAAA,4I,EAAA,uH,EAAA,kH;AAAA,K;;;YAA5BA,4B;AAA4B,+C;AAAA,e;AAAA,a;AAAA,2uB;AAAA;AAAA;ACdzC;;AACE;;AACA;;AAAI;;AAAqB;;AACzB;;AACE;;AAA2D;;AAAM;;AAEjE;;AAA0C;;AAAqB;;AACjE;;AACF;;AAKA;;AAEA;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAIA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AAKF;;AAEA;;AACA;;AACF;;;;AAjD+B;;AAAA;;AAWd;;AAAA;;AAoCI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDtCDA,4B,EAA4B;cALxC,uDAKwC;eAL9B;AACTlf,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,uCAFJ;AAGTC,mBAAS,EAAE,CAAC,uCAAD;AAHF,S;AAK8B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACyIU;;AAAsC;;AAAS;;;;;;;;AAC/C;;AAAuC;;AACrC;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAL;;AACF;;;;;;;;AAFuC;;AAAA;;AACE;;AAAA;;;;;;AAKzC;;AAAsC;;AAAG;;;;;;;;AACzC;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAIA;;AAAsC;;AAAM;;;;;;AAC5C;;AAAuC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAKvC;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAKA;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAc;;AAC1B;;AACF;;;;;;AAGF;;;;;;AACA;;;;QDnKKkf,4B;AAeX,4CACSC,gBADT,EAEUvc,WAFV,EAGUoC,WAHV,EAIUpH,MAJV,EAKUqH,MALV,EAMSiG,SANT,EAOSnK,YAPT,EAQSD,sBART,EASUsE,KATV,EASgC;AAAA;;AARvB,aAAA+Z,gBAAA,GAAAA,gBAAA;AACC,aAAAvc,WAAA,GAAAA,WAAA;AACA,aAAAoC,WAAA,GAAAA,WAAA;AACA,aAAApH,MAAA,GAAAA,MAAA;AACA,aAAAqH,MAAA,GAAAA,MAAA;AACD,aAAAiG,SAAA,GAAAA,SAAA;AACA,aAAAnK,YAAA,GAAAA,YAAA;AACA,aAAAD,sBAAA,GAAAA,sBAAA;AACC,aAAAsE,KAAA,GAAAA,KAAA,CAAsB,CAbhC;;AACA,aAAA+F,SAAA,GAAwB,EAAxB;AACA,aAAAC,kBAAA,GAA+B,CAAC,UAAD,EAAa,SAAb,EAAwB,MAAxB,EAAgC,MAAhC,EAAwC,QAAxC,CAA/B;AACA,aAAApK,QAAA,GAAW,oCAAX;AAWO;;;;mCAEC;AAAA;;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAK0E,WAAL,GAAoB5B,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAApB;AACA,eAAKwZ,mBAAL,GAA2B,KAAKpa,WAAL,CAAiBvG,KAAjB,CAAuB;AAC5C4gB,sBAAU,EAAE,CAAC,IAAD,EAAO,0DAAWlhB,QAAlB,CADgC;AAE5CmhB,+BAAmB,EAAE,CAAC,IAAD,EAAO,0DAAWnhB,QAAlB,CAFuB;AAG5CohB,0BAAc,EAAE,CAAC,IAAD,EAAO,0DAAWphB,QAAlB,CAH4B;AAI5CqhB,2BAAe,EAAE,CAAC,IAAD,EAAO,0DAAWrhB,QAAlB,CAJ2B;AAK5CshB,8BAAkB,EAAE,CAAC,IAAD,EAAO,0DAAWthB,QAAlB,CALwB;AAM5CuhB,4BAAgB,EAAE,CAAC,IAAD,EAAO,0DAAWvhB,QAAlB,CAN0B;AAO5C2L,yBAAa,EAAE,CAAC,IAAD,EAAO,0DAAW3L,QAAlB,CAP6B;AAQ5CwhB,wBAAY,EAAE,CAAC,IAAD,EAAO,0DAAWxhB,QAAlB,CAR8B;AAS5C8b,iBAAK,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAW9b,QAAZ,CAAP;AATqC,WAAvB,CAA3B;AAYA,eAAKiH,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,kBAAgB;AAAA,gBAAb2F,MAAa,UAAbA,MAAa;;AAChD,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,sBAAI,CAACkC,aAAL,GAAqBlC,MAArB;;AACA,kBAAKA,MAAM,CAACD,MAAP,IAAiB,IAAtB,EAA4B;AAC1B,wBAAI,CAACqb,kBAAL,CAAyBpb,MAAM,CAACD,MAAhC;AACD,eAFD,MAEO;AACL,wBAAI,CAACqb,kBAAL,CAAyB,KAAzB;AACD;AACF;AACF,WAVL;AAaD;;;oCAEW;AACVre,iBAAO,CAACU,GAAR,CAAY,qBAAZ,EAAmC,KAAKkJ,SAAxC;;AACA,cAAM1D,GAAG,GAAW,4DAAOC,SAAP,CAAkB,KAAKhB,aAAvB,CAApB;;AACA,cAAI,KAAKyE,SAAL,CAAeK,MAAf,GAAwB,CAA5B,EAA+B;AACxB/D,eAAG,CAACnD,MAAJ,GAAa,KAAKoB,WAAL,CAAiB9I,EAA9B;AACA6K,eAAG,CAACjD,MAAJ,GAAa,WAAb,CAFwB,CAGxB;;AACA,iBAAKY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,oBAAM,EAAEiD;AAAV,aAArB,CAArB;AACD,WALN,MAKW;AACHA,eAAG,CAACjD,MAAJ,GAAa,WAAb;AACF;AACP;;;2CAEkB5H,E,EAAU;AAAA;;AAE3B,cAAIA,EAAE,KAAK,KAAX,EAAiB;AACf;AACD;;AACD,eAAKuiB,gBAAL,CAAsBU,KAAtB,CAA4BjjB,EAA5B,EACGiC,SADH,CACa,UAAAihB,eAAe,EAAI;AAC5B;AACA;AACA;AACA,gBAAIA,eAAJ,EAAqB;AAAA,kBACZT,UADY,GACmIS,eADnI,CACZT,UADY;AAAA,kBACAC,mBADA,GACmIQ,eADnI,CACAR,mBADA;AAAA,kBACqBC,cADrB,GACmIO,eADnI,CACqBP,cADrB;AAAA,kBACqCC,eADrC,GACmIM,eADnI,CACqCN,eADrC;AAAA,kBACsDC,kBADtD,GACmIK,eADnI,CACsDL,kBADtD;AAAA,kBAC0EC,gBAD1E,GACmII,eADnI,CAC0EJ,gBAD1E;AAAA,kBAC4F5V,aAD5F,GACmIgW,eADnI,CAC4FhW,aAD5F;AAAA,kBAC2G6V,YAD3G,GACmIG,eADnI,CAC2GH,YAD3G;AAAA,kBACyH1F,KADzH,GACmI6F,eADnI,CACyH7F,KADzH;AAEnB,sBAAI,CAAC6F,eAAL,GAAuBA,eAAvB;AACA,sBAAI,CAAC3U,SAAL,GAAiB2U,eAAe,CAAC3U,SAAjC;;AACA,sBAAI,CAACiU,mBAAL,CAAyB9X,QAAzB,CAAkC;AAAC+X,0BAAU,EAAVA,UAAD;AAAaC,mCAAmB,EAAnBA,mBAAb;AAAkCC,8BAAc,EAAdA,cAAlC;AAAkDC,+BAAe,EAAfA,eAAlD;AAAmEC,kCAAkB,EAAlBA,kBAAnE;AAAuFC,gCAAgB,EAAhBA,gBAAvF;AAAyG5V,6BAAa,EAAbA,aAAzG;AAAwH6V,4BAAY,EAAZA,YAAxH;AAAsI1F,qBAAK,EAALA;AAAtI,eAAlC;AACD;AAEF,WAZH;AAaD;;;+BAEM;AAAA;;AAAA,cAEEoF,UAFF,GAEgB,KAAKD,mBAAL,CAAyB7X,KAFzC,CAEE8X,UAFF;;AAIL,cAAK,KAAKS,eAAV,EAA4B;AAC1B;AACA,gBAAMhhB,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAKsgB,mBAAL,CAAyB7X,KADpB,CAAG,EACsB;AACjC3K,gBAAE,EAAE,KAAKkjB,eAAL,CAAqBljB;AADQ,aADtB,CAAb;;AAIA,iBAAKuiB,gBAAL,CAAsBY,qBAAtB,CAA6CjhB,IAA7C,EACGD,SADH,CACc,UAAA8C,IAAI,EAAI;AAClB,sBAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,yEAAmEud,UAAnE,CAA1B;;AACA,kBAAI,CAAC,QAAI,CAAC3Y,aAAL,CAAmBrC,WAAxB,EAAqC;AACnC,wBAAI,CAACzG,MAAL,CAAYgK,aAAZ,CAA0B,mBAA1B;AACD,eAFD,MAEO;AACL,wBAAI,CAACgE,SAAL;AACD;AACF,aARH;AAUD,WAhBD,MAgBO;AACL;AAEA,iBAAKuT,gBAAL,CAAsBa,qBAAtB,CAA6C,KAAKZ,mBAAL,CAAyB7X,KAAtE,EACK1I,SADL,CACgB,UAAC8C,IAAD,EAAe;AACzB;AACA,kBAAM8F,GAAG,GAAW,4DAAOC,SAAP,CAAkB,QAAI,CAAChB,aAAvB,CAApB;;AACAe,iBAAG,CAAClD,MAAJ,GAAa5C,IAAI,CAACme,eAAL,CAAqBljB,EAAlC;AACA6K,iBAAG,CAACnD,MAAJ,GAAa,QAAI,CAACoB,WAAL,CAAiB9I,EAA9B;AACA6K,iBAAG,CAACjD,MAAJ,GAAa,WAAb,CALyB,CAMzB;;AACA,sBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,sBAAM,EAAEiD;AAAV,eAArB,CAArB;;AAEA,sBAAI,CAACmY,kBAAL,CAAwBje,IAAI,CAACme,eAAL,CAAqBljB,EAA7C;;AACA,sBAAI,CAACmE,YAAL,CAAkBe,OAAlB,CAA0B,oEAA6Dud,UAA7D,CAA1B,EAVyB,CAYzB;;AACH,aAdH;AAeD;AAIF;;;gCAEOziB,E,EAAU;AAAA;;AAEhB,eAAKuiB,gBAAL,CAAsBc,qBAAtB,CAA6CrjB,EAA7C,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACsgB,gBAAL,CAAsBe,mBAAtB;;AACA,oBAAI,CAACnf,YAAL,CAAkBU,IAAlB,CAAuB,wDAAvB;AACD,WAJT;AAMD,S,CAED;;;;uCACY;AAAA;;AACV,eAAKyJ,SAAL,CAAeoB,YAAf,GACGzN,SADH,CACa,UAAAsM,SAAS;AAAA,mBAAI,QAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WADtB;AAED;;;gDACoB;AAAA;;AACnB,cAAMa,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEyF,oBAAM,EAAE,KAAKub,eAAL,CAAqBljB,EAA/B;AACEqP,wBAAU,EAAE;AADd;AADsD,WAApC,CAA1B;AAKAD,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AACnD,oBAAI,CAACuX,kBAAL,CAAwB,QAAI,CAACE,eAAL,CAAqBljB,EAA7C;AAED,WAHD;AAID;;;iDACwBA,E,EAAU;AAAA;;AACjC,cAAMoP,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,8EAAjB,EAAoC;AAC5D7E,gBAAI,EAAE;AAAEmN,wBAAU,EAAErP;AAAd;AADsD,WAApC,CAA1B;AAGAoP,2BAAiB,CAAC5D,WAAlB,GAAgCvJ,SAAhC,CAA2C,UAAAwJ,MAAM,EAAI;AACnD,oBAAI,CAACuX,kBAAL,CAAwB,QAAI,CAACE,eAAL,CAAqBljB,EAA7C;;AAEA,oBAAI,CAACgP,SAAL;AAED,WALD;AAMD;;;kDAEyBM,G,EAAW;AACnC,cAAMC,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAACC,KAAb,GAAqB,MAArB;AACAD,sBAAY,CAACrN,IAAb,GAAoB;AAACoN,eAAG,EAAEA;AAAN,WAApB;AACA,cAAMF,iBAAiB,GAAG,KAAK/G,MAAL,CAAYtB,IAAZ,CAAiB,yFAAjB,EAAuCwI,YAAvC,CAA1B;AAED;;;uCAEevP,E,EAAU;AAAA;;AAExB,eAAKsO,SAAL,CAAemB,cAAf,CAA+BzP,EAA/B,EACSiC,SADT,CACqB,YAAK;AAChB,oBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,oBAAI,CAACvL,YAAL,CAAkBU,IAAlB,CAAuB,2CAAvB;;AACA,oBAAI,CAACme,kBAAL,CAAwB,QAAI,CAACE,eAAL,CAAqBljB,EAA7C;;AAEA,oBAAI,CAACgP,SAAL;AACD,WAPT;AASD;;;yCAEa;AAAA;;AACZ,cAAMwK,IAAI,GAAG,IAAIpQ,IAAJ,EAAb;AACA,cAAMuG,QAAQ,GAAa;AAAC3P,cAAE,EAAC,EAAJ;AAAOqG,gBAAI,EAAC,wBAAZ;AAAqC5B,gBAAI,EAAE,EAA3C;AAA+CkD,kBAAM,EAAC,KAAKub,eAAL,CAAqBljB,EAA3E;AAA8EsP,eAAG,EAAC,WAAlF;AAA8F1H,kBAAM,EAAC,QAArG;AAA8GgI,sBAAU,EAAE4J;AAA1H,WAA3B;;AACA,eAAKlL,SAAL,CAAeuB,cAAf,CAA8BF,QAA9B,EACG1N,SADH,CACa,YAAK;AAEd,oBAAI,CAACqM,SAAL,CAAeoB,YAAf;;AACA,oBAAI,CAACvL,YAAL,CAAkBe,OAAlB,CAA0B,0CAA1B;;AACA,oBAAI,CAAC8d,kBAAL,CAAwB,QAAI,CAACE,eAAL,CAAqBljB,EAA7C;AACD,WANH;AAQD,S,CAED;AACA;AACA;AACA;;;;mCAGWA,E,EAAY;AAAA;;AACrB,eAAKqI,MAAL,CAAYtB,IAAZ,CAAiB,yHAAjB;AACA,eAAK7C,sBAAL,CAA4B6L,SAA5B,CAAuC,MAAvC,EAA+C/P,EAA/C;AAEA,eAAKkE,sBAAL,CAA4Bc,iBAA5B,CACa/C,SADb,CACwB,UAAC8C,IAAD,EAAe;AACzB;AAEA,oBAAI,CAACiL,UAAL,CAAgBjL,IAAI,CAAC4K,QAAL,CAAcL,GAA9B;;AACA,oBAAI,CAAC0T,kBAAL,CAAwB,QAAI,CAACE,eAAL,CAAqBljB,EAA7C;;AACA,oBAAI,CAACgP,SAAL;AACD,WAPb;AAQD;;;mCAEUM,G,EAAK;AAEd,cAAIA,GAAG,KAAK,WAAZ,EAAyB;AACvB,iBAAKlL,QAAL,GAAgB,oCAAhB;AACA;AACD;;AACD,cAAM6L,GAAG,GAAGX,GAAG,CAACY,KAAJ,CAAU,GAAV,CAAZ,CANc,CAOd;;AAEA,cAAID,GAAG,CAAC,CAAD,CAAH,KAAW,KAAf,EAAsB;AACpB,iBAAK7L,QAAL,GAAgB,+BAAhB;AACD;AAEF;;;;;;;uBAtPUke,4B,EAA4B,iL,EAAA,mI,EAAA,2H,EAAA,wH,EAAA,mI,EAAA,4J,EAAA,6I,EAAA,uL,EAAA,mH;AAAA,K;;;YAA5BA,4B;AAA4B,gD;AAAA,e;AAAA,a;AAAA,m0D;AAAA;AAAA;AC5BzC;;AAEA;;AACE;;AACE;;AAAgB;;AAAyB;;AAEzC;;AACE;;AAAwC;AAAA,mBAAU,IAAAvW,IAAA,EAAV;AAAgB,WAAhB;;AACxC;;AACE;;AAGA;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAEE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAEE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAEE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAEE;;AACA;;AACE;;AACF;;AACF;;AAEF;;AAGA;;AAEE;;AAEE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAEE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAEE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAEE;;AACA;;AACE;;AACF;;AACF;;AAEF;;AACF;;AAEE;;AACE;;AAEE;;AAOA;;AACF;;AAEA;;AAEF;;AAGA;;AACF;;AACF;;AAEF;;AAEA;;AAEE;;AACE;;AAGE;AAAA,mBAAS,IAAA8D,cAAA,EAAT;AAAyB,WAAzB;;AAGA;;AAAU;;AAAG;;AAAW;;AAC1B;;AACF;;AAEA;;AACE;;AACE;;AAAgB;;AAAU;;AAC5B;;AACA;;AACA;;AACE;;AAEE;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AASF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AASF;;AAGA;;AACE;;AACA;;AAUF;;AAEA;;AACA;;AACF;;AACF;;AACF;;AAGF;;AAKA;;;;AAnMY;;AAAA;;AA4FF;;AAAA;;AAuBJ;;AAAA;;AAYiB;;AAAA;;AAwDI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDnKPyS,4B,EAA4B;cALxC,uDAKwC;eAL9B;AACTpf,kBAAQ,EAAE,2BADD;AAETC,qBAAW,EAAE,wCAFJ;AAGTC,mBAAS,EAAE,CAAC,wCAAD;AAHF,S;AAK8B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5BzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBI;;AAAuC;;AAAW;;;;;;AAClD;;AAAwC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAoB;;;;;;AAC3D;;AAAwC;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AAIxC;;AAAuC;;AAAe;;;;;;AACtD;;AAAwC;;AAA2B;;;;;;AAA3B;;AAAA;;;;;;AAIxC;;AAAuC;;AAAgB;;;;;;AACvD;;AAAwC;;AAA4B;;;;;;AAA5B;;AAAA;;;;;;AAKxC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAwC;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmD;;AAAU;;AAAM;;AAC9H;;AAAW;;;;;;AAKX;;AAAsC;;AAAM;;;;;;;;AAC5C;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAAU;;AAAc;;AACxB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;QD1CWmgB,wB;AAIX,wCACShB,gBADT,EAESpe,YAFT,EAGUnD,MAHV,EAIUwH,KAJV,EAIgC;AAAA;;AAHvB,aAAA+Z,gBAAA,GAAAA,gBAAA;AACA,aAAApe,YAAA,GAAAA,YAAA;AACC,aAAAnD,MAAA,GAAAA,MAAA;AACA,aAAAwH,KAAA,GAAAA,KAAA;AANV,aAAAgb,gBAAA,GAAsC,EAAtC;AACA,aAAAhX,gBAAA,GAA6B,CAAC,YAAD,EAAe,qBAAf,EAAsC,gBAAtC,EAAwD,iBAAxD,EAA0E,MAA1E,EAAkF,QAAlF,CAA7B;AAMK;;;;mCAEG;AACN,eAAK8W,mBAAL;AACD;;;8CAGkB;AAAA;;AACjB,eAAKf,gBAAL,CAAsBe,mBAAtB,GACGrhB,SADH,CACa,UAAAuhB,gBAAgB;AAAA,mBAAI,QAAI,CAACA,gBAAL,GAAwBA,gBAA5B;AAAA,WAD7B;AAED;;;6BAEIxjB,E,EAAU;AACb,eAAKwI,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEpD,kBAAM,EAAE3H;AAAV,WAArB,CAArB;AACA,eAAKgB,MAAL,CAAYgK,aAAZ,CAA0B,uBAA1B;AACD;;;gCAEOhL,E,EAAU;AAAA;;AAEhB,eAAKuiB,gBAAL,CAAsBc,qBAAtB,CAA6CrjB,EAA7C,EACSiC,SADT,CACqB,YAAK;AAEhB,oBAAI,CAACkC,YAAL,CAAkBU,IAAlB,CAAuB,wDAAvB;;AACA,oBAAI,CAACye,mBAAL;AACD,WALT;AAOD;;;;;;;uBAnCUC,wB,EAAwB,iL,EAAA,4I,EAAA,uH,EAAA,kH;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,e;AAAA,a;AAAA,+yB;AAAA;AAAA;ACdrC;;AACE;;AACA;;AAAI;;AAAyB;;AAC7B;;AACE;;AAA2D;;AAAM;;AAEjE;;AAA0C;;AAAyB;;AACrE;;AACF;;AAKA;;AAEA;;AAGE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAEF;;AAGA;;AACE;;AACA;;AAKF;;AAEA;;AACA;;AACF;;;;AArD+B;;AAAA;;AAWd;;AAAA;;AAwCI;;AAAA;;AACP;;AAAA;;;;;;;;;sED1CDA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTrgB,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC4Bc;;AAA0E;;AAA0B;;;;;;AACpG;;AAA2E;;AAAwC;;;;;;AAcjH;;AACI;;AAAkC;;AAAiB;;AACrD;;;;;;AADc;;AAAA,4FAAAuH,KAAA;;AAAsB;;AAAA;;;;;;AASpC;;AACE;;AAAoC;;AAAiB;;AACvD;;;;;;AADc;;AAAA;;AAAwB;;AAAA;;;;QDzC3C8Y,kB;AASX,kCACmB9L,WADnB,EAEmBxT,YAFnB,EAGmByI,SAHnB,EAImB+J,SAJnB,EAI6C;AAAA;;AAH1B,aAAAgB,WAAA,GAAAA,WAAA;AACA,aAAAxT,YAAA,GAAAA,YAAA;AACA,aAAAyI,SAAA,GAAAA,SAAA;AACA,aAAA+J,SAAA,GAAAA,SAAA;AAXZ,aAAAC,SAAA,GAAwB,EAAxB;AAEA,aAAA8M,KAAA,GAAQ,CACb;AAAC/Y,eAAK,EAAE,YAAR;AAAsBgZ,mBAAS,EAAE;AAAjC,SADa,EAEb;AAAChZ,eAAK,EAAE,WAAR;AAAqBgZ,mBAAS,EAAE;AAAhC,SAFa,CAAR;AAYO;;;;mCAEN;AACN,eAAKpM,YAAL;AACD;;;mCAEU;AAAA;;AAET,cAAI,KAAKI,WAAL,CAAiBvV,IAAjB,CAAsBQ,KAA1B,EAAiC;AAC/B,gBAAI,CAAC,KAAK+U,WAAL,CAAiBvV,IAAjB,CAAsBM,GAAtB,CAA0B,IAA1B,EAAgCiI,KAArC,EAA4C;AAC1C,mBAAKgN,WAAL,CAAiBiM,QAAjB,CAA0B,KAAKjM,WAAL,CAAiBvV,IAAjB,CAAsBuI,KAAhD,EAAuD1I,SAAvD,CAAkE,UAAA8C,IAAI;AAAA,uBAAK,QAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,0CAA1B,CAAL;AAAA,eAAtE;AACA,aAFF,MAGK;AACL,mBAAKyS,WAAL,CAAiBkM,UAAjB,CAA4B,KAAKlM,WAAL,CAAiBvV,IAAjB,CAAsBuI,KAAlD,EAAyD1I,SAAzD,CAAoE,UAAA8C,IAAI;AAAA,uBAAI,QAAI,CAACZ,YAAL,CAAkBe,OAAlB,CAA0B,wCAA1B,CAAJ;AAAA,eAAxE;AACC;;AACD,iBAAKyS,WAAL,CAAiBvV,IAAjB,CAAsB6H,KAAtB;AACA,iBAAK0N,WAAL,CAAiB/J,mBAAjB;AAEA,iBAAKiL,OAAL;AACD;AACF;;;kCAES;AACR,eAAKlB,WAAL,CAAiBvV,IAAjB,CAAsB6H,KAAtB;AACA,eAAK0N,WAAL,CAAiB/J,mBAAjB;AACA,eAAKzJ,YAAL,CAAkBe,OAAlB,CAA0B,4BAA1B;AACD;;;kCAEM;AACL,eAAKyS,WAAL,CAAiBvV,IAAjB,CAAsB6H,KAAtB;AACA,eAAK0N,WAAL,CAAiB/J,mBAAjB;AACA,eAAKhB,SAAL,CAAeU,KAAf;AACD;;;uCAEW;AAAA;;AACV,eAAKqJ,SAAL,CAAeY,YAAf,GAA8BtV,SAA9B,CAAwC,UAAA2U,SAAS;AAAA,mBAAI,QAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WAAjD;AACD;;;;;;;uBApDU6M,kB,EAAkB,mI,EAAA,qI,EAAA,sI,EAAA,2J;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,a;AAAA,k3B;AAAA;AAAA;ACb/B;;AACI;;AACI;;AAAmC;;AAAc;;AACjD;;AAAoD;AAAA,mBAAS,IAAA5K,OAAA,EAAT;AAAkB,WAAlB;;AAAkC;;AAAU;;AAAK;;AAAW;;AACpH;;AAEF;;AACA;;AAA0D;AAAA,mBAAU,IAAA3K,QAAA,EAAV;AAAoB,WAApB;;AACxD;;AACI;;AACE;;AACE;;AACA;;AACE;;AACA;;AAAW;;AAA0B;;AACvC;;AAEA;;AACI;;AACA;;AAAW;;AAA0B;;AACvC;;AAEF;;AACE;;AACA;;AAAW;;AAAwB;;AACrC;;AACA;;AACE;;AACA;;AACA;;AACF;;AAIF;;AACF;;AAEA;;AACE;;AAEE;;AACE;;AACE;;AAAY;;AAAI;;AAChB;;AAIF;;AACF;;AAEA;;AACI;;AACE;;AAAY;;AAAI;;AAChB;;AAGF;;AACF;;AAGF;;AACE;;AAA8F;;AAAO;;AACrG;;AAAwC;;AAAO;;AACjD;;AACF;;AACF;;AACF;;AACJ;;;;AA5DM;;AAAA;;AAqBiB;;AAAA;;AACA;;AAAA;;AAcK;;AAAA;;AAUE;;AAAA;;AAQsC;;AAAA;;;;;;;;;sEDhDzDuV,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTvgB,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACcM;;AAAkF;AAAA;;AAAA;;AAAA;AAAA;;AAChF;;AAAU;;AAAK;;AACjB;;;;;;AAQA;;AAAuC;;AAAQ;;;;;;AAC/C;;AAAoC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAKpC;;AAAuC;;AAAU;;;;;;AACjD;;AAAoC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKpC;;AAAuC;;AAAM;;;;;;AAC7C;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAKpC;;AAAuC;;AAAK;;;;;;AAC5C;;AAAoC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAUpC;;AAAuC;;AAAS;;;;;;;;AAChD;;AAEE;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAU;;AAAM;;AAAW;;AAC3E;;AAAqC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAU;;AAAc;;AAAW;;AAEnG;;;;;;AAKF;;;;;;AACA;;;;;;;;QDhDS0gB,c;AAYX,8BACmBzb,MADnB,EAEmBlE,YAFnB,EAGoBwT,WAHpB,EAG4C;AAAA;;AAFzB,aAAAtP,MAAA,GAAAA,MAAA;AACA,aAAAlE,YAAA,GAAAA,YAAA;AACC,aAAAwT,WAAA,GAAAA,WAAA;AAZpB,aAAAnL,gBAAA,GAA6B,CAAC,MAAD,EAAS,UAAT,EAAqB,OAArB,EAA8B,MAA9B,EAAsC,SAAtC,CAA7B,CAY4C,CAX5C;;AACA,aAAAuX,KAAA,GAAiB,EAAjB;AAEA,aAAAC,QAAA,GAAW,IAAX;AASM;;;;mCAEE;AAEN,eAAKC,QAAL;AAED;;;mCAEU;AAAA;;AACT,eAAKtM,WAAL,CAAiBsM,QAAjB,GACChiB,SADD,CAEE,UAAA0E,GAAG,EAAI;AACL,oBAAI,CAACod,KAAL,GAAapd,GAAb,CADK,CAEL;AACD,WALH,EAME,UAAAvB,GAAG;AAAA,mBAAIT,OAAO,CAACC,KAAR,CAAcQ,GAAd,CAAJ;AAAA,WANL;AAQD;;;iCAEQ8T,G,EAAG;AAAA;;AACV,eAAK8K,QAAL,GAAgB,KAAhB,CADU,CAEV;;AACA,eAAKrM,WAAL,CAAiBuM,YAAjB,CAA8BhL,GAA9B;AACA,cAAM3J,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAAC6J,YAAb,GAA4B,IAA5B;AACA7J,sBAAY,CAAC8J,SAAb,GAAyB,IAAzB;AACA9J,sBAAY,CAACC,KAAb,GAAqB,KAArB;AACA,cAAM5C,SAAS,GAAG,KAAKvE,MAAL,CAAYtB,IAAZ,CAAiB,mFAAjB,EAAqCwI,YAArC,CAAlB;AAEA3C,mBAAS,CAACpB,WAAV,GAAwBvJ,SAAxB,CAAkC,UAAAwJ,MAAM,EAAI;AAC1C,oBAAI,CAACwY,QAAL;AACD,WAFD;AAGD;;;qCAEY;AAAA;;AACX,eAAKD,QAAL,GAAgB,IAAhB;AACA,eAAKrM,WAAL,CAAiB/J,mBAAjB;AACA,cAAM2B,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAAC6J,YAAb,GAA4B,IAA5B;AACA7J,sBAAY,CAAC8J,SAAb,GAAyB,IAAzB;AACA9J,sBAAY,CAACC,KAAb,GAAqB,KAArB;AACA,cAAM2U,MAAM,GAAG,KAAK9b,MAAL,CAAYtB,IAAZ,CAAiB,mFAAjB,EAAqCwI,YAArC,CAAf;AACA4U,gBAAM,CAAC3Y,WAAP,GAAqBvJ,SAArB,CAA+B,UAAAwJ,MAAM,EAAI;AACvC,oBAAI,CAACwY,QAAL;AACD,WAFD;AAGD;;;sCACU,CAAI;;;wCACF,CAAI;;;gCAEVjkB,E,EAAE;AAAA;;AACP,cAAIokB,OAAO,CAAC,8CAAD,CAAX,EAA4D;AAC1D,iBAAKzM,WAAL,CAAiB0M,UAAjB,CAA4BrkB,EAA5B,EAAgCiC,SAAhC,CAA2C,UAAA8C,IAAI,EAAI;AACjDJ,qBAAO,CAACU,GAAR,CAAY,qCAAZ;;AACA,sBAAI,CAAC4e,QAAL;AACD,aAHD;AAIA,iBAAK9f,YAAL,CAAkBU,IAAlB,CAAuB,wCAAvB;AACC;AACJ;;;;;;;uBAzEUif,c,EAAc,mI,EAAA,qI,EAAA,mI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;oEASd,8D,EAAO,I;;oEACP,wE,EAAY,I;;;;;;;;;;;;;;;AC3BzB;;AAEA;;AACI;;AAAwC;;AAAmB;;AAC3D;;AACF;;AAGA;;AACE;;AAA0C;AAAA,mBAAS,IAAAQ,UAAA,EAAT;AAAqB,WAArB;;AACxC;;AAAU;;AAAG;;AAAW;;AAC1B;;AACA;;AACE;;AAAgB;AAAA;AAAA,aAAuB,OAAvB,EAAuB;AAAA,mBAAsD,IAAAC,WAAA,EAAtD;AAAmE,WAA1F;;AAAhB;;AACA;;AAGF;;AACF;;AAEA;;AAGE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGC;;AACC;;AACA;;AACF;;AAQA;;AACE;;AACA;;AAMF;;AAIA;;AACA;;AAEF;;AACA;;AACF;;;;AAxDsB;;AAAA;;AAC+C;;AAAA;;AAMlD;;AAAA;;AA4CI;;AAAA;;AACP;;AAAA;;AAG0B;;AAAA,6JAAoC,UAApC,EAAoC,EAApC;;;;;;;;;sEDnD7BT,c,EAAc;cAL1B,uDAK0B;eALhB;AACT5gB,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;gBASxB,uD;iBAAU,8D;;;gBACV,uD;iBAAU,wE;;;;;;;;;;;;;;;;;;;;AE3Bb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMohB,QAAQ,GAAG,gCAAjB;;QAKaC,W;AACX,2BAAoBC,SAApB,EAA6C;AAAA;;AAAzB,aAAAA,SAAA,GAAAA,SAAA;AAA2B;;;;kCACpCpV,G,EAAK;AACd,cAAGA,GAAH,EAAO;AAEL,mBAAO,KAAKoV,SAAL,CAAeC,8BAAf,WAAiDH,QAAjD,SAA4DlV,GAA5D,EAAP;AACD,WAHD,MAKA;AACE;AACD;AAEF;;;;;;;uBAZUmV,W,EAAW,uI;AAAA,K;;;;YAAXA,W;AAAW;;;;;sEAAXA,W,EAAW;cAHvB,kDAGuB;eAHlB;AACJpe,cAAI,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaue,W;;;;;YAAAA;;;;yBAAAA,W;AAAW;;;;0HAAXA,W,EAAW;AAAA,uBAHN,yDAGM;AAHK,kBAChB,yDADgB;AAGL,O;AAFA,K;;;;;sEAEXA,W,EAAW;cAJvB,sDAIuB;eAJd;AACR/gB,sBAAY,EAAE,CAAE,yDAAF,CADN;AAERxD,iBAAO,EAAE,CAAE,yDAAF;AAFD,S;AAIc,Q;;;;;;;;;;;;;;;;;;ACVxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASawkB,yB;AAGX,yCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AAEgC;;;;iDAEf;AACvB,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,sBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACwH,mBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;8CAEqBvM,E,EAAY;AAChC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAAX,GAAqC/kB,EAA/C;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACwF,kBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;sCAEavK,E,EAAY;AACxB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,2BAAX,aAA4C/kB,EAA5C,CAAV;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACwF,kBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;iDAEwBA,kB,EAA4N;AACnP,cAAI6K,GAAG,GAAG,KAAK2P,GAAL,GAAW,sBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqB7K,kBAArB,CAAP;AAED;;;iDAEwBA,kB,EAAsC;AAC7D,cAAI6K,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAAX,GAAmCxa,kBAAkB,CAACvK,EAAhE;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoB7K,kBAApB,CAAP;AACD;;;iDAEyBvK,E,EAAY;AAEpC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAAX,GAAqC/kB,EAA/C;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBAnDU8f,yB,EAAyB,uH;AAAA,K;;;aAAzBA,yB;AAAyB,eAAzBA,yBAAyB,K;AAAA,kBAFxB;;;;;sEAEDA,yB,EAAyB;cAHrC,wDAGqC;eAH1B;AACVnf,oBAAU,EAAE;AADF,S;AAG0B,Q;;;;;;;;;;;;;;;;;;;;;;ACTtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQayf,mB;AAEX,mCAAoBL,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACiC;;;;2CAEtB;AACjB,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,gBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC4D,aAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;wCAEe3I,E,EAAY;AAC1B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,iBAAX,GAA+B/kB,EAAzC;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACqI,YAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;+CAEsBpN,E,EAAY;AACjC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,yBAAX,GAAuC/kB,EAAjD;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACqI,YAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;2CAEkBA,Y,EAAyJ;AAC1K,cAAIgI,GAAG,GAAG,KAAK2P,GAAL,GAAW,gBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqBhI,YAArB,CAAP;AAED;;;2CAEkBA,Y,EAA0B;AAC3C,cAAIgI,GAAG,GAAG,KAAK2P,GAAL,GAAW,iBAAX,GAA6B3X,YAAY,CAACpN,EAApD;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoBhI,YAApB,CAAP;AACD;;;2CAEkBpN,E,EAAU;AAC3B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,iBAAX,GAA8B/kB,EAAxC;AACA,iBAAO,KAAK8kB,IAAL,WAAiB1P,GAAjB,CAAP;AACD;;;;;;;uBA7CU+P,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVzf,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;ACRhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa0f,W;AAIX,2BAAqBN,IAArB,EAA+C9jB,MAA/C,EAA+D;AAAA;;AAA1C,aAAA8jB,IAAA,GAAAA,IAAA;AAA0B,aAAA9jB,MAAA,GAAAA,MAAA;AAFvC,aAAA+jB,GAAA,GAAM,sDAAOnf,GAAb;AAE0D;;;;+BAE3DQ,I,EAAM;AACX,iBAAO,KAAK0e,IAAL,CAAUG,IAAV,CAAoB,KAAKF,GAAL,GAAW,eAA/B,EAAgD3e,IAAhD,CAAP;AACD;;;+BAEMA,I,EAAM;AACX,iBAAO,KAAK0e,IAAL,CAAUG,IAAV,CAAoB,KAAKF,GAAL,GAAW,eAA/B,EAAgD3e,IAAhD,CAAP;AACD;;;mCAEO;AACN,iBAAO,CAAC,CAACQ,YAAY,CAACye,OAAb,CAAqB,OAArB,CAAT;AACD;;;mCAEU;AACT;AACA,iBAAOze,YAAY,CAACye,OAAb,CAAqB,OAArB,CAAP;AAED;;;kCACM;AACL,iBAAOze,YAAY,CAACye,OAAb,CAAqB,MAArB,CAAP;AACD;;;iCACQ;AACLze,sBAAY,CAAC0e,UAAb,CAAwB,OAAxB;AACA1e,sBAAY,CAAC0e,UAAb,CAAwB,MAAxB;AACA,eAAKtkB,MAAL,CAAYiC,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACH;;;;;;;uBA9BUmiB,W,EAAW,uH,EAAA,8G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACV1f,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa6f,0B;AAEX,0CAAoBT,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACiC;;;;kDAEf;AACxB,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC2L,oBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;+CAEsB1Q,E,EAAY;AACjC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,wBAAX,GAAsC/kB,EAAhD;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC+J,mBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;8BAEK9O,E,EAAY;AAChB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,4BAAX,aAA6C/kB,EAA7C,CAAV;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC+J,mBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;kDAEyBA,mB,EAA0C;AAClE,cAAIsG,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqBtG,mBAArB,CAAP;AAED;;;kDAEyBA,mB,EAAwC;AAChE,cAAIsG,GAAG,GAAG,KAAK2P,GAAL,GAAW,wBAAX,GAAqCjW,mBAAmB,CAAC9O,EAAnE;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoBtG,mBAApB,CAAP;AACD;;;kDAE0B9O,E,EAAY;AAErC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,wBAAX,GAAsC/kB,EAAhD;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBAlDUwgB,0B,EAA0B,uH;AAAA,K;;;aAA1BA,0B;AAA0B,eAA1BA,0BAA0B,K;AAAA,kBAFzB;;;;;sEAEDA,0B,EAA0B;cAHtC,wDAGsC;eAH3B;AACV7f,oBAAU,EAAE;AADF,S;AAG2B,Q;;;;;;;;;;;;;;;;;;;;;;ACRvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa8f,c;AAEX,8BAAoBV,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACiC;;;;uCAE1B;AACb,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,YAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC6M,SAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;mCAEU5R,E,EAAY;AACrB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,aAAX,GAA2B/kB,EAArC;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACwM,OAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;sCAEaA,O,EAAoF;AAChG,cAAI6D,GAAG,GAAG,KAAK2P,GAAL,GAAW,YAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqB7D,OAArB,CAAP;AAED;;;sCAEaA,O,EAAgB;AAC5B,cAAI6D,GAAG,GAAG,KAAK2P,GAAL,GAAW,aAAX,GAAyBxT,OAAO,CAACvR,EAA3C;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoB7D,OAApB,CAAP;AACD;;;sCAEcvR,E,EAAY;AAEzB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,aAAX,GAA2B/kB,EAArC;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBAzCUygB,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACV9f,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACT3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAca+f,kB;AAEX,kCAAqBX,IAArB,EAAuC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAEb,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AAIR,aAAAxD,IAAA,GAAkB,IAAI,wDAAJ,CAAc;AAC9BpC,YAAE,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,CAD0B;AAE9B0H,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWnG,QAA/B,CAFsB;AAG9BwG,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAHiB;AAI9BF,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWtG,QAA/B,CAJsB;AAK9BmkB,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWtkB,KAA/B,CALiB;AAM9BukB,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,KAAhB;AANsB,SAAd,CAAlB;AANyC,aAAKC,UAAL;AAAoB;;;;qCAehD;AACX,cAAKhf,YAAY,CAACye,OAAb,CAAqB,OAArB,CAAL,EAAoC;AAClC,iBAAKQ,KAAL,GAAajf,YAAY,CAACye,OAAb,CAAqB,OAArB,CAAb;AACA,iBAAKjf,IAAL,GAAYc,IAAI,CAAC6B,KAAL,CAAWnC,YAAY,CAACye,OAAb,CAAqB,MAArB,CAAX,CAAZ;AACD,WAHD,MAGO;AACL,iBAAKQ,KAAL,GAAa,EAAb;AACA,iBAAKzf,IAAL,GAAY,IAAZ;AACD;AACF;;;8CAEqB;AACpB,eAAKhE,IAAL,CAAUsI,QAAV,CAAmB;AACjB1K,cAAE,EAAE,IADa;AAEjB0H,kBAAM,EAAE,KAAKtB,IAAL,CAAUpG,EAFD;AAGjB+H,uBAAW,EAAE,EAHI;AAIjBF,kBAAM,EAAE,IAAIuB,IAAJ,EAJS;AAKjBsc,uBAAW,EAAE,EALI;AAMjBC,kBAAM,EAAE;AANS,WAAnB;AAQD;;;2CAEkB;AAEjB;AACD,cAAG;AACF,mBAAO,KAAKb,IAAL,CAAUpiB,GAAV,CAA8B,KAAKqiB,GAAL,GAAW,gBAAzC,EACNC,IADM,CAEH,2DAAK,UAAAc,OAAO,EAAI;AACd,qBAAOA,OAAO,CAAC,eAAD,CAAd;AACC,aAFH,CAFG,CAAP;AAQA,WATD,CASE,OAAM1gB,GAAN,EAAW;AACXT,mBAAO,CAACU,GAAR,CAAY,cAAZ,EAA4BD,GAA5B;AACD;AACD;;;wCAEepF,E,EAAY;AAC1B,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAA4B,KAAKqiB,GAAL,GAAW,iBAAX,GAA+B/kB,EAA3D,CAAP;AACD;;;kCAES+N,Y,EAAc;AACtB,eAAK3L,IAAL,CAAUsI,QAAV,CAAmBqD,YAAnB;AACD;;;yCAEiBA,Y,EAA2B;AAE3C,iBAAO,KAAK+W,IAAL,CAAUG,IAAV,CAAgB,KAAKF,GAAL,GAAW,iBAA3B,EAA8ChX,YAA9C,EAA4DiX,IAA5D,CACL,2DAAK,UAACjgB,IAAD,EAAe;AAClB,mBAAOA,IAAI,CAAC,cAAD,CAAX;AACC,WAFH,CADK,CAAP;AAKD;;;2CAEmBgJ,Y,EAAyB;AAE3C,iBAAO,KAAK+W,IAAL,CAAUI,GAAV,CAAe,KAAKH,GAAL,GAAW,iBAAX,GAA+BhX,YAAY,CAAC/N,EAA3D,EAAgE+N,YAAhE,EAA+EiX,IAA/E,CACH,2DAAK,UAACjgB,IAAD,EAAgB;AACnB,mBAAO,IAAP;AACD,WAFD,CADG,CAAP;AAKD;;;2CAEmB/E,E,EAAU;AAE5B,iBAAO,KAAK8kB,IAAL,WAAkB,KAAKC,GAAL,GAAW,kBAAX,GAAgC/kB,EAAlD,EAAuDglB,IAAvD,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX;AACA,mBAAO,IAAP;AACD,WAHD,CADK,CAAP;AAMD;;;;;;;uBAzFU0gB,kB,EAAkB,uH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAHjB;;;;;sEAGDA,kB,EAAkB;cAJ9B,wDAI8B;eAJnB;AACV/f,oBAAU,EAAE;AADF,S;AAImB,Q;;;;;;;;;;;;;;;;;;;;;;ACd/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmBaqgB,e;AAIX,+BACUjB,IADV,EAES3gB,YAFT,EAGUkE,MAHV,EAISmW,sBAJT,EAKUva,iBALV,EAMUuE,KANV,EAMgC;AAAA;;AAAA;;AALtB,aAAAsc,IAAA,GAAAA,IAAA;AACD,aAAA3gB,YAAA,GAAAA,YAAA;AACC,aAAAkE,MAAA,GAAAA,MAAA;AACD,aAAAmW,sBAAA,GAAAA,sBAAA;AACC,aAAAva,iBAAA,GAAAA,iBAAA;AACA,aAAAuE,KAAA,GAAAA,KAAA;AATF,aAAAuc,GAAA,GAAM,sDAAOnf,GAAb;AACR,aAAAxB,QAAA,GAAW,oCAAX;AAWI,aAAKoE,KAAL,CAAWqB,MAAX,CAAkB,QAAlB,EAA4B5H,SAA5B,CAAsC,kBAAgB;AAAA,cAAb2F,MAAa,UAAbA,MAAa;;AACpD,cAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA,oBAAI,CAACkC,aAAL,GAAqBlC,MAArB;AACD;AACF,SALD;AAOD;;;;uCACY;AACb,cAAIwN,GAAG,GAAG,KAAK2P,GAAL,GAAW,YAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACwJ,SAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;oCAEWvO,E,EAAY;AACtB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,aAAX,GAA2B/kB,EAArC;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC4K,QAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;wCAEe3P,E,EAAY;AAC1B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,kBAAX,aAAmC/kB,EAAnC,CAAV;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACwJ,SAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;uCAEcoB,Q,EAAoG;AACjH,cAAIyF,GAAG,GAAG,KAAK2P,GAAL,GAAW,YAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqBzF,QAArB,CAAP;AAED;;;uCAEcA,Q,EAAkB;AAC/B,cAAIyF,GAAG,GAAG,KAAK2P,GAAL,GAAW,aAAX,GAA0BpV,QAAQ,CAAC3P,EAA7C;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoBzF,QAApB,CAAP;AACD;;;uCAEe3P,E,EAAY;AAE1B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,aAAX,GAA2B/kB,EAArC;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;gCAEOuK,G,EAAG;AACT,cAAI8F,GAAG,GAAG,KAAK2P,GAAL,GAAW,SAAX,aAA0BzV,GAA1B,CAAV;AACA,iBAAO,KAAKwV,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;mCAEU/E,E,EAAY;AAAA;;AACrB,eAAKqI,MAAL,CAAYtB,IAAZ,CAAiB,yHAAjB;AACA,eAAKyX,sBAAL,CAA4BzO,SAA5B,CAAuC,MAAvC,EAA+C/P,EAA/C;AAEA,eAAKwe,sBAAL,CAA4BxZ,iBAA5B,CACa/C,SADb,CACwB,UAAC8C,IAAD,EAAe;AACzBJ,mBAAO,CAACU,GAAR,CAAYN,IAAI,CAAC4K,QAAL,CAAcL,GAA1B;AAEA,mBAAOvK,IAAI,CAAC4K,QAAL,CAAcL,GAArB;AAED,WANb;AAOA,eAAKjH,MAAL,CAAY2d,cAAZ,CAA2B/jB,SAA3B,CAAsC,YAAM;AAC1C;AAEA,gBAAK,QAAI,CAACgC,iBAAL,CAAuBgiB,QAA5B,EAAuC;AACjC,kBAAMpb,GAAG,GAAW,4DAAOC,SAAP,CAAkB,QAAI,CAAChB,aAAvB,CAApB;;AACAe,iBAAG,CAACjD,MAAJ,GAAa,WAAb,CAFiC,CAGjC;;AACA,sBAAI,CAACY,KAAL,CAAWuC,QAAX,CAAqB,2EAAqB;AAAEnD,sBAAM,EAAEiD;AAAV,eAArB,CAArB;AACF;AACL,WATD;AAUD;;;mCAEUyE,G,EAAK;AAEd,cAAIA,GAAG,IAAI,WAAX,EAAwB;AACtB,iBAAKlL,QAAL,GAAgB,oCAAhB;AACA,mBAAO,KAAKA,QAAZ;AACD;;AACD,cAAM6L,GAAG,GAAGX,GAAG,CAACY,KAAJ,CAAU,GAAV,CAAZ,CANc,CAOd;;AAEA,cAAID,GAAG,CAAC,CAAD,CAAH,KAAW,KAAf,EAAsB;AACpB,iBAAK7L,QAAL,GAAgB,+BAAhB;AACC;;AAEH,iBAAO,KAAKA,QAAZ;AAGD;;;;;;;uBArHU2hB,e,EAAe,uH,EAAA,mH,EAAA,0H,EAAA,6K,EAAA,2I,EAAA,0G;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVrgB,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASawgB,oB;AAEX,oCAAoBpB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACgC;;;;4CAEpB;AAClB,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,iBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACwR,cAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;yCAEgBvW,E,EAAY;AAC3B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,kBAAX,GAAgC/kB,EAA1C;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACkR,aAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;+BAEMjW,E,EAAY;AACjB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,sBAAX,aAAuC/kB,EAAvC,CAAV;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACkR,aAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;4CAEmBA,a,EAAqE;AACvF,cAAIb,GAAG,GAAG,KAAK2P,GAAL,GAAW,iBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqBa,aAArB,CAAP;AAED;;;4CAEmBA,a,EAA4B;AAC9C,cAAIb,GAAG,GAAG,KAAK2P,GAAL,GAAW,kBAAX,GAA+B9O,aAAa,CAACjW,EAAvD;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoBa,aAApB,CAAP;AACD;;;4CAEoBjW,E,EAAY;AAE/B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,kBAAX,GAAgC/kB,EAA1C;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBAlDUmhB,oB,EAAoB,uH;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFnB;;;;;sEAEDA,oB,EAAoB;cAHhC,wDAGgC;eAHrB;AACVxgB,oBAAU,EAAE;AADF,S;AAGqB,Q;;;;;;;;;;;;;;;;;;;;;;ACTjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaygB,a;AAEX,6BAAoBrB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACiC;;;;qCAE5B;AACX,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,UAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC+L,OAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;kCAES9Q,E,EAAY;AACpB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,WAAX,GAAyB/kB,EAAnC;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACe,MAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;8BAEK9F,E,EAAY;AAChB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,eAAX,aAAgC/kB,EAAhC,CAAV;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACe,MAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;qCAEYA,M,EAA6D;AACxE,cAAIsP,GAAG,GAAG,KAAK2P,GAAL,GAAW,UAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqBtP,MAArB,CAAP;AAED;;;qCAEYA,M,EAAc;AACzB,cAAIsP,GAAG,GAAG,KAAK2P,GAAL,GAAW,WAAX,GAAuBjf,MAAM,CAAC9F,EAAxC;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoBtP,MAApB,CAAP;AACD;;;qCAEa9F,E,EAAY;AAExB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,WAAX,GAAyB/kB,EAAnC;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBAlDUohB,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVzgB,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACR1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa0gB,e;AAGX,+BAAoBtB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACiC;;;;uCAE1B;AACb,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,YAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC6R,SAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;oCAEW5W,E,EAAY;AACtB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,aAAX,GAA2B/kB,EAArC;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC6T,QAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;uCAEcA,Q,EAA0D;AACvE,cAAIxD,GAAG,GAAG,KAAK2P,GAAL,GAAW,YAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqBwD,QAArB,CAAP;AAED;;;uCAEcA,Q,EAAkB;AAC/B,cAAIxD,GAAG,GAAG,KAAK2P,GAAL,GAAW,aAAX,GAAyBnM,QAAQ,CAAC5Y,EAA5C;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoBwD,QAApB,CAAP;AACD;;;uCAEe5Y,E,EAAY;AAE1B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,aAAX,GAA2B/kB,EAArC;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBA1CUqhB,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACV1gB,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACT5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa2gB,gB;AAEX,gCAAoBvB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACgC;;;;wCAExB;AACd,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,aAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACoW,UAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;qCAEYnb,E,EAAY;AACvB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,cAAX,GAA4B/kB,EAAtC;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC0N,SAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;4CAEmBlL,K,EAAe;AACjC,cAAI6N,GAAG,GAAG,KAAK2P,GAAL,GAAW,sBAAX,GAAoCxd,KAA9C;AACA,iBAAO,KAAKud,IAAL,CAAUpiB,GAAV,CAA0B0S,GAA1B,EAA+B4P,IAA/B,CACL,2DAAI,UAACjgB,IAAD,EAAe;AAEjB,mBAAOA,IAAI,CAAC0N,SAAZ;AACD,WAHD,CADK,CAAP;AAMD;;;+CAEsBjM,U,EAAoB;AACzC;AACA,cAAI4O,GAAG,GAAG,KAAK2P,GAAL,GAAW,yBAAX,GAAuCve,UAAjD,CAFyC,CAGzC;;AAEA,iBAAO,KAAKse,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB;AACA,mBAAOA,IAAI,CAAC0N,SAAZ;AACD,WAHD,CADK,CAAP;AAMD;;;wCAEeA,S,EAAoE;AAClF,cAAI2C,GAAG,GAAG,KAAK2P,GAAL,GAAW,aAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqB3C,SAArB,CAAP;AAED;;;wCAEeA,S,EAAoB;AAClC,cAAI2C,GAAG,GAAG,KAAK2P,GAAL,GAAW,cAAX,GAA2BtS,SAAS,CAACzS,EAA/C;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoB3C,SAApB,CAAP;AACD;;;wCAEgBzS,E,EAAY;AAE3B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,cAAX,GAA4B/kB,EAAtC;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBAhEUshB,gB,EAAgB,uH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACV3gB,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;ACT7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa4gB,mB;AAEX,mCAAoBxB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACgC;;;;2CAErB;AACjB,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,gBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACgY,aAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;wCAEe/c,E,EAAY;AAC1B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,iBAAX,GAA+B/kB,EAAzC;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACsX,YAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;+BAEMrc,E,EAAY;AACjB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,qBAAX,aAAsC/kB,EAAtC,CAAV;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACsX,YAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;2CAEkBA,Y,EAA8D;AAC/E,cAAIjH,GAAG,GAAG,KAAK2P,GAAL,GAAW,gBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqBiH,YAArB,CAAP;AAED;;;2CAEkBA,Y,EAA0B;AAC3C,cAAIjH,GAAG,GAAG,KAAK2P,GAAL,GAAW,iBAAX,GAA8B1I,YAAY,CAACrc,EAArD;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoBiH,YAApB,CAAP;AACD;;;2CAEmBrc,E,EAAY;AAE9B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,iBAAX,GAA+B/kB,EAAzC;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBAlDUuhB,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACV5gB,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;ACThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa6gB,c;AAEX,8BAAoBzB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACgC;;;;sCAE1B;AACZ,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,WAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC0D,QAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;mCAEUzI,E,EAAY;AACrB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,YAAX,GAA0B/kB,EAApC;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACuY,OAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;sCAEaA,O,EAA+F;AAC3G,cAAIlI,GAAG,GAAG,KAAK2P,GAAL,GAAW,WAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqBkI,OAArB,CAAP;AAED;;;sCAEaA,O,EAAgB;AAC5B,cAAIlI,GAAG,GAAG,KAAK2P,GAAL,GAAW,YAAX,GAAyBzH,OAAO,CAACtd,EAA3C;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoBkI,OAApB,CAAP;AACD;;;sCAEctd,E,EAAY;AAEzB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,YAAX,GAA0B/kB,EAApC;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBAzCUwhB,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACV7gB,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACT3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa8gB,yB;AAEX,yCAAoB1B,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACgC;;;;iDAEf;AACvB,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,sBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACqZ,mBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;8CAEqBpe,E,EAAY;AAChC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAAX,GAAqC/kB,EAA/C;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC+Y,kBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;+BAEM9d,E,EAAY;AACjB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,2BAAX,aAA4C/kB,EAA5C,CAAV;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC+Y,kBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;iDAEwBA,kB,EAAuE;AAC9F,cAAI1I,GAAG,GAAG,KAAK2P,GAAL,GAAW,sBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqB0I,kBAArB,CAAP;AAED;;;iDAEwBA,kB,EAAsC;AAC7D,cAAI1I,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAAX,GAAoCjH,kBAAkB,CAAC9d,EAAjE;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoB0I,kBAApB,CAAP;AACD;;;iDAEyB9d,E,EAAY;AAEpC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAAX,GAAqC/kB,EAA/C;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBAlDUyhB,yB,EAAyB,uH;AAAA,K;;;aAAzBA,yB;AAAyB,eAAzBA,yBAAyB,K;AAAA,kBAFxB;;;;;sEAEDA,yB,EAAyB;cAHrC,wDAGqC;eAH1B;AACV9gB,oBAAU,EAAE;AADF,S;AAG0B,Q;;;;;;;;;;;;;;;;;;;;;;ACTtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa+gB,yB;AAEX,yCAAoB3B,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACiC;;;;iDAEhB;AACvB,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,sBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACqa,mBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;8CAEqBpf,E,EAAY;AAChC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAAX,GAAqC/kB,EAA/C;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC+Z,kBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;+BAEM9e,E,EAAY;AACjB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,2BAAX,aAA4C/kB,EAA5C,CAAV;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC+Z,kBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;iDAGwBA,kB,EAAkC;AACzD,cAAI1J,GAAG,GAAG,KAAK2P,GAAL,GAAW,sBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqB0J,kBAArB,CAAP;AAED;;;iDAEwBA,kB,EAAsC;AAC7D,cAAI1J,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAAX,GAAoCjG,kBAAkB,CAAC9e,EAAjE;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoB0J,kBAApB,CAAP;AACD;;;iDAEyB9e,E,EAAY;AAEpC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAAX,GAAqC/kB,EAA/C;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBAnDU0hB,yB,EAAyB,uH;AAAA,K;;;aAAzBA,yB;AAAyB,eAAzBA,yBAAyB,K;AAAA,kBAFxB;;;;;sEAEDA,yB,EAAyB;cAHrC,wDAGqC;eAH1B;AACV/gB,oBAAU,EAAE;AADF,S;AAG0B,Q;;;;;;;;;;;;;;;;;;;;;;ACTtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaghB,uB;AAEX,uCAAoB5B,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACiC;;;;+CAElB;AACrB,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,oBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC0Z,iBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;4CAEmBze,E,EAAY;AAC9B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,qBAAX,GAAmC/kB,EAA7C;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC2a,gBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;kCAES1f,E,EAAY;AACpB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,0BAAX,aAA2C/kB,EAA3C,CAAV;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC0Z,iBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;+CAGsBiB,gB,EAAyE;AAC9F,cAAItK,GAAG,GAAG,KAAK2P,GAAL,GAAW,oBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqBsK,gBAArB,CAAP;AAED;;;+CAEsBA,gB,EAAkC;AACvD,cAAItK,GAAG,GAAG,KAAK2P,GAAL,GAAW,qBAAX,GAAkCrF,gBAAgB,CAAC1f,EAA7D;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoBsK,gBAApB,CAAP;AACD;;;+CAEuB1f,E,EAAY;AAElC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,qBAAX,GAAmC/kB,EAA7C;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBAnDU2hB,uB,EAAuB,uH;AAAA,K;;;aAAvBA,uB;AAAuB,eAAvBA,uBAAuB,K;AAAA,kBAFtB;;;;;sEAEDA,uB,EAAuB;cAHnC,wDAGmC;eAHxB;AACVhhB,oBAAU,EAAE;AADF,S;AAGwB,Q;;;;;;;;;;;;;;;;;;;;;;ACTpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaihB,oB;AAEX,oCAAoB7B,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACgC;;;;4CAEpB;AAClB,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,iBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACmc,cAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;yCAEgBlhB,E,EAAY;AAC3B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,kBAAX,GAAgC/kB,EAA1C;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC6b,aAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;+BAEM5gB,E,EAAY;AACjB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,sBAAX,aAAuC/kB,EAAvC,CAAV;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC6b,aAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;4CAEmBA,a,EAAiD;AACnE,cAAIxL,GAAG,GAAG,KAAK2P,GAAL,GAAW,iBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqBwL,aAArB,CAAP;AAED;;;4CAEmBA,a,EAA4B;AAC9C,cAAIxL,GAAG,GAAG,KAAK2P,GAAL,GAAW,kBAAX,GAA+BnE,aAAa,CAAC5gB,EAAvD;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoBwL,aAApB,CAAP;AACD;;;4CAEoB5gB,E,EAAY;AAE/B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,kBAAX,GAAgC/kB,EAA1C;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBAlDU4hB,oB,EAAoB,uH;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFnB;;;;;sEAEDA,oB,EAAoB;cAHhC,wDAGgC;eAHrB;AACVjhB,oBAAU,EAAE;AADF,S;AAGqB,Q;;;;;;;;;;;;;;;;;;;;;;ACTjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMakhB,Y;AAEX,4BAAmBzgB,QAAnB,EAA0C;AAAA;;AAAvB,aAAAA,QAAA,GAAAA,QAAA;AAEnB,aAAA0gB,MAAA,GAA4B;AAC1B7f,kBAAQ,EAAE,IADgB;AAE1B8f,4BAAkB,EAAE,OAFM;AAG1BC,0BAAgB,EAAE;AAHQ,SAA5B;AAF6C;;;;gCASrCC,G,EAAK;AACX,eAAKH,MAAL,CAAY,YAAZ,IAA4B,CAAC,cAAD,EAAiB,SAAjB,CAA5B;AACA,eAAK1gB,QAAL,CAAcY,IAAd,CAAmBigB,GAAnB,EAAwB,UAAxB,EAAoC,KAAKH,MAAzC;AACD;;;6BAEIG,G,EAAK;AACR,eAAKH,MAAL,CAAY,YAAZ,IAA4B,CAAC,cAAD,EAAiB,MAAjB,CAA5B;AACA,eAAK1gB,QAAL,CAAcY,IAAd,CAAmBigB,GAAnB,EAAwB,UAAxB,EAAoC,KAAKH,MAAzC;AACD;;;;;;;uBAnBUD,Y,EAAY,+H;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVlhB,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACNzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiBauhB,a;AAWX,6BACoBnC,IADpB,EAEoB9e,WAFpB,EAGoBkM,gBAHpB,EAIoBW,eAJpB,EAIoD;AAAA;;AAHhC,aAAAiS,IAAA,GAAAA,IAAA;AACA,aAAA9e,WAAA,GAAAA,WAAA;AACA,aAAAkM,gBAAA,GAAAA,gBAAA;AACA,aAAAW,eAAA,GAAAA,eAAA;AAdZ,aAAAkS,GAAA,GAAM,sDAAOnf,GAAb,CAc4C,CAbpD;;AACA,aAAAmN,OAAA,GAAsB,EAAtB;AAEA,aAAAmU,YAAA,GAAqB,IAAI9d,IAAJ,EAArB;AACA,aAAA+d,YAAA,GAAqB,IAAI/d,IAAJ,EAArB;AAYc,aAAKhD,IAAL,GAAYc,IAAI,CAAC6B,KAAL,CAAW,KAAK/C,WAAL,CAAiBgD,OAAjB,EAAX,CAAZ;AAEA,aAAKke,YAAL,CAAkBE,UAAlB,CAA6B,KAAKF,YAAL,CAAkBG,UAAlB,KAAiC,KAAKH,YAAL,CAAkBI,UAAlB,KAAiC,EAA/F;AACA,aAAKJ,YAAL,CAAkBK,OAAlB,CAA0B,KAAKL,YAAL,CAAkBM,OAAlB,KAA+B,KAAK,EAAL,GAAU,EAAV,GAAe,IAAhB,GAAwB,EAAhF;AACA,aAAKL,YAAL,CAAkBC,UAAlB,CAA6B,KAAKD,YAAL,CAAkBE,UAAlB,KAAiC,KAAKF,YAAL,CAAkBG,UAAlB,KAAiC,EAA/F;;AAEA,YAAI,KAAKlhB,IAAT,EAAe;AAEb,eAAK6S,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9BvR,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,KAAKtB,IAAL,CAAUpG,EAA1B,EAA8B,0DAAWuB,QAAzC,CADsB;AAE9Bwa,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,KAAKmL,YAArB,EAAmC,CAAC,0DAAW3lB,QAAZ,EAAsB,KAAKkmB,cAAL,CAAoB,SAApB,CAAtB,CAAnC,CAFmB;AAG9BzL,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,KAAKmL,YAArB,EAAmC,CAAC,0DAAW5lB,QAAZ,EAAsB,KAAKmmB,YAAL,CAAkB,WAAlB,CAAtB,CAAnC;AAHqB,WAAd,CAAlB;AAKD;AAGF;;;;uCAEEC,U,EAAU;AACvB,iBAAO,UAACllB,OAAD,EAAsD;AACzD,gBAAMmlB,KAAK,GAAGnlB,OAAO,CAACkI,KAAtB,CADyD,CAEzD;;AACA,gBAAMkd,OAAO,GAAGplB,OAAO,CAACqlB,IAAR,CAAand,KAAb,CAAmBgd,UAAnB,IAAiCC,KAAjD;;AACA,gBAAI,CAACC,OAAL,EAAc;AAAC,qBAAO;AAAEJ,8BAAc,EAAE;AAACI,yBAAO,EAAPA;AAAD;AAAlB,eAAP;AACd,aADD,MACO;AAAE,qBAAO,IAAP;AAAc;AAE1B,WAPD;AAQD;;;qCAGYF,U,EAAU;AACrB,iBAAO,UAACllB,OAAD,EAAsD;AACzD,gBAAMmlB,KAAK,GAAGnlB,OAAO,CAACkI,KAAtB;AACA,gBAAMkd,OAAO,GAAGplB,OAAO,CAACqlB,IAAR,CAAand,KAAb,CAAmBgd,UAAnB,IAAiCC,KAAjD;;AACA,gBAAI,CAACC,OAAL,EAAc;AACV,qBAAO;AAAEH,4BAAY,EAAE;AAACG,yBAAO,EAAPA;AAAD;AAAhB,eAAP;AACH,aAFD,MAGK;AACD,qBAAO,IAAP;AACH;AACJ,WATD;AAUD;;;qCAEY3O,G,EAAK;AAChB,eAAKT,cAAL,GAAsBS,GAAtB;AACD;;;qCAEY;AACX,cAAM9D,GAAG,GAAG,KAAK2P,GAAL,GAAW,SAAvB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAuB0S,GAAvB,EAA4B4P,IAA5B,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC6C,MAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;8CAEqBmgB,S,EAAmBtgB,W,EAAqBC,M,EAAc;AAE1E,cAAM0N,GAAG,GAAG,KAAK2P,GAAL,GAAW,qBAAX,GAAmCgD,SAAnC,GAA+C,GAA/C,GAAqDtgB,WAArD,GAAmE,GAAnE,GAAyEC,MAArF;AACA,iBAAO,KAAKod,IAAL,CAAUpiB,GAAV,CAAuB0S,GAAvB,EAA4B4P,IAA5B,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC6C,MAAZ;AACD,WAFD,CADK,CAAP;AAMD;;;0CAEiBogB,U,EAAU;AAC1B,cAAM5S,GAAG,GAAG,KAAK2P,GAAL,GAAW,oBAAvB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqB4S,UAArB,CAAP;AACD;;;kCAEShoB,E,EAAY;AAEpB,cAAMoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,UAAX,GAAwB/kB,EAApC;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAuB0S,GAAvB,EAA4B4P,IAA5B,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAAC6C,MAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;2CAEkBG,W,EAAqB;AACtC,cAAMqN,GAAG,GAAG,KAAK2P,GAAL,GAAW,oBAAX,GAAkChd,WAA9C;AACA,iBAAO,KAAK+c,IAAL,CAAUpiB,GAAV,CAAuB0S,GAAvB,EAA4B4P,IAA5B,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACf,mBAAOA,IAAI,CAAC6C,MAAZ;AACH,WAFD,CADK,CAAP;AAKD;;;qCAEYA,M,EAAgB;AAC3B,cAAMwN,GAAG,GAAG,KAAK2P,GAAL,GAAW,SAAvB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqBxN,MAArB,CAAP;AAED;;;yCAEgBG,W,EAAqB;AACpC,cAAMqN,GAAG,GAAG,KAAK2P,GAAL,GAAW,kBAAX,GAAgChd,WAA5C;AACA,iBAAO,KAAK+c,IAAL,CAAUpiB,GAAV,CAAuB0S,GAAvB,EAA4B4P,IAA5B,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACf,mBAAOA,IAAI,CAAC6C,MAAZ;AACH,WAFD,CADK,CAAP;AAKD;;;2CAEkBA,M,EAAgBD,M,EAAgB;AAAA;;AACjD,cAAIsM,QAAQ,GAAG,CAAf;;AACA,cAAIrM,MAAM,CAACH,WAAP,KAAuB,IAA3B,EAAkC;AAC/B;AACC;AACA;AAEAwM,oBAAQ,GAAG,CAAX;AAEA,iBAAK/B,gBAAL,CAAsBM,mBAAtB,CAA0CyB,QAA1C,EACOhS,SADP,CAEQ,UAAAqQ,gBAAgB,EAAI;AAClB1K,oBAAM,CAACH,WAAP,GAAqB6K,gBAAgB,CAACtS,EAAtC;AACA4H,oBAAM,CAACvB,IAAP,GAAciM,gBAAgB,CAAChL,aAA/B;AACAM,oBAAM,CAACE,OAAP,GAAiB,KAAjB;AACAF,oBAAM,CAACF,MAAP,GAAgB,QAAI,CAACtB,IAAL,CAAUpG,EAA1B;;AAEA,sBAAI,CAACioB,YAAL,CAAkBrgB,MAAlB,EAA0B3F,SAA1B,CACE,UAACwJ,MAAD,EAAiB;AACf9G,uBAAO,CAACU,GAAR,CAAY,uCAAZ,EAAqDoG,MAArD;AACAwI,wBAAQ,GAAG3B,gBAAgB,CAAC/K,KAAjB,GAAyB,CAApC;;AACA,wBAAI,CAAC2K,gBAAL,CAAsBM,mBAAtB,CAA0CyB,QAA1C,EACOhS,SADP,CACkB,UAAAiS,aAAa,EAAI;AAE3BvP,yBAAO,CAACU,GAAR,CAAY,0BAAZ,EAAwC6O,aAAxC;AACAtM,wBAAM,CAACH,WAAP,GAAqByM,aAAa,CAAClU,EAAnC;AACA4H,wBAAM,CAACvB,IAAP,GAAc6N,aAAa,CAAC5M,aAA5B;AACAM,wBAAM,CAACD,MAAP,GAAgB,IAAhB;AACAC,wBAAM,CAACE,OAAP,GAAiB,IAAjB;AACAF,wBAAM,CAACF,MAAP,GAAgB,IAAhB;;AAEA,0BAAI,CAACugB,YAAL,CAAkBrgB,MAAlB,EAA2B3F,SAA3B,CACE,UAAAimB,UAAU,EAAI;AACZvjB,2BAAO,CAACU,GAAR,CAAY,kCAAZ,EAAgD6iB,UAAhD;AACD,mBAHH,EAGK,UAAAtjB,KAAK;AAAA,2BAAID,OAAO,CAACU,GAAR,CAAYT,KAAZ,CAAJ;AAAA,mBAHV;AAMD,iBAhBP,EAgBS,UAAAA,KAAK;AAAA,yBAAID,OAAO,CAACU,GAAR,CAAYT,KAAZ,CAAJ;AAAA,iBAhBd;AAmBD,eAvBH,EAuBK,UAAAA,KAAK;AAAA,uBAAID,OAAO,CAACU,GAAR,CAAYT,KAAZ,CAAJ;AAAA,eAvBV;AA0BD,aAlCT,EAkCW,UAAAA,KAAK;AAAA,qBAAID,OAAO,CAACU,GAAR,CAAYT,KAAZ,CAAJ;AAAA,aAlChB;AAoCD,WA3CH,MA2CS;AAEL;AACA;AACA;AAEA,iBAAKsN,gBAAL,CAAsBG,YAAtB,CAAmCzK,MAAM,CAACH,WAA1C,EACOxF,SADP,CAEQ,UAAAqQ,gBAAgB,EAAI;AAClB3N,qBAAO,CAACU,GAAR,CAAY,uBAAZ,EAAqCiN,gBAArC;AAEA1K,oBAAM,CAACE,OAAP,GAAiB,KAAjB;AACAF,oBAAM,CAACF,MAAP,GAAgB,QAAI,CAACtB,IAAL,CAAUpG,EAA1B;AACA4H,oBAAM,CAACD,MAAP,GAAgBA,MAAhB;AACAC,oBAAM,CAACC,MAAP,GAAgB,IAAIuB,IAAJ,CAAS,qBAAT,CAAhB;;AAEA,sBAAI,CAAC+e,YAAL,CAAkBvgB,MAAlB,EACO3F,SADP,CAEQ,UAAA6H,aAAa,EAAI;AACfnF,uBAAO,CAACU,GAAR,CAAY,oBAAZ,EAAkCyE,aAAlC;AACD,eAJT,EAIW,UAAAlF,KAAK;AAAA,uBAAID,OAAO,CAACU,GAAR,CAAYT,KAAZ,CAAJ;AAAA,eAJhB;;AAOAqP,sBAAQ,GAAG3B,gBAAgB,CAAC/K,KAAjB,GAAyB,CAApC;;AACA,sBAAI,CAAC2K,gBAAL,CAAsBM,mBAAtB,CAA0CyB,QAA1C,EACGhS,SADH,CAEI,UAAA0E,GAAG,EAAI;AACLiB,sBAAM,CAACH,WAAP,GAAqBd,GAAG,CAAC3G,EAAzB;AACA4H,sBAAM,CAACvB,IAAP,GAAcM,GAAG,CAACW,aAAlB;AACAM,sBAAM,CAACE,OAAP,GAAiB,IAAjB;AACAF,sBAAM,CAACF,MAAP,GAAgB,IAAhB;;AAEA,wBAAI,CAACugB,YAAL,CAAkBrgB,MAAlB,EAA0B3F,SAA1B,CACE,UAACwJ,MAAD,EAAiB;AACf9G,yBAAO,CAACU,GAAR,CAAY,uCAAZ,EAAqDoG,MAArD;AAED,iBAJH,EAIK,UAAA7G,KAAK;AAAA,yBAAID,OAAO,CAACU,GAAR,CAAYT,KAAZ,CAAJ;AAAA,iBAJV;AAOD,eAfL,EAeO,UAAAA,KAAK;AAAA,uBAAID,OAAO,CAACU,GAAR,CAAYT,KAAZ,CAAJ;AAAA,eAfZ;AAgBD,aAlCT;AAqCD,WAxF8C,CAwF7C;;AAEL;;;kCAEUmD,W,EAAqBJ,M,EAAgBtB,I,EAAc;AAAA;;AAE5D,cAAIuB,MAAJ;AACA,eAAK+Q,gBAAL,CAAsB5Q,WAAtB,EAAmC9F,SAAnC,CACE,UAAAwJ,MAAM,EAAI;AACR;AACA,gBAAIA,MAAM,KAAK,IAAf,EAAoB;AAClB7D,oBAAM,GAAG,IAAI,kEAAJ,CAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB,EAA6BD,MAA7B,EAAqC,SAArC,EAAgD,IAAIyB,IAAJ,CAAS,qBAAT,CAAhD,EAAiF,KAAjF,EAAwFrB,WAAxF,EAAqG,gBAArG,CAAT;;AAEA,sBAAI,CAACqgB,kBAAL,CAAwBxgB,MAAxB,EAAgCD,MAAhC;AAED,aALD,MAKM;AACJC,oBAAM,GAAG6D,MAAT;;AACA,sBAAI,CAAC2c,kBAAL,CAAwBxgB,MAAxB,EAAgCD,MAAhC;AACD;AAEF,WAbH,EAaK,UAAA/C,KAAK;AAAA,mBAAID,OAAO,CAACU,GAAR,CAAYT,KAAZ,CAAJ;AAAA,WAbV;AAiBD;;;qCAEYgD,M,EAAc;AACzB,cAAMwN,GAAG,GAAG,KAAK2P,GAAL,GAAW,UAAX,GAAwBnd,MAAM,CAAC5H,EAA3C;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoBxN,MAApB,CAAP;AACD;;;qCAEa5H,E,EAAY;AAExB,cAAMoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,UAAX,GAAwB/kB,EAApC;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBA3PUkiB,a,EAAa,uH,EAAA,iH,EAAA,qI,EAAA,kI;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVvhB,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa2iB,0B;AAGX,0CAAoBvD,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACiC;;;;kDAEf;AAExB,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAe0S,GAAf,EAAqB4P,IAArB,CACG,2DAAK,UAACjgB,IAAD,EAAe;AAClB,mBAAOA,IAAI,CAACsd,oBAAZ;AACD,WAFD,CADH,CAAP;AAKD;;;+CAEsBriB,E,EAAY;AACjC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,wBAAX,GAAsC/kB,EAAhD;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACgd,mBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;+BAEM/hB,E,EAAY;AACjB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,4BAAX,aAA6C/kB,EAA7C,CAAV;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACgd,mBAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;kDAEyBA,mB,EAA0F;AAClH,cAAI3M,GAAG,GAAG,KAAK2P,GAAL,GAAW,uBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqB2M,mBAArB,CAAP;AAED;;;kDAEyBA,mB,EAAwC;AAChE,cAAI3M,GAAG,GAAG,KAAK2P,GAAL,GAAW,wBAAX,GAAoChD,mBAAmB,CAAC/hB,EAAlE;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoB2M,mBAApB,CAAP;AACD;;;kDAE0B/hB,E,EAAY;AAErC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,wBAAX,GAAsC/kB,EAAhD;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBApDUsjB,0B,EAA0B,uH;AAAA,K;;;aAA1BA,0B;AAA0B,eAA1BA,0BAA0B,K;AAAA,kBAFzB;;;;;sEAEDA,0B,EAA0B;cAHtC,wDAGsC;eAH3B;AACV3iB,oBAAU,EAAE;AADF,S;AAG2B,Q;;;;;;;;;;;;;;;;;;;;;;ACTvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa4iB,sB;AAGX,sCAAoBxD,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AACiC;;;;8CAEnB;AAEpB,cAAIwP,GAAG,GAAG,KAAK2P,GAAL,GAAW,mBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUpiB,GAAV,CAAe0S,GAAf,EAAqB4P,IAArB,CACG,2DAAK,UAACjgB,IAAD,EAAe;AAClB,mBAAOA,IAAI,CAACye,gBAAZ;AACD,WAFD,CADH,CAAP;AAKD;;;2CAEkBxjB,E,EAAY;AAC7B,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,oBAAX,GAAkC/kB,EAA5C;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACme,eAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;8BAEKljB,E,EAAY;AAChB,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,wBAAX,aAAyC/kB,EAAzC,CAAV;AACA,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAc0S,GAAd,EAAmB4P,IAAnB,CACL,2DAAI,UAACjgB,IAAD,EAAe;AACjB,mBAAOA,IAAI,CAACme,eAAZ;AACD,WAFD,CADK,CAAP;AAKD;;;8CAEqBA,e,EAAqO;AACzP,cAAI9N,GAAG,GAAG,KAAK2P,GAAL,GAAW,mBAArB;AACA,iBAAO,KAAKD,IAAL,CAAUG,IAAV,CAAgB7P,GAAhB,EAAqB8N,eAArB,CAAP;AAED;;;8CAEqBA,e,EAAgC;AACpD,cAAI9N,GAAG,GAAG,KAAK2P,GAAL,GAAW,oBAAX,GAAgC7B,eAAe,CAACljB,EAA1D;AACA,iBAAO,KAAK8kB,IAAL,CAAUI,GAAV,CAAe9P,GAAf,EAAoB8N,eAApB,CAAP;AACD;;;8CAEsBljB,E,EAAY;AAEjC,cAAIoV,GAAG,GAAG,KAAK2P,GAAL,GAAW,oBAAX,GAAkC/kB,EAA5C;AACA,iBAAO,KAAK8kB,IAAL,WAAkB1P,GAAlB,EAAwB4P,IAAxB,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX,mBAAOA,IAAP;AACD,WAFD,CADK,CAAP;AAKD;;;;;;;uBApDUujB,sB,EAAsB,uH;AAAA,K;;;aAAtBA,sB;AAAsB,eAAtBA,sBAAsB,K;AAAA,kBAFrB;;;;;sEAEDA,sB,EAAsB;cAHlC,wDAGkC;eAHvB;AACV5iB,oBAAU,EAAE;AADF,S;AAGuB,Q;;;;;;;;;;;;;;;;;;;;;;ACTnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa6iB,uB;AACX,uCAAqBviB,WAArB,EAA+C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA6B;;;;kCAExCzG,G,EAAKgW,I,EAAM;AACnB,cAAMiT,WAAW,GAAGjpB,GAAG,CAACkpB,KAAJ,CAAU;AAC5BC,sBAAU,EAAE;AACVC,2BAAa,mBAAY,KAAK3iB,WAAL,CAAiB4iB,QAAjB,EAAZ;AADH;AADgB,WAAV,CAApB;AAKA,iBAAOrT,IAAI,CAACsT,MAAL,CAAYL,WAAZ,CAAP;AACD;;;;;;;uBAVUD,uB,EAAuB,iH;AAAA,K;;;aAAvBA,uB;AAAuB,eAAvBA,uBAAuB,K;AAAA,kBAFtB;;;;;sEAEDA,uB,EAAuB;cAHnC,wDAGmC;eAHxB;AACV7iB,oBAAU,EAAE;AADF,S;AAGwB,Q;;;;;;;;;;;;;;;;;;;;;;ACPpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaojB,iB;AAGX,mCAAc;AAAA;;AAFN,aAAA/D,GAAA,GAAM,sDAAOnf,GAAb;AACR,aAAAqgB,QAAA,GAAW,KAAX;AACiB;;;;mCAEN1hB,I,EAAYvE,E,EAAU;AAAA;;AAG/B,iBAAO,IAAIR,OAAJ,CAAY,UAAEC,OAAF,EAAWspB,MAAX,EAAuB;AACxC,oBAAI,CAAC9C,QAAL,GAAgB,KAAhB;AACA,gBAAM+C,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,gBAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AAEAH,oBAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyB7kB,IAAzB,EAA+BA,IAAI,CAAC8B,IAApC;;AACA6iB,eAAG,CAACG,kBAAJ,GAAyB,YAAM;AAE/B,kBAAKH,GAAG,CAACI,UAAJ,KAAmB,CAAxB,EAA2B;AAEzB,oBAAKJ,GAAG,CAACthB,MAAJ,KAAe,GAApB,EAA0B;AACxB;AACA,0BAAI,CAACqe,QAAL,GAAgB,IAAhB;AACAxmB,yBAAO,CAAEyH,IAAI,CAAC6B,KAAL,CAAWmgB,GAAG,CAACK,QAAf,CAAF,CAAP;AAED,iBALD,MAKO;AAEL5kB,yBAAO,CAACU,GAAR,CAAY,6BAAZ;AACA,0BAAI,CAAC4gB,QAAL,GAAgB,KAAhB;AACA8C,wBAAM,CAAE7hB,IAAI,CAAC6B,KAAL,CAAWmgB,GAAG,CAACK,QAAf,CAAF,CAAN;AACD;AACF;AAEF,aAjBC;;AAmBA,gBAAMnU,GAAG,GAAG,QAAI,CAAC2P,GAAL,GAAW,SAAX,GAAsB/kB,EAAlC;AAEAkpB,eAAG,CAACniB,IAAJ,CAAU,KAAV,EAAiBqO,GAAjB,EAAsB,IAAtB;AACA8T,eAAG,CAACM,IAAJ,CAAUR,QAAV;AAEH,WA9BQ,CAAP;AAiCD;;;;;;;uBAzCUF,iB;AAAiB,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVpjB,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;ACN9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYa+jB,W;AAEX,2BAAqB3E,IAArB,EAAuC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAEb,aAAAC,GAAA,GAAM,sDAAOnf,GAAb;AAIR,aAAAxD,IAAA,GAAkB,IAAI,wDAAJ,CAAc;AAC9BpC,YAAE,EAAE,IAAI,0DAAJ,CAAgB,IAAhB,CAD0B;AAE9BqG,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW9E,QAA/B,CAFwB;AAG9B+E,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW/E,QAA/B,CAHoB;AAI9BH,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWA,KAA/B,CAJuB;AAK9BC,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWE,QAAZ,EAAsB,0DAAWO,SAAX,CAAqB,CAArB,CAAtB,CAApB,CALoB;AAM9ByE,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CANwB;AAO9BC,oBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAPkB,SAAd,CAAlB;AANyC,aAAKof,UAAL;AAAoB;;;;qCAgBhD;AACX,cAAKhf,YAAY,CAACye,OAAb,CAAqB,OAArB,CAAL,EAAoC;AAClC,iBAAKQ,KAAL,GAAajf,YAAY,CAACye,OAAb,CAAqB,OAArB,CAAb;AACA,iBAAKjf,IAAL,GAAYc,IAAI,CAAC6B,KAAL,CAAWnC,YAAY,CAACye,OAAb,CAAqB,MAArB,CAAX,CAAZ;AACD,WAHD,MAGO;AACL,iBAAKQ,KAAL,GAAa,EAAb;AACA,iBAAKzf,IAAL,GAAY,IAAZ;AACD;AACF;;;8CAEqB;AACpB,eAAKhE,IAAL,CAAUsI,QAAV,CAAmB;AACjB1K,cAAE,EAAE,IADa;AAEjBqG,gBAAI,EAAE,EAFW;AAGjBC,oBAAQ,EAAE,EAHO;AAIjBlF,iBAAK,EAAE,EAJU;AAKjBC,oBAAQ,EAAE,EALO;AAMjBkF,gBAAI,EAAE,EANW;AAOjBC,sBAAU,EAAE;AAPK,WAAnB;AASD;;;mCAEU;AAET;AACA,iBAAO,KAAKse,IAAL,CAAUpiB,GAAV,CAAuB,KAAKqiB,GAAL,GAAW,QAAlC,EACEC,IADF,CAEK,2DAAK,UAAAc,OAAO,EAAI;AACd,mBAAOA,OAAO,CAAC,MAAD,CAAP,CAAgBzmB,GAAhB,CAAqB,UAAA+G,IAAI;AAAA,qBAAI,kDAAKsjB,aAAL,CAAmBtjB,IAAnB,CAAJ;AAAA,aAAzB,CAAP;AACC,WAFH,CAFL,CAAP;AAOD;;;gCAEOpG,E,EAAI;AACV,iBAAO,KAAK8kB,IAAL,CAAUpiB,GAAV,CAAqB,KAAKqiB,GAAL,GAAW,SAAX,GAAuB/kB,EAA5C,CAAP;AACD;;;qCAEYoG,I,EAAM;AACjB,eAAKhE,IAAL,CAAUsI,QAAV,CAAmBtE,IAAnB;AACD;;;iCAESA,I,EAAY;AAEpB,iBAAO,KAAK0e,IAAL,CAAUG,IAAV,CAAgB,KAAKF,GAAL,GAAW,eAA3B,EAA4C3e,IAA5C,EAAkD4e,IAAlD,CACL,2DAAK,UAACjgB,IAAD,EAAe;AAClB,mBAAOA,IAAI,CAAC,MAAD,CAAX;AACC,WAFH,CADK,CAAP;AAKD;;;mCAEWqB,I,EAAU;AAEpB,iBAAO,KAAK0e,IAAL,CAAUI,GAAV,CAAe,KAAKH,GAAL,GAAW,SAAX,GAAuB3e,IAAI,CAACpG,EAA3C,EAAgDoG,IAAhD,EAAuD4e,IAAvD,CACH,2DAAK,UAACjgB,IAAD,EAAgB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAO,IAAP;AACD,WARD,CADG,CAAP;AAWD;;;mCAEW/E,E,EAAU;AAEpB,iBAAO,KAAK8kB,IAAL,WAAkB,KAAKC,GAAL,GAAW,SAAX,GAAuB/kB,EAAzC,EAA8CglB,IAA9C,CACL,2DAAK,UAAAjgB,IAAI,EAAI;AACX;AACA,mBAAO,IAAP;AACD,WAHD,CADK,CAAP;AAMD;;;;;;;uBA5FU0kB,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACV/jB,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACZxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaikB,oB;AAEX,sCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA;AAAA;ACPjC;;AAAG;;AAAmB;;;;;;;;sEDOTA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTzmB,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;AEPjwmB,UAAU,GAAG,iEACtB,uBADsB,EAEtB,2DAFsB,CAAnB;AAIA,QAAMC,iBAAiB,GAAG,iEAC7B,8BAD6B,EAE7B,2DAF6B,CAA1B;AAKA,QAAMC,eAAe,GAAG,iEAC3B,4BAD2B,EAE3B,2DAF2B,CAAxB;AAKA,QAAMC,WAAW,GAAG,iEACvB,uBADuB,CAApB;AAIA,QAAMC,aAAa,GAAG,iEACzB,iCADyB,EAEzB,2DAFyB,CAAtB;AAKA,QAAMC,YAAY,GAAG,iEACxB,yBADwB,EAExB,2DAFwB,CAArB;AAKA,QAAMC,aAAa,GAAG,iEACzB,gCADyB,EAEzB,2DAFyB,CAAtB;AAKA,QAAMC,oBAAoB,GAAG,iEAChC,wCADgC,EAEhC,2DAFgC,CAA7B;AAKA,QAAMC,kBAAkB,GAAG,iEAC9B,sCAD8B,EAE9B,2DAF8B,CAA3B;AAKA,QAAMnC,YAAY,GAAG,iEACxB,wBADwB,EAExB,2DAFwB,CAArB;AAKA,QAAMoC,mBAAmB,GAAG,iEAC/B,gCAD+B,EAE/B,2DAF+B,CAA5B;AAKA,QAAMC,iBAAiB,GAAG,iEAC7B,8BAD6B,EAE7B,2DAF6B,CAA1B;AAKA,QAAMnC,YAAY,GAAG,iEACxB,wBADwB,EAExB,2DAFwB,CAArB;AAKA,QAAMoC,mBAAmB,GAAG,iEAC/B,gCAD+B,EAE/B,2DAF+B,CAA5B;AAKA,QAAMC,iBAAiB,GAAG,iEAC7B,8BAD6B,EAE7B,2DAF6B,CAA1B;;;;;;;;;;;;;;;;ACvEP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKO,QAAMC,WAAW,GAAG,iEACvB,wBADuB,EAEvB,2DAFuB,CAApB;AAIA,QAAMC,kBAAkB,GAAG,iEAC9B,gCAD8B,EAE9B,2DAF8B,CAA3B;AAIA,QAAMC,gBAAgB,GAAG,iEAC5B,8BAD4B,EAE5B,2DAF4B,CAAzB;AAIA,QAAMC,eAAe,GAAG,iEAC3B,qBAD2B,EAE3B,2DAF2B,CAAxB;;;;;;;;;;;;;;;;AChBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWO,QAAMC,WAAW,GAA+B;AACpD9X,aAAO,EAAE,wDAD2C;AAEpDnL,YAAM,EAAE;AAF4C,KAAhD;;;;;;;;;;;;;;;;ACZP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,QAAMkjB,YAAY,GAAU,CAAE,+DAAF,EAAkB,6DAAlB,CAA5B;;;;;;;;;;;;;;;;ACJP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaC,a,GACT,uBACYC,QADZ,EAEY9e,aAFZ,EAEwC;AAAA;;AAAA;;AAD5B,WAAA8e,QAAA,GAAAA,QAAA;AACA,WAAA9e,aAAA,GAAAA,aAAA;AAGZ,WAAA+e,WAAA,GAAc,mEACV;AAAA,eAAM,QAAI,CAACD,QAAL,CAAchG,IAAd,CACH,6DAAO,oDAAP,CADG,EAEN;AACA,yEACO,UAAEkG,MAAF;AAAA,iBAAc,QAAI,CAAChf,aAAL,CAAmBmH,SAAnB,CAA6B6X,MAAM,CAAClrB,EAApC,EACRglB,IADQ,CAEL,2DAAK,UAAApd,MAAM;AAAA,mBAAI,4DAAgC;AAAEA,oBAAM,EAANA;AAAF,aAAhC,CAAJ;AAAA,WAAX,CAFK,EAGL,kEAAY,UAAAxC,GAAG;AAAA,mBAAI,gDAAG,0DAA8B;AAAE+lB,qBAAO,EAAE/lB;AAAX,aAA9B,CAAH,CAAJ;AAAA,WAAf,CAHK,CAAd;AAAA,SADP,CAHM,CAAN;AAAA,OADU,CAAd;AAcA,WAAAgmB,cAAA,GAAiB,mEACb;AAAA,eAAM,QAAI,CAACJ,QAAL,CAAchG,IAAd,CACH,6DAAO,uDAAP,CADG,EAEN;AACA,yEACO,UAAEkG,MAAF;AAAA,iBAAc,QAAI,CAAChf,aAAL,CAAmB+b,YAAnB,CAAgCiD,MAAM,CAACtjB,MAAvC,EACRod,IADQ,CAEL,2DAAK,UAACre,GAAD;AAAA,mBAAc,+DAAmC;AAAEiB,oBAAM,EAAEjB,GAAG,CAACiB;AAAd,aAAnC,CAAd;AAAA,WAAL,CAFK,EAGL,kEAAY,UAAAxC,GAAG;AAAA,mBAAI,gDAAG,6DAAiC;AAAE+lB,qBAAO,EAAE/lB;AAAX,aAAjC,CAAH,CAAJ;AAAA,WAAf,CAHK,CAAd;AAAA,SADP,CAHM,CAAN;AAAA,OADa,CAAjB;AAcA,WAAAimB,aAAA,GAAgB,mEACZ;AAAA,eAAM,QAAI,CAACL,QAAL,CAAchG,IAAd,CACH,6DAAO,sDAAP,CADG,EAEN;AACA,yEACO,UAAEkG,MAAF,EAAc;AAAE,iBAAO,QAAI,CAAChf,aAAL,CAAmB+b,YAAnB,CAAgCiD,MAAM,CAACtjB,MAAvC,EACjBod,IADiB,CAEd,iEAAW,UAACre,GAAD;AAAA,mBAAc,CACrB,8DAAkC;AAAEiB,oBAAM,EAAEjB,GAAG,CAACiB;AAAd,aAAlC,CADqB,EAErB,uDAFqB,CAAd;AAAA,WAAX,CAFc,EAMd,kEAAY,UAAAxC,GAAG;AAAA,mBAAI,gDAAG,4DAAgC;AAAE+lB,qBAAO,EAAE/lB;AAAX,aAAhC,CAAH,CAAJ;AAAA,WAAf,CANc,CAAP;AAOT,SARd,CAHM,CAAN;AAAA,OADY,CAAhB;AAiBA,WAAAkmB,WAAA,GAAc,mEACV;AAAA,eAAM,QAAI,CAACN,QAAL,CAAchG,IAAd,CACH,6DAAO,sDAAP,CADG,EAEN;AACA,yEACO,UAAEkG,MAAF;AAAA,iBAAc,QAAI,CAAChf,aAAL,CAAmBic,YAAnB,CAAgC+C,MAAM,CAACtjB,MAAvC,EACRod,IADQ,CAEL,2DAAK,UAACre,GAAD;AAAA,mBAAc,8DAAkC;AAAEiB,oBAAM,EAAEjB,GAAG,CAACiB;AAAd,aAAlC,CAAd;AAAA,WAAL,CAFK,EAGL,kEAAY,UAAAxC,GAAG;AAAA,mBAAI,gDAAG,4DAAgC;AAAE+lB,qBAAO,EAAE/lB;AAAX,aAAhC,CAAH,CAAJ;AAAA,WAAf,CAHK,CAAd;AAAA,SADP,CAHM,CAAN;AAAA,OADU,CAAd;AA/CI,K;;;uBAJK2lB,a,EAAa,6G,EAAA,qI;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa;;;;;sEAAbA,a,EAAa;cADzB;AACyB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACZ1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaQ,c,GAGT,wBACYP,QADZ,EAEY9e,aAFZ,EAEwC;AAAA;;AAAA;;AAD5B,WAAA8e,QAAA,GAAAA,QAAA;AACA,WAAA9e,aAAA,GAAAA,aAAA;AAEZ,WAAAsf,YAAA,GAAe,mEACX;AAAA,eAAM,QAAI,CAACR,QAAL,CAAchG,IAAd,CACH,6DAAO,oEAAP,CADG,EAEN;AACG,wEACI,UAAEkG,MAAF;AAAA,iBAAc,QAAI,CAAChf,aAAL,CAAmBuf,qBAAnB,CAAyCP,MAAM,CAAC1kB,UAAhD,EAA4D0kB,MAAM,CAACzjB,WAAnE,EAAgFyjB,MAAM,CAACxjB,MAAvF,EACRsd,IADQ,CAEL,2DAAK,UAAApd,MAAM;AAAA,mBAAI,4EAAiC;AAAEmL,qBAAO,EAAEnL;AAAX,aAAjC,CAAJ;AAAA,WAAX,CAFK,EAGL,kEAAY,UAAAxC,GAAG;AAAA,mBAAI,gDAAG,0EAA+B;AAAE+lB,qBAAO,EAAE/lB;AAAX,aAA/B,CAAH,CAAJ;AAAA,WAAf,CAHK,CAAd;AAAA,SADJ,CAHG,CAAN;AAAA,OADW,CAAf;AADI,K;;;uBANKmmB,c,EAAc,6G,EAAA,qI;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;;;;;;;ACT3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AA8BO,QAAMG,kBAAkB,GAAgB;AAC3C1rB,QAAE,EAAE,IADuC;AAE3C4H,YAAM,EAAI,IAFiC;AAG3C+jB,YAAM,EAAI,KAHiC;AAI3CzY,aAAO,EAAG,KAJiC;AAK3CtO,WAAK,EAAK;AALiC,KAAxC;;AAQP,QAAMgnB,cAAc,GAAG,kEAAcF,kBAAd,EAEnB,uDAAG,mDAAH,EAAe,UAAClW,KAAD;AAAA,UAAUxV,EAAV,UAAUA,EAAV;AAAA,aAAoB,MAAD,OAAC,CAAD,kBAC3BwV,KAD2B,CAAC,EACvB;AACRtC,eAAO,EAAE,IADD;AAERlT,UAAE,EAAEA;AAFI,OADuB,CAApB;AAAA,KAAf,CAFmB,EAQnB,uDAAG,0DAAH,EAAsB,UAACwV,KAAD;AAAA,UAAU5N,MAAV,UAAUA,MAAV;AAAA,aAAwB,MAAD,OAAC,CAAD,kBACtC4N,KADsC,CAAC,EAClC;AACRtC,eAAO,EAAE,KADD;AAERyY,cAAM,EAAE,IAFA;AAGR/jB,cAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EAAKA,MAAL;AAHA,OADkC,CAAxB;AAAA,KAAtB,CARmB,EAcnB,uDAAG,wDAAH,EAAoB,UAAC4N,KAAD;AAAA,UAAU2V,OAAV,UAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACrC3V,KADqC,CAAC,EACjC;AACRtC,eAAO,EAAE,KADD;AAERyY,cAAM,EAAE,KAFA;AAGR/mB,aAAK,EAAE;AACHwQ,aAAG,EAAE+V,OAAO,CAAC/V,GADV;AAEH/O,cAAI,EAAE8kB,OAAO,CAAC9kB,IAFX;AAGHwlB,iBAAO,EAAEV,OAAO,CAACU;AAHd;AAHC,OADiC,CAAzB;AAAA,KAApB,CAdmB,EAwBnB,uDAAG,oDAAH,EAAgB,UAAArW,KAAK;AAAA,aAAIkW,kBAAJ;AAAA,KAArB,CAxBmB,EA0BnB,uDAAG,sDAAH,EAAkB,UAAClW,KAAD;AAAA,UAAU9N,MAAV,UAAUA,MAAV;AAAA,UAAkBD,WAAlB,UAAkBA,WAAlB;AAAA,UAA+BpB,IAA/B,UAA+BA,IAA/B;AAAA,aAA2C,MAAD,OAAC,CAAD,kBACrDmP,KADqD,CAAC,EACjD;AACRtC,eAAO,EAAE,IADD;AAERtL,cAAM,EAAE;AACJ5H,YAAE,EAAE,IADA;AAEJyH,qBAAW,EAAXA,WAFI;AAGJC,gBAAM,EAANA,MAHI;AAIJC,gBAAM,EAAE,IAJJ;AAKJC,gBAAM,EAAE,WALJ;AAMJC,gBAAM,EAAE,IAAIuB,IAAJ,EANJ;AAOJtB,iBAAO,EAAE,IAPL;AAQJC,qBAAW,EAAE,IART;AASJ1B,cAAI,EAAJA;AATI;AAFA,OADiD,CAA3C;AAAA,KAAlB,CA1BmB,EA0CnB,uDAAG,qDAAH,EAAiB,UAACmP,KAAD;AAAA,UAAU7N,MAAV,UAAUA,MAAV;AAAA,aAAwB,MAAD,OAAC,CAAD,kBACjC6N,KADiC,CAAC,EAC7B;AACRtC,eAAO,EAAE,IADD;AAERtL,cAAM,EAAE;AACJ5H,YAAE,EAAE,IADA;AAEJyH,qBAAW,EAAE,IAFT;AAGJC,gBAAM,EAAE,IAHJ;AAIJC,gBAAM,EAANA,MAJI;AAKJC,gBAAM,EAAE,MALJ;AAMJC,gBAAM,EAAE,IAAIuB,IAAJ,EANJ;AAOJtB,iBAAO,EAAE,IAPL;AAQJC,qBAAW,EAAE,IART;AASJ1B,cAAI,EAAE;AATF;AAFA,OAD6B,CAAxB;AAAA,KAAjB,CA1CmB,EA0DnB,uDAAG,sDAAH,EAAkB,UAACmP,KAAD;AAAA,UAAU5N,MAAV,UAAUA,MAAV;AAAA,aAAwB,MAAD,OAAC,CAAD,kBAClC4N,KADkC,CAAC,EAC9B;AACRtC,eAAO,EAAE,IADD;AAERtL,cAAM,EAANA;AAFQ,OAD8B,CAAxB;AAAA,KAAlB,CA1DmB,EAgEnB,uDAAG,6DAAH,EAAyB,UAAC4N,KAAD;AAAA,UAAU5N,MAAV,UAAUA,MAAV;AAAA,aAAwB,MAAD,OAAC,CAAD,kBACzC4N,KADyC,CAAC,EACrC;AACRtC,eAAO,EAAE,KADD;AAERyY,cAAM,EAAE,IAFA;AAGR/jB,cAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EAAKA,MAAL;AAHA,OADqC,CAAxB;AAAA,KAAzB,CAhEmB,EAsEnB,uDAAG,2DAAH,EAAuB,UAAC4N,KAAD;AAAA,UAAU2V,OAAV,UAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACxC3V,KADwC,CAAC,EACpC;AACRtC,eAAO,EAAE,KADD;AAERyY,cAAM,EAAE,KAFA;AAGR/mB,aAAK,EAAE;AACHwQ,aAAG,EAAE+V,OAAO,CAAC/V,GADV;AAEH/O,cAAI,EAAE8kB,OAAO,CAAC9kB,IAFX;AAGHwlB,iBAAO,EAAEV,OAAO,CAACU;AAHd;AAHC,OADoC,CAAzB;AAAA,KAAvB,CAtEmB,EAkFnB,uDAAG,qDAAH,EAAiB,UAACrW,KAAD;AAAA,UAAU5N,MAAV,UAAUA,MAAV;AAAA,aAAwB,MAAD,OAAC,CAAD,kBACjC4N,KADiC,CAAC,EAC7B;AACRtC,eAAO,EAAE,IADD;AAERtL,cAAM,EAANA;AAFQ,OAD6B,CAAxB;AAAA,KAAjB,CAlFmB,EAwFnB,uDAAG,4DAAH,EAAwB,UAAC4N,KAAD;AAAA,UAAU5N,MAAV,UAAUA,MAAV;AAAA,aAAwB,MAAD,OAAC,CAAD,kBACxC4N,KADwC,CAAC,EACpC;AACRtC,eAAO,EAAE,KADD;AAERyY,cAAM,EAAE,IAFA;AAGR/jB,cAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EAAKA,MAAL;AAHA,OADoC,CAAxB;AAAA,KAAxB,CAxFmB,EA8FnB,uDAAG,0DAAH,EAAsB,UAAC4N,KAAD;AAAA,UAAU2V,OAAV,UAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACvC3V,KADuC,CAAC,EACnC;AACRtC,eAAO,EAAE,KADD;AAERyY,cAAM,EAAE,KAFA;AAGR/mB,aAAK,EAAE;AACHwQ,aAAG,EAAE+V,OAAO,CAAC/V,GADV;AAEH/O,cAAI,EAAE8kB,OAAO,CAAC9kB,IAFX;AAGHwlB,iBAAO,EAAEV,OAAO,CAACU;AAHd;AAHC,OADmC,CAAzB;AAAA,KAAtB,CA9FmB,EA0GnB,uDAAG,qDAAH,EAAiB,UAACrW,KAAD;AAAA,UAAU5N,MAAV,UAAUA,MAAV;AAAA,aAAwB,MAAD,OAAC,CAAD,kBACjC4N,KADiC,CAAC,EAC7B;AACRtC,eAAO,EAAE,IADD;AAERtL,cAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EAAKA,MAAL;AAFA,OAD6B,CAAxB;AAAA,KAAjB,CA1GmB,EAgHnB,uDAAG,4DAAH,EAAwB,UAAC4N,KAAD;AAAA,UAAU5N,MAAV,UAAUA,MAAV;AAAA,aAAwB,MAAD,OAAC,CAAD,kBACxC4N,KADwC,CAAC,EACpC;AACRtC,eAAO,EAAE,KADD;AAERyY,cAAM,EAAE,IAFA;AAGR/jB,cAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EAAKA,MAAL;AAHA,OADoC,CAAxB;AAAA,KAAxB,CAhHmB,EAsHnB,uDAAG,0DAAH,EAAsB,UAAC4N,KAAD;AAAA,UAAU2V,OAAV,UAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACvC3V,KADuC,CAAC,EACnC;AACRtC,eAAO,EAAE,KADD;AAERyY,cAAM,EAAE,KAFA;AAGR/mB,aAAK,EAAE;AACHwQ,aAAG,EAAE+V,OAAO,CAAC/V,GADV;AAEH/O,cAAI,EAAE8kB,OAAO,CAAC9kB,IAFX;AAGHwlB,iBAAO,EAAEV,OAAO,CAACU;AAHd;AAHC,OADmC,CAAzB;AAAA,KAAtB,CAtHmB,CAAvB;;AAkIO,aAASC,aAAT,CAAuBtW,KAAvB,EAA8B0V,MAA9B,EAAsC;AACzC,aAAOU,cAAc,CAACpW,KAAD,EAAQ0V,MAAR,CAArB;AACH;;;;;;;;;;;;;;;;;AC1KD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeO,QAAMa,mBAAmB,GAAiB;AAC7CvlB,gBAAU,EAAE,IADiC;AAE7CuM,aAAO,EAAG,EAFmC;AAG7CO,YAAM,EAAG,SAHoC;AAI7CqY,YAAM,EAAI,KAJmC;AAK7CzY,aAAO,EAAG,KALmC;AAM7CtO,WAAK,EAAK;AANmC,KAA1C;;AASP,QAAMonB,eAAe,GAAG,kEAAcD,mBAAd,EAEpB,uDAAG,oDAAH,EAAgB,UAACvW,KAAD;AAAA,UAAUhP,UAAV,UAAUA,UAAV;AAAA,aAA4B,MAAD,OAAC,CAAD,kBACpCgP,KADoC,CAAC,EAChC;AACRtC,eAAO,EAAE,IADD;AAER1M,kBAAU,EAAEA;AAFJ,OADgC,CAA5B;AAAA,KAAhB,CAFoB,EAQpB,uDAAG,2DAAH,EAAuB,UAACgP,KAAD;AAAA,UAAUzC,OAAV,UAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACxCyC,KADwC,CAAC,EACpC;AACRtC,eAAO,EAAE,KADD;AAERyY,cAAM,EAAE,IAFA;AAGR5Y,eAAO,qBAAOA,OAAP;AAHC,OADoC,CAAzB;AAAA,KAAvB,CARoB,EAcpB,uDAAG,yDAAH,EAAqB,UAACyC,KAAD;AAAA,UAAU2V,OAAV,UAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACtC3V,KADsC,CAAC,EAClC;AACRtC,eAAO,EAAE,KADD;AAERyY,cAAM,EAAE,KAFA;AAGR/mB,aAAK,EAAE;AACHwQ,aAAG,EAAE+V,OAAO,CAAC/V,GADV;AAEH/O,cAAI,EAAE8kB,OAAO,CAAC9kB,IAFX;AAGHwlB,iBAAO,EAAEV,OAAO,CAACU;AAHd;AAHC,OADkC,CAAzB;AAAA,KAArB,CAdoB,EAwBpB,uDAAG,wDAAH,EAAoB,UAACrW,KAAD;AAAA,UAAUlC,MAAV,UAAUA,MAAV;AAAA,aAAwB,MAAD,OAAC,CAAD,kBACpCkC,KADoC,CAAC,EAChC;AACRmW,cAAM,EAAE,IADA;AAERrY,cAAM,EAANA;AAFQ,OADgC,CAAxB;AAAA,KAApB,CAxBoB,CAAxB;;AAgCO,aAAS2Y,cAAT,CAAwBzW,KAAxB,EAA+B0V,MAA/B,EAAuC;AAC1C,aAAOc,eAAe,CAACxW,KAAD,EAAQ0V,MAAR,CAAtB;AACH;;;;;;;;;;;;;;;;;AC1DD;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMgB,WAAW,GAAG;AACzBtoB,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBuoB,eAAzB,CAAyC,yDAAzC,WACS,UAAA/mB,GAAG;AAAA,aAAIT,OAAO,CAACC,KAAR,CAAcQ,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./pages/pages.module\": \"./src/app/pages/pages.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PagesComponent } from './pages/pages.component';\nimport { LoginComponent } from './login/login.component';\nimport { NopageFoundComponent } from './shared/nopage-found/nopage-found.component';\nimport { AuthGuard } from './guards/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PagesComponent,\n    children: [{\n      path: '',\n      loadChildren: './pages/pages.module#PagesModule',\n      canActivate: [AuthGuard]\n    }]\n  },\n    { path: 'login', component: LoginComponent},\n    { path: '**', component: NopageFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n// import { AuthService } from '../../core/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'acquisitons';\n  userForm: FormGroup;\n  formErrors = {\n    email: '',\n    password: ''\n  };\n  validationMessages = {\n    email: {\n      required: '请输入您的邮箱',\n      email: '请输入正确的邮箱'\n    },\n    password: {\n      required: '请输入您的密码',\n      pattern: '密码中必须包含数字和字母',\n      minlength: '请输入大于4个字符',\n      maxlength: '请输入小于25个字符'\n    }\n  };\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.userForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: [\n        '',\n        [\n          Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n          Validators.minLength(6),\n          Validators.maxLength(25)\n        ]\n      ]\n    });\n\n    this.userForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged();\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.userForm) {\n      return;\n    }\n    const form = this.userForm;\n    for (const field in this.formErrors) {\n      if (Object.prototype.hasOwnProperty.call(this.formErrors, field)) {\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (Object.prototype.hasOwnProperty.call(control.errors, key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n  signInWithGoogle() {\n    // this.auth.googleLogin().then(() => this.afterSignIn());\n  }\n\n  signInWithGithub() {\n    // this.auth.githubLogin().then(() => this.afterSignIn());\n  }\n\n  signInWithEmail() {\n    // this.auth\n    //   .emailLogin(this.userForm.value['email'], this.userForm.value['password'])\n    //   .catch(error => console.log('邮箱登录出错：', error));\n  }\n\n  signInAnonymously() {\n    // this.auth.anonymousLogin().then(() => this.afterSignIn());\n  }\n\n  login() {\n    this.signInWithEmail();\n  }\n\n  private afterSignIn() {\n    this.router.navigate(['/']);\n  }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PagesModule } from './pages/pages.module';\nimport { LoginComponent } from './login/login.component';\n\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nimport {FormsModule} from '@angular/forms';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { AuthGuard } from './guards/auth.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\n\n\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\n\n\nimport { appReducers } from './store/app.reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { EffectsArray } from './store/effects/index';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    PagesModule,\n    HttpClientModule,\n    FormsModule,\n    MatCardModule,\n    MatTabsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    ReactiveFormsModule,\n\n    StoreModule.forRoot(appReducers),\n    EffectsModule.forRoot(EffectsArray),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, // Retains last 25 states\n      logOnly: environment.production, // Restrict extension to log-only mode\n    }),\n  ],\n  providers: [\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    },\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UploadFileService } from '../../services/upload-file/upload-file.service';\nimport { ModalFileUploadService } from './modal-file-upload.service';\nimport { SnackService } from 'src/app/services/snack.service';\n\n\n\n@Component({\n  selector: 'app-modal-file-upload',\n  templateUrl: './modal-file-upload.component.html',\n  styles: []\n})\nexport class ModalFileUploadComponent implements OnInit {\n\n  fileUpload: File;\n  iconFile = '../assets/images/icon/file.png';\n\n  constructor(\n    public uploadFileService: UploadFileService,\n    public modalUploadFileService: ModalFileUploadService,\n    public snackService: SnackService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  closeModal() {\n    this.iconFile = '../assets/images/icon/file.png';\n    this.fileUpload = null;\n    this.modalUploadFileService.hideModal();\n\n  }\n\n  selectFile( file: File ) {\n\n    //  console.log('archivo', file);\n\n     if ( !file) {\n      alert('Solo puede subir archivos PDF, DOC o EXCEL');\n      this.fileUpload = null;\n      return;\n    }\n\n     if (file.type.indexOf('application/pdf') < 0 ) {\n      console.error('No se pudo cargar el archivo porque no es un tipo archivo valido ');\n      this.snackService.warn(\"No se pudo cargar el archivo porque no es un tipo archivo valido\");\n      this.fileUpload = null;\n      return;\n    }\n\n     this.fileUpload = file;\n\n     if (file.type.indexOf('pdf') > 0) {\n      this.iconFile = '../assets/images/icon/pdf.png';\n     }\n\n\n  }\n\n  uploadFile() {\n\n    this.uploadFileService.uploadArch(this.fileUpload, this.modalUploadFileService.id)\n            .then( resp => {\n              // console.log( resp );\n              this.modalUploadFileService.modalNotification.emit( resp );\n              this.snackService.success(\"El archivo se subio correctamente\");\n              this.closeModal();\n\n            })\n            .catch( err => {\n              console.log( 'Error en la carga del archivo ');\n              this.snackService.warn(\"Error al cargar el archivo\");\n            });\n  }\n\n}\n","<h1 mat-dialog-title>Subir un archivo</h1>\n\n<div mat-dialog-content>\n\n  <img *ngIf=\"iconFile\" [src]=\"iconFile\" class=\"w150\" alt=\"\">\n  <input (change)=\"selectFile($event.target.files[0])\" type=\"file\">\n\n</div>\n<div mat-dialog-actions>\n  <button (click)=\"uploadFile()\"  mat-button mat-dialog-close > Subir Archivo</button>\n  <button (click)=\"closeModal()\" mat-button mat-dialog-close >Cerrar</button>\n</div>\n","import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalFileUploadService {\n  public type: string;\n  public id: string;\n  public modalNotification = new EventEmitter<any>();\n  \n  constructor() { }\n\n  hideModal() {\n    this.id = null;\n    this.type = null;\n   }\n   showModal( type: string, id: string ) {\n    this.id = id;\n    this.type = type;\n\n   }\n   \n}\n","export const GLOBAL = {\n    uri: 'http://10.245.30.83:3000/api'\n    // uri: 'http://localhost:3000/api'\n  };\n\nexport const routeMap = [\n  {\n    office: 'Unidad Solicitante',\n    routes: [\n              { title: 'Empresas', path: 'companies' },\n              { title: 'Oficinas', path: 'offices' },\n              { title: 'usuarios', path: 'users' },\n              { title: 'procedimientos', path: 'procedures' }\n    ]\n  },\n  {\n    office: 'Unidad Solicitante',\n    routes: [\n              { title: 'Solicitud de adquisición', path: 'acquisitionRequests' },\n              { title: 'Especificaciones técnicas', path: 'technicalReports' },\n              { title: 'Evaluaciones técnicas', path: 'technicalEvaluations' },\n\n    ]\n  },\n  {\n    office: 'Finanzas',\n    routes: [\n              { title: 'Certificaciones presupuestarias', path: 'budgetCertifications' },\n              { title: 'Inicios de proceso', path: 'processStarts' },\n    ]\n  },\n  {\n    office: 'Adquisiciones',\n    routes: [\n              { title: 'Comparación de propuestas', path: 'proposalComparisons' },\n              { title: 'Evaluación de propuestas', path: 'proposalEvaluations' },\n\n    ]\n  },\n  {\n    office: 'Gerencia general',\n    routes: [\n              { title: 'Ordenes de compra', path: 'purchaseOrders' },\n    ]\n  },\n  {\n    office: 'Jurídica',\n    routes: [\n              { title: 'Contratos legales', path: 'legalContracts' },\n\n    ]\n  },\n]\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor( private authService: AuthService, private router: Router) {\n\n  }\n\n  canActivate(): boolean{\n    if ( this.authService.loggedIn() ) {\n      return true;\n    }\n\n    this.router.navigate(['/login']);\n    return false;\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  title = 'demoApp';\n  email: string;\n  password: string;\n  remail: string;\n  rpassword: string;\n  rcpassword: string;\n  user = {\n    name: 'cosa',\n    lastname: 'cosa',\n    email: '',\n    password: '',\n    role: 'USER_ROLE',\n    positionId: '3becc621-690c-4f32-8269-9dfbc2633c2f'\n  };\n  loginUser = {\n    email: '',\n    password: '',\n  };\n\n  constructor(\n              private snackBar: MatSnackBar,\n              private authService: AuthService,\n              private router: Router\n            ) { }\n\n  ngOnInit(): void {\n  }\n  register() {\n\n    this.authService.signUp(this.user)\n        .subscribe(\n          res => {\n            // console.log(res);\n            localStorage.setItem('token', res.Bearer);\n            localStorage.setItem('user', res.user);\n            this.snackBar.open('Se registro correctamente al usuario', 'Registro', { duration: 1000 });\n            this.router.navigate(['/dashboard']);\n          },\n          err => {\n            console.log(err);\n          }\n        );\n\n      }\n  login() {\n\n    this.authService.signIn(this.loginUser)\n        .subscribe(\n          res => {\n            // console.log('respuesta ', res);\n            localStorage.setItem('token', res.Bearer);\n            localStorage.setItem('user', JSON.stringify(res.user));\n            this.snackBar.open('Credenciales correctos', 'Ingresar', { duration: 1000 });\n            this.router.navigate(['/dashboard']);\n          }, err => {\n            console.log(err);\n            this.snackBar.open('Login error', 'ERROR', {duration: 1000});\n          }\n        );\n  }\n}\n","<div class=\"greenBack\" >\n<div class=\"center-content margin-top\">\n  <img src=\"./../../assets/images/logoEAB.png\" alt=\"\" width=\"300\" >\n</div>\n<div class=\"center-content\">\n   \n    <mat-card class=\"example-card\">\n      <mat-card-header>\n        <mat-card-title>Autentificación</mat-card-title>\n        <mat-card-subtitle>Sistema de Adquisiciones</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        \n            <mat-form-field class=\"example-full-width\">\n              <mat-label>Email</mat-label>\n              <input type=\"email\" matInput placeholder=\"Email\" value=\"\" [(ngModel)]=\"loginUser.email\">\n              <mat-icon matSuffix>email</mat-icon>\n            </mat-form-field>\n  \n            <mat-form-field class=\"example-full-width\">\n              <mat-label>Password</mat-label>\n              <input type=\"password\" matInput placeholder=\"Password\" [(ngModel)]=\"loginUser.password\">\n              <mat-icon matSuffix color=\"white\">vpn_key</mat-icon>\n            </mat-form-field>\n            <button mat-button color=\"primary\" (click)=\"login()\">Ingresar</button>\n          \n  \n      </mat-card-content>\n  \n    </mat-card>\n  </div>\n</div>","\nexport class Procedure{\n  constructor(\n    public id: string,\n    public positionId: string,\n    public procedureName: string,\n    public order: number,\n\n  ){}\n}\n","import { Timestamp } from 'rxjs/internal/operators/timestamp';\n\nexport class Status{\n\n  static fromState({id, procedureId, userId, formId, status, dateAt, current, codeRequest, name }): Status {\n      return new Status(id, procedureId, userId, formId, status, dateAt, current, codeRequest, name);\n  }\n\n  constructor(\n    public id: string,\n    public procedureId: string,\n    public userId: string,\n    public formId: string,\n    public status: string,\n    public dateAt: Date,\n    public current: boolean,\n    public codeRequest: string,\n    public name: string,\n  ){}\n}\n","\nexport class User {\n\n    static UsersFromJson( obj: Object ) {\n        return new User(\n            obj['id'],\n            obj['name'],\n            obj['lastname'],\n            obj['email'],\n            obj['password'],\n            obj['role'],\n            obj['positionId'],\n            );\n    }\n\n\n    constructor(\n                public id: string,\n                public name: string,\n                public lastname: string,\n                public email: string,\n                public password: string,\n                public role: string,\n                public positionId: string,\n\n    ) {}\n\n    get fullName() {\n        return `${ this.name } ${ this.lastname }`;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { AcquisitionRequest } from 'src/app/models/acquisitionRequest.model';\nimport { AcquisitionRequestService } from 'src/app/services/acquisitionRequest/acquisition-request.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProductComponent } from '../product/product.component';\nimport { AdmConditionComponent } from '../adm-condition/adm-condition.component';\nimport { Product } from 'src/app/models/product.model';\nimport { AdmCondition } from 'src/app/models/admCondition.model';\nimport { ProductService } from 'src/app/services/product/product.service';\nimport { AdmConditionService } from 'src/app/services/admCondition/adm-condition.service';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { StatusService } from '../../services/status/status.service';\nimport { Status } from '../../models/status.model';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\nimport { User } from '../../models/user';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-acquisition-request-form',\n  templateUrl: './acquisition-request-form.component.html',\n  styleUrls: ['./acquisition-request-form.component.scss']\n})\nexport class AcquisitionRequestFormComponent implements OnInit {\n\n\n  public acquisitionRequest: AcquisitionRequest; // = new AcquisitionRequest(\"\",\"\",\"\",null,\"\",null,\"\",\"\",\"\",\"\",\"\");\n  public acquisitionRequestTest: AcquisitionRequest;\n  public acquisitionRequestForm: FormGroup;\n  currentStatus: Status;\n  currentUser: User;\n  // id: string = 'new';\n  // productDialogRef: MatDialogRef<ProductComponent>;\n  // admConditionDialogRef: MatDialogRef<AdmConditionComponent>;\n  products: Product[] = [];\n  productsTest: Product[] = [];\n  admConditions: AdmCondition[] = [];\n  displayedProducts: string[] = ['name', 'description', 'quantity', 'price','total', 'edit', 'delete'];\n  displayedAdmConditions: string[] = ['priority', 'type', 'warranty', 'edit', 'delete'];\n  constructor(\n    public _acquisitionRequest: AcquisitionRequestService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private dialog: MatDialog,\n    public _product: ProductService,\n    public _admCondition: AdmConditionService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n\n\n    // this.activatedRoute.params\n    // .subscribe( ({ id }) => this.getAcquisitionRequest( id ) );\n\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n\n    this.acquisitionRequestForm = this.formBuilder.group({\n          code: [\"GAF-08-01\"],\n          version: [\"03\"],\n          validity: [new Date('2/13/2019')],\n          numRequest: [null, Validators.required],\n          requestDate: [null, Validators.required],\n          nPac: [null, Validators.required],\n          place: [null, Validators.required],\n          question1: [null, Validators.required],\n          question2: [null, [Validators.required, Validators.minLength(10)]],\n          question3: [null, [Validators.required, Validators.minLength(10)]],\n          coin: [null, Validators.required],\n          title: [null, Validators.required]\n        });\n\n\n\n    this.store.select('status').subscribe(({ status }) => {\n          if (status != null) {\n            // console.log('el estado actual es ', status);\n            this.currentStatus = status;\n            if ( status.formId != null) {\n              this.getAcquisitionRequest( status.formId);\n            } else {\n              this.getAcquisitionRequest( 'new');\n            }\n          }\n        });\n\n  }\n\n  resetForm(formGroup: FormGroup) {\n    let control: AbstractControl = null;\n    formGroup.reset();\n    formGroup.markAsUntouched();\n    Object.keys(formGroup.controls).forEach((name) => {\n      control = formGroup.controls[name];\n      control.setErrors(null);\n    });\n    formGroup.setErrors({ invalid: true });\n  }\n\n  getAcquisitionRequest(id: string){\n    if ( id === 'new'){\n\n      this.acquisitionRequest = null;\n      this.products = null;\n      this.admConditions = null;\n      this.resetForm(this.acquisitionRequestForm);\n        // this.resetForm();\n        // this.acquisitionRequestForm.reset(this.acquisitionRequest);\n        // const {code, version, validity, numRequest, requestDate, nPac, place, question1, question2, question3} = this.acquisitionRequest;\n        // this.acquisitionRequestForm.setValue({code, version, validity, numRequest, requestDate, nPac, place, question1, question2, question3});\n      return;\n    }else {\n      this._acquisitionRequest.getACQRequest(id)\n      .subscribe(acquisitionRequest => {\n        // if(!acquisitionRequest){\n        //   return this.router.navigateByUrl(`/acquisitionRequests`);\n        // }\n        if (acquisitionRequest) {\n          const { admConditions, code, id, nPac, numRequest, place, products, question1, question2, question3, requestDate, validity, version, coin,title} = acquisitionRequest;\n          this.acquisitionRequest = acquisitionRequest;\n          this.products = acquisitionRequest.products;\n          this.admConditions = acquisitionRequest.admConditions;\n          this.acquisitionRequestForm.setValue({code, version, validity, numRequest, requestDate, nPac, place, question1, question2, question3, coin, title});\n        }\n      });\n    }\n\n\n  }\n\n\n  save() {\n    // this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    const {code} = this.acquisitionRequestForm.value;\n\n    if ( this.acquisitionRequest ) {\n      // update\n      const data = {\n        ...this.acquisitionRequestForm.value,\n        id: this.acquisitionRequest.id\n      };\n      this._acquisitionRequest.updateAcquisitionRequest( data )\n        .subscribe( (resp: any) => {\n\n          if (this.currentStatus.procedureId) {\n            const std: Status = Status.fromState( this.currentStatus );\n            std.userId = this.currentUser.id;\n            std.status = 'terminado';\n              // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n          } else {\n            this.router.navigateByUrl('/acquisitionRequests');\n          }\n          // console.log('ssdasd ', resp.acquisitionRequest[0]);\n\n          this.snackService.success('Se ha actualizado correctamente la solicitud de adquisicion ' + `${ code }`);\n\n        });\n\n    } else {\n      // create\n\n      this._acquisitionRequest.createAcquisitionRequest( this.acquisitionRequestForm.value )\n          .subscribe( (resp: any) => {\n            // console.log('solicitud guardada ', resp.acquisitionRequest.id );\n\n            const std: Status = Status.fromState( this.currentStatus );\n            std.formId = resp.acquisitionRequest.id;\n            std.codeRequest = resp.acquisitionRequest.id;\n            std.userId = this.currentUser.id;\n            std.status = 'pendiente';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.initialStatus({ status: std }));\n\n            // this._statusService.addStatus(resp.acquisitionRequest.id, resp.acquisitionRequest.id, 'Primer estado');\n            this.getAcquisitionRequest(resp.acquisitionRequest.id);\n            this.snackService.success('Se ha creado correctamente la solicitud de adquisicion ' + `${code }`);\n\n            // this.router.navigateByUrl(`/acquisitionRequest/${ resp.acquisitionRequest.id }`)\n            // this.router.navigateByUrl(`/`);\n        });\n    }\n\n\n\n  }\n\n\n  delete( id: string ) {\n\n    this._acquisitionRequest.deleteAcquisitionRequest( id )\n            .subscribe ( () =>\n            { this._acquisitionRequest.getAcquisitionRequests();\n              this.snackService.warn('Se ha borrado correctamente la solicitud de adquisicion ');\n            });\n\n  }\n\n  // product\n  getProducts(){\n    this._product.getProducts()\n      .subscribe(products => this.products = products);\n  }\n  openAddProductDialog(){\n    const productDialogRef = this.dialog.open(ProductComponent, {\n      data: { requestId: this.acquisitionRequest.id,\n              productId: 'new'\n      }\n    });\n    productDialogRef.afterClosed().subscribe( result => {\n      this.getAcquisitionRequest(this.acquisitionRequest.id);\n    });\n\n  }\n  openUpdateProductDialog(id: string){\n    const productDialogRef = this.dialog.open(ProductComponent, {\n      data: { productId: id}\n    });\n    productDialogRef.afterClosed().subscribe( result => {\n      this.getAcquisitionRequest(this.acquisitionRequest.id);\n    });\n  }\n  deleteProduct( id: string ) {\n\n    this._product.deleteProduct( id )\n            .subscribe ( () =>\n            { this._product.getProducts();\n              this.snackService.warn('Se ha borrado correctamente el Item ');\n              this.getAcquisitionRequest(this.acquisitionRequest.id);\n            });\n\n  }\n\n  // AdmCondition\n  getAdmConditions(){\n    this._admCondition.getAdmConditions()\n      .subscribe(admConditions => this.admConditions = admConditions);\n  }\n  openAddAdmConditionDialog(){\n    const admConditionDialogRef = this.dialog.open(AdmConditionComponent, {\n      data: { requestId: this.acquisitionRequest.id,\n              admConditionId: 'new'\n      }\n    });\n    admConditionDialogRef.afterClosed().subscribe( result => {\n      this.getAcquisitionRequest(this.acquisitionRequest.id);\n      if (this.currentStatus.procedureId) {\n        const std: Status = Status.fromState( this.currentStatus );\n        std.userId = this.currentUser.id;\n        std.status = 'terminado';\n          // console.log('current status ', std);\n        this.store.dispatch( actions.updateStatus({ status: std }));\n      } else {\n        this.router.navigateByUrl('/acquisitionRequests');\n      }\n\n\n    });\n  }\n\n  openUpdateAdmConditionDialog(id: string){\n    const admConditionDialogRef = this.dialog.open(AdmConditionComponent, {\n      data: { admConditionId: id}\n    });\n    admConditionDialogRef.afterClosed().subscribe( result => {\n      this.getAcquisitionRequest(this.acquisitionRequest.id);\n    });\n  }\n\n  deleteAdmCondition( id: string ) {\n\n    this._admCondition.deleteAdmCondition( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente la Condicion Administrativa ');\n              this.getAcquisitionRequest(this.acquisitionRequest.id);\n            });\n\n  }\n\n\n\n\n\n}\n","\n\n<div class=\"content\">\n  <!--Form Acquisition Request-->\n\n  <mat-card>\n    <mat-card-title>Solicitud de Adquisicion</mat-card-title>\n\n    <mat-card-content>\n      <form [formGroup]=\"acquisitionRequestForm\" (submit)=\"save()\">\n        <div class=\"form\" >\n\n          <div class=\"formLeft\" >\n\n            <mat-form-field>\n              <input matInput placeholder=\"Codigo\" formControlName=\"code\" />\n              <mat-error>Este campo es obligatorio.</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Vigencia\"\n                [matDatepicker]=\"picker1\"\n                formControlName=\"validity\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker1\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #picker1></mat-datepicker>\n              <mat-error>Este campo es obligatorio.</mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Fecha de Solicitud\"\n                [matDatepicker]=\"picker\"\n                formControlName=\"requestDate\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n              <mat-error>Este campo es obligatorio.</mat-error>\n            </mat-form-field>\n            \n            <mat-form-field>\n              <input matInput placeholder=\"Lugar\" formControlName=\"place\" />\n                <mat-error>Este campo es obligatorio.</mat-error>\n              </mat-form-field>\n\n          </div>\n          <div class=\"formRight\">\n            <mat-form-field>\n              <input matInput placeholder=\"Version\" formControlName=\"version\" />\n              <mat-error>Este campo es obligatorio.</mat-error>\n            </mat-form-field>\n  \n              <mat-form-field>\n                <input\n                  matInput\n                  placeholder=\"N de Solicitud\"\n                  formControlName=\"numRequest\"\n                />\n                <mat-error>Este campo es obligatorio.</mat-error>\n              </mat-form-field>\n\n              <mat-form-field>\n                <input matInput placeholder=\"N de Pac\" formControlName=\"nPac\" />\n                <mat-error>Este campo es obligatorio.</mat-error>\n              </mat-form-field>\n              \n              <mat-form-field>\n                <mat-select formControlName=\"coin\" placeholder=\"Moneda\">\n                  <mat-option value=\"Bolivianos\" >Bolivianos</mat-option>\n                  <mat-option value=\"Dolares\" >Dolares</mat-option>\n                  <mat-option value=\"Euros\" >Euros</mat-option>\n                </mat-select>\n                <mat-error>\n                  Este campo es obligatorio.\n                </mat-error>\n              </mat-form-field>\n\n          </div>\n\n        </div>\n        \n    \n      <mat-form-field class=\"full-width\">\n        <textarea\n          matInput\n          placeholder=\"Titulo de la adquisicion\"\n          formControlName=\"title\"\n        ></textarea>\n        <mat-error>Este campo es obligatorio.</mat-error>\n      </mat-form-field>\n      <br />\n\n      <mat-form-field class=\"full-width\">\n        <textarea\n          matInput\n          placeholder=\"¿Para que es necesaria la adquisición del bien o bienes?\"\n          formControlName=\"question1\"\n        ></textarea>\n        <mat-error>Este campo es obligatorio.</mat-error>\n      </mat-form-field>\n      <br />\n      <mat-form-field class=\"full-width\">\n        <textarea\n          matInput\n          placeholder=\"¿En que Oficina / Planta / Proyecto se usará el bien o\n        bienes?\"\n          formControlName=\"question2\"\n        ></textarea>\n        <mat-error>Este campo es obligatorio.</mat-error>\n      </mat-form-field>\n      <br />\n      <mat-form-field class=\"full-width\">\n        <textarea\n          matInput\n          placeholder=\"¿Quién o quiénes harán uso del bien o bienes?\"\n          formControlName=\"question3\"\n        ></textarea>\n        <mat-error>Este campo es obligatorio.</mat-error>\n      </mat-form-field>\n      <br />\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        class=\"button\"\n        [disabled]=\"!acquisitionRequestForm.valid\"\n      >\n        Guardar\n      </button>\n\n\n\n      </form>\n    </mat-card-content>\n  </mat-card>\n  <aside *ngIf=\"acquisitionRequest\">\n    <mat-card-title>\n      <button mat-raised-button class=\"create\" (click)=\"openAddProductDialog()\">\n        <mat-icon>add</mat-icon>Item\n      </button>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"openAddAdmConditionDialog()\"\n        *ngIf=\"admConditions.length<1\"\n      >\n        <mat-icon>add</mat-icon>C. Administrativa\n      </button>\n    </mat-card-title>\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Items</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"products\" class=\"mat-elevation-z8\">\n\n\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Item</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef>Descripcion</th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element.description }}\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef>Cantidad</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.quantity }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef>Precio Unitario</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.price }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"total\">\n            <th mat-header-cell *matHeaderCellDef>Total</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.price*element.quantity }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateProductDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <!-- Delete Column -->\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteProduct(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedProducts\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedProducts\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n\n    <br />\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Condiciones Administrativas</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"admConditions\" class=\"mat-elevation-z8\">\n          <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n          <!-- Position Column -->\n          <ng-container matColumnDef=\"priority\">\n            <th mat-header-cell *matHeaderCellDef>Prioridad</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.priority }}</td>\n          </ng-container>\n\n          <!-- Name Column -->\n          <ng-container matColumnDef=\"type\">\n            <th mat-header-cell *matHeaderCellDef>Modelo/Tipo/Procedencia</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n          </ng-container>\n\n          <!-- Weight Column -->\n          <ng-container matColumnDef=\"warranty\">\n            <th mat-header-cell *matHeaderCellDef>Garantia</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.warranty }}</td>\n          </ng-container>\n\n          <!-- Edit Column -->\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateAdmConditionDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <!-- Delete Column -->\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteAdmCondition(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedAdmConditions\"></tr>\n          <tr\n            mat-row\n            *matRowDef=\"let row; columns: displayedAdmConditions\"\n          ></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </aside>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { AcquisitionRequest } from 'src/app/models/acquisitionRequest.model';\nimport { AcquisitionRequestService } from 'src/app/services/acquisitionRequest/acquisition-request.service';\nimport { Product } from 'src/app/models/product.model';\nimport { AdmCondition } from 'src/app/models/admCondition.model';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { Status } from '../../models/status.model';\nimport { StatusService } from '../../services/status/status.service';\nimport { IStatus } from '../../interfaces/interfaces';\n\n@Component({\n  selector: 'app-acquisition-request-view',\n  templateUrl: './acquisition-request-view.component.html',\n  styles: ['']\n})\nexport class AcquisitionRequestViewComponent implements OnInit {\n\n  // @Input() id: string;\n  currentStatus: Status;\n  tracer: IStatus [] = [];\n  acquisitionRequest: AcquisitionRequest;\n  products: Product;\n  admConditions: AdmCondition;\n  panelOpenState = true;\n  displayedProducts: string[] = ['name', 'description', 'quantity', 'price'];\n  displayedAdmConditions: string[] = ['priority', 'type', 'warranty'];\n\n  constructor(\n    public acquisitionRequestService: AcquisitionRequestService,\n    private statusService: StatusService,\n    public router: Router,\n    private store: Store<AppState>\n  ) {}\n\n  ngOnInit(): void {\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status.codeRequest);\n        this.currentStatus = status;\n        if(status.codeRequest) {\n          this.getAcquisitionRequest(status.codeRequest);\n        }\n        // this.getStatus(status.codeRequest);\n      }\n    });\n    // console.log('ID ingresado', this.id);\n\n  }\n\n  getAcquisitionRequest(id: string){\n    this.acquisitionRequestService.getACQRequest(id)\n      .subscribe(acquisitionRequest => {\n        if (!acquisitionRequest){\n          return;\n        }\n        this.acquisitionRequest = acquisitionRequest;\n        this.products = acquisitionRequest.products;\n        this.admConditions = acquisitionRequest.admConditions;\n\n      });\n  }\n\n\n  getStatus(codeRequest: string) {\n    if (!codeRequest) { return; }\n    this.statusService.getStatusByRequest(codeRequest).subscribe( tracer => {\n      // console.log('traza ', tracer);\n      this.tracer = tracer;\n    } );\n  }\n\n\n}\n","\n<div class=\"container\" >\n\n  <div class=\"panelLeft30\" >\n \n    <mat-card *ngIf=\"acquisitionRequest\">\n    \n      <div class=\"form\" >\n        <div class=\"formLeft\" >\n\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Codigo\"\n              value=\"{{ acquisitionRequest.code }}\"\n            />\n          </mat-form-field>\n    \n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Version\"\n              value=\"{{ acquisitionRequest.version }}\"\n            />\n          </mat-form-field>\n    \n         \n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Vigencia\"\n                [matDatepicker]=\"picker1\"\n                value=\"{{ acquisitionRequest.validity }}\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker1\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #picker1></mat-datepicker>\n            </mat-form-field>\n\n        </div>\n        <div class=\"formRight\" >\n\n\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"N de Solicitud\"\n              value=\"{{ acquisitionRequest.numRequest }}\"\n            />\n          </mat-form-field>\n      \n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Fecha de Solicitud\"\n              [matDatepicker]=\"picker\"\n              value=\"{{ acquisitionRequest.requestDate }}\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n  \n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"N de Pac\"\n              value=\"{{ acquisitionRequest.nPac }}\"\n            />\n          </mat-form-field>\n\n        </div>\n      </div>\n\n\n       \n    <div class=\"formCenter\" >\n\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"Lugar\"\n          value=\"{{ acquisitionRequest.place }}\"\n        />\n      </mat-form-field>\n      <mat-form-field>\n        <textarea\n          matInput\n          placeholder=\"¿Para que es necesaria la adquisición del bien o bienes?\"\n          value=\"{{ acquisitionRequest.question1 }}\"\n        ></textarea>\n      </mat-form-field>\n      <br />\n      <mat-form-field>\n        <textarea\n          matInput\n          placeholder=\"¿En que Oficina / Planta / Proyecto se usará el bien o bienes?\"\n          value=\"{{ acquisitionRequest.question2 }}\"\n        ></textarea>\n      </mat-form-field>\n      <br />\n      <mat-form-field>\n        <textarea\n          matInput\n          placeholder=\"¿Quién o quiénes harán uso del bien o bienes?\"\n          value=\"{{ acquisitionRequest.question3 }}\"\n        ></textarea>\n      </mat-form-field>\n  \n\n    </div>\n\n  </mat-card>\n\n  </div>\n\n\n\n  <div class=\"panelRight60\" >\n    <h3>Items</h3>\n    <table mat-table [dataSource]=\"products\" class=\"mat-elevation-z8\">\n      <!--- Note that these columns can be defined in any order.\n    The actual rendered columns are set as a property on the row definition\" -->\n\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Nombre</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef>Descripcion</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.description }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"quantity\">\n        <th mat-header-cell *matHeaderCellDef>Cantidad</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.quantity }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef>Precio</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.price }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedProducts\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedProducts\"></tr>\n    </table>\n\n    <br>\n    <h3>Condiciones Administrativas</h3>\n    <table mat-table [dataSource]=\"admConditions\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"priority\">\n        <th mat-header-cell *matHeaderCellDef>Prioridad</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.priority }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"type\">\n        <th mat-header-cell *matHeaderCellDef>Tipo</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"warranty\">\n        <th mat-header-cell *matHeaderCellDef>Garantia</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.warranty }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedAdmConditions\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedAdmConditions\"></tr>\n    </table>\n\n  </div>\n\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {AcquisitionRequest} from '../../models/acquisitionRequest.model';\nimport { AcquisitionRequestService } from 'src/app/services/acquisitionRequest/acquisition-request.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { changeFormId } from '../../store/actions/status.actions';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-acquisition-request',\n  templateUrl: './acquisition-request.component.html',\n  styleUrls: ['./acquisition-request.component.scss']\n})\nexport class AcquisitionRequestComponent implements OnInit {\n\n  acquisitionRequests: AcquisitionRequest[] = [];\n  displayedColumns: string[] = ['code', 'version', 'validity', 'numRequest', 'edit', 'delete'];\n  constructor(\n    public _acquisitionRequest: AcquisitionRequestService,\n    public snackService: SnackService,\n    private store: Store<AppState>,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.getAcquisitionRequests();\n  }\n\n  getAcquisitionRequests(){\n    \n    this._acquisitionRequest.getAcquisitionRequests()\n      .subscribe(acquisitionRequests => this.acquisitionRequests = acquisitionRequests);\n      // console.log('entro', this.acquisitionRequests);\n  }\n\n  edit(id: string) {\n    this.store.dispatch( changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/acquisitionRequest/edit')\n  }\n  delete( id: string ) {\n\n    this._acquisitionRequest.deleteAcquisitionRequest( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente la Solicitud de Adquisicion ');\n              this.getAcquisitionRequests();\n            });\n\n  }\n\n\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Solicitudes de adquisición</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Solicitudes de adquisición</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/procedure/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva solicitud\n  </button> -->\n</div>\n\n<table mat-table [dataSource]=\"acquisitionRequests\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef> Codigo </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"version\">\n    <th mat-header-cell *matHeaderCellDef> Version </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.version}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"validity\">\n    <th mat-header-cell *matHeaderCellDef> Vigencia </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.validity}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"numRequest\">\n    <th mat-header-cell *matHeaderCellDef> N Solicitud </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.numRequest}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button  (click)=\"edit(element.id)\"  class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>borrar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { AdmCondition } from 'src/app/models/admCondition.model';\nimport { AdmConditionService } from 'src/app/services/admCondition/adm-condition.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-adm-condition',\n  templateUrl: './adm-condition.component.html',\n  styleUrls: ['./adm-condition.component.scss']\n})\nexport class AdmConditionComponent implements OnInit {\n\n    admCondition: AdmCondition; // = new AdmCondition(\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\");\n    public admConditionForm: FormGroup;\n    requestId: string;\n    admConditionId: string;\n  constructor(\n    public _admCondition: AdmConditionService,\n    public router: Router,\n    public activatedRoute: ActivatedRoute,\n    private admConditionFormBuilder : FormBuilder,\n    private dialogRef: MatDialogRef<AdmConditionComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AdmConditionComponent,\n    public snackService: SnackService,\n  ) {   }\n\n  ngOnInit(): void {\n    if(this.data.admConditionId !== 'new'){\n      this.getAdmCondition(this.data.admConditionId);\n    }\n    this.admConditionForm = this.admConditionFormBuilder.group({\n      priority:[null, Validators.required],\n      type:[null, Validators.required],\n      warranty:[null, Validators.required],\n      deliveryTime:[null, Validators.required],\n      placeDelivery:[null, Validators.required],\n      posibleProviders:[null, Validators.required],\n      requestId:[this.data.requestId],\n\n    });\n  }\n\n  getAdmCondition(id: string){\n    this._admCondition.getAdmCondition(id)\n      .subscribe(admCondition => {\n        if(!admCondition){\n          this.onCloseDialog();\n        }\n        const {priority, type, warranty, deliveryTime, placeDelivery, posibleProviders, requestId} = admCondition;\n        this.admCondition = admCondition;\n        this.admConditionForm.setValue({priority, type, warranty, deliveryTime, placeDelivery, posibleProviders, requestId});\n      })\n  }\n\n  onCloseDialog(){\n    this.dialogRef.close();\n  }\n\n  save() {\n\n    const {priority} = this.admConditionForm.value;\n    // console.log(this.admConditionForm.value);\n    if ( this.admCondition ) {\n      // update\n      const data = {\n        ...this.admConditionForm.value,\n        id: this.admCondition.id,\n        requestId: this.admCondition.requestId\n      }\n      this._admCondition.updateAdmCondition( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la condicion administrativa ' + `${ priority }`);\n          this.onCloseDialog();\n        })\n\n    } else {\n      // create\n\n      this._admCondition.createAdmCondition( this.admConditionForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha actualizado correctamente la condicion administrativa '+ `${priority }`);\n            this.onCloseDialog();\n        })\n    }\n\n\n\n  }\n\n}\n","<!--Form Acquisition Request-->\n\n<mat-toolbar>\n  <div class=\"fill-remaining-space\">\n    <span class=\"fill-remaining-space\">Condicion Administrativa</span>\n  </div>\n</mat-toolbar>\n\n<form [formGroup]=\"admConditionForm\" (submit)=\"save()\">\n  <div class=\"controles-container\">\n\n    <mat-form-field>\n      <mat-select formControlName=\"priority\" placeholder=\"Prioridad\">\n        <mat-option value=\"Alta\" >Alta</mat-option>\n        <mat-option value=\"Media\" >Media</mat-option>\n        <mat-option value=\"Baja\" >Baja</mat-option>\n      </mat-select>\n      <mat-error>\n        Este campo es obligatorio.\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput placeholder=\"Tipo\" formControlName=\"type\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"standard\">\n      <input matInput placeholder=\"Garantia\" formControlName=\"warranty\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n  </div>\n  <div class=\"controles-container\">\n    <mat-form-field>\n      <input\n        matInput\n        placeholder=\"Tiempo de Entrega\"\n        formControlName=\"deliveryTime\"\n      />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input\n        matInput\n        placeholder=\"Lugar de Entrega\"\n        formControlName=\"placeDelivery\"\n      />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n        matInput\n        placeholder=\"Posibles Proveedores\"\n        formControlName=\"posibleProviders\"\n      />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n  </div>\n    <div class=\"button-row\">\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        class=\"button\"\n        [disabled]=\"!admConditionForm.valid\"\n      >\n        Guardar\n      </button>\n      <button mat-button mat-dialog-close>Cerrar</button>\n    </div>\n\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { Status } from '../../models/status.model';\nimport { ConfirmFormService } from '../../services/confirmForm.service';\nimport { Store } from '@ngrx/store';\n\nimport { ConfirmForm } from '../../models/confirmForm.model';\nimport * as actions from '../../store/actions/status.actions';\nimport { AppState } from '../../store/app.reducers';\n\n@Component({\n  selector: 'app-aprobation',\n  templateUrl: './aprobation.component.html',\n  styles: ['']\n})\nexport class AprobationComponent implements OnInit {\n\n  currentStatus: Status;\n  activate = false;\n  currentUser: User;\n  confirmation: ConfirmForm;\n\n  constructor(\n    public confirmFormService: ConfirmFormService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.confirmFormService.initializeFormGroup();\n\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status.formId != null) {\n          this.getConfirmForm( status.formId);\n        } else {\n          this.getConfirmForm( 'new');\n        }\n      }\n    });\n  }\n\n  getConfirmForm(formId: string) {\n\n    if ( formId === 'new' ) {\n      console.log('confirmacion nueva');\n      this.confirmFormService.initializeFormGroup();\n\n    } else {\n      // console.log('id formulario ', formId);\n      this.confirmFormService.getConfirmation(formId).subscribe( confirmation => {\n        console.log('confiracion cargada', confirmation);\n        if ( confirmation ){\n        this.confirmFormService.onSetForm(confirmation['confirmation']);\n        }\n      });\n    }\n\n  }\n\n  onChange(value: boolean) {\n    // console.log('value ', value);\n    this.confirmFormService.form.controls['codeRequest'].setValue(this.currentStatus.codeRequest);\n    this.confirmFormService.saveConfirmation(this.confirmFormService.form.value).subscribe( resp => {\n      if ( this.currentStatus.procedureId ) {\n          // console.log('confirm form ', resp );\n          const std: Status = Status.fromState( this.currentStatus );\n          std.formId = resp.id;\n          std.status = 'terminado';\n          // console.log('current status ', std);\n          this.store.dispatch(actions.updateStatus({ status: std }));\n          // this.store.dispatch(actions.resetStatus());\n        }\n    });\n    // console.log('Valor del form ', this.confirmFormService.form.value.userId);\n  }\n\n  onSubmit() {\n\n  }\n}\n","<div class=\"container\" >\n\n    <div class=\"panelLeft\">\n\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n              <div mat-card-avatar class=\"example-header-image\"></div>\n              <mat-card-title>Aprobación de Inicio de proceso</mat-card-title>\n              <mat-card-subtitle>Adqisición de bienes o servicios</mat-card-subtitle>\n            </mat-card-header>\n            \n            <mat-card-content>\n              <p>\n                Los detalles de la solicitud se encuentran en la pestana \"Solicitud\", en este panel se detallan los datos de la solicitud de los bienes y o servicios que se solicita.\n              </p>\n            </mat-card-content>\n            <mat-card-actions>\n              <form [formGroup]=\"confirmFormService.form\"  class=\"normal-form\" (submit)=\"onSubmit()\">\n                <input type=\"hidden\" formControlName=\"id\">\n                \n                \n                \n                <mat-button-toggle-group formControlName=\"refuse\" value=\"refuse\" #group=\"matButtonToggleGroup\" aria-label=\"Confirmación\" (change)=\"onChange(group.value)\">\n                  <mat-button-toggle [value]=\"false\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Aceptar la solicitud\"  >done</mat-icon>\n                    ACEPTAR\n                  </mat-button-toggle>\n                  <mat-button-toggle [value]=\"true\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"No aceptar la Solicitud\">clear</mat-icon> \n                    NO ACEPTAR\n                  </mat-button-toggle>\n                </mat-button-toggle-group>\n\n\n            </form>\n\n            </mat-card-actions>\n          </mat-card>\n\n    </div>\n    <div class=\"panelRight\">\n\n        <!-- <mat-card class=\"example-card\">\n            <mat-card-header>\n              <div mat-card-avatar class=\"example-header-image\"></div>\n              <mat-card-title>Formulario de aprobación</mat-card-title>\n              <mat-card-subtitle>dfasd</mat-card-subtitle>\n            </mat-card-header>\n            <form>\n            <mat-card-content>\n                <mat-form-field appearance=\"fill\" style=\"width: 100%\">\n                    <mat-label>Observaciones</mat-label>\n                    <textarea matInput ></textarea>\n                  </mat-form-field>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-button mat-raised-button  >\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Aceptar la solicitud\">done</mat-icon>\n                    ACEPTAR\n                 </button>\n              <button mat-button mat-raised-button  > \n                  <mat-icon aria-hidden=\"false\" aria-label=\"No aceptar la Solicitud\">clear</mat-icon> \n                  NO ACEPTAR\n              </button>\n              \n            </mat-card-actions>\n            </form>\n\n          </mat-card> -->\n\n    </div>\n</div>\n\n\n","import { Component, OnInit, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { BudgetCertification } from 'src/app/models/budgetCertification.model';\nimport { BudgetCertificationService } from 'src/app/services/budgetCertification/budget-certification.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { DocumentComponent } from '../document/document.component';\nimport { Document } from 'src/app/models/document.model';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Status } from '../../models/status.model';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\nimport { User } from '../../models/user';\nimport { AuthService } from '../../services/auth.service';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-budget-certification-form',\n  templateUrl: './budget-certification-form.component.html',\n  styleUrls: ['./budget-certification-form.component.scss']\n})\nexport class BudgetCertificationFormComponent implements OnInit {\n\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  public budgetCertificationForm: FormGroup;\n  public budgetCertification: BudgetCertification;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document', 'preview', 'name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n\n  constructor(\n    public _budgetCertification: BudgetCertificationService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n\n\n\n    this.budgetCertificationForm = this.formBuilder.group({\n          reserveCode: [null, Validators.required],\n\n        });\n\n    this.store.select('status').subscribe(({ status }) => {\n          if (status != null) {\n            // console.log('el estado actual es ', status);\n            this.currentStatus = status;\n            if ( status.formId != null) {\n              this.getBudgetCertification( status.formId);\n            } else {\n              this.getBudgetCertification( 'new');\n            }\n          }\n        });\n  }\n\n\n  terminate() {\n    // console.log('Documentos cargados', this.documents);\n    if ( this.currentStatus.procedureId) {\n      const std: Status = Status.fromState( this.currentStatus );\n      if (this.documents.length > 0) {\n            std.userId = this.currentUser.id;\n            std.status = 'terminado';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n          }else {\n              std.status = 'pendiente';\n          }\n    }\n  }\n\n  getBudgetCertification(id: string){\n\n    if (id === 'new'){\n      return;\n    }\n    this._budgetCertification.getBC(id)\n      .subscribe(budgetCertification => {\n        // if ( !budgetCertification ) {\n        //   return this.router.navigateByUrl(`/budgetCertifications`);\n        // }\n        // console.log('form certification ', budgetCertification);\n        if (budgetCertification){\n          const {reserveCode} = budgetCertification;\n          this.budgetCertification = budgetCertification;\n          this.documents = budgetCertification.documents;\n          this.budgetCertificationForm.setValue({reserveCode });\n        }\n\n      });\n  }\n\n  save() {\n\n    const {reserveCode} = this.budgetCertificationForm.value;\n\n    if ( this.budgetCertification ) {\n      // update\n      const data = {\n        ...this.budgetCertificationForm.value,\n        id: this.budgetCertification.id\n      };\n      this._budgetCertification.updateBudgetCertification( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la Certificacion Presupuestaria ' + `${ reserveCode }`);\n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/budgetCertifications');\n          } else {\n            this.terminate();\n          }\n        });\n\n    } else {\n      // create\n\n      this._budgetCertification.createBudgetCertification( this.budgetCertificationForm.value )\n          .subscribe( (resp: any) => {\n            // console.log('valor de la certificación guardada', resp);\n            if (this.currentStatus.procedureId){\n              const std: Status = Status.fromState( this.currentStatus );\n              std.formId = resp.budgetCertification.id;\n              std.userId = this.currentUser.id;\n              std.status = 'pendiente';\n              this.store.dispatch( actions.updateStatus({ status: std }));\n            }\n            \n\n            this.getBudgetCertification(resp.budgetCertification.id);\n            this.snackService.success('Se ha creado correctamente la Certificacion Presupuestaria ' + `${reserveCode }`);\n\n        });\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._budgetCertification.deleteBudgetCertification( id )\n            .subscribe ( () =>\n            { this._budgetCertification.getBudgetCertifications();\n              this.snackService.warn('Se ha borrado correctamente la Certificacion Presupuestaria ');\n            });\n\n  }\n\n  // document\n  // getDocuments(){\n  //   this._document.getDocuments()\n  //     .subscribe(documents => this.documents = documents );\n  // }\n\n\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.budgetCertification.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getBudgetCertification(this.budgetCertification.id);\n    });\n  }\n\n\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getBudgetCertification(this.budgetCertification.id);\n      // this.sendEvent();\n      this.terminate();\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getBudgetCertification(this.budgetCertification.id);\n\n\n              this.terminate();\n\n            });\n\n  }\n\n  // sendEvent() {\n  //   // console.log('eniva evento');\n  //   this.eventRefresh.emit(true);\n  // }\n\n  createDocument(){\n    const document: Document = {id:'',name:\"Certificacion Presupuestaria\",type: \"\", formId:this.budgetCertification.id,src:\"./uploads\",status:\"active\",createDate: new Date()};\n    this._document.createDocument(document)\n      .subscribe((resp:any) =>\n      {\n        this._document.getDocuments();\n        this.changeFile(resp.document.id);\n        this.snackService.success('Se ha creado correctamente el documento ');\n        this.getBudgetCertification(this.budgetCertification.id);\n\n        this.terminate();\n\n      }\n      );\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getBudgetCertification(this.budgetCertification.id);\n                  // this.sendEvent();\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src === './uploads') {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n\n\n}\n","<div class=\"container\">\n  <div class=\"panelLeft30\" >\n\n    <mat-card>\n      <mat-card-title>Certificacion Presupuestaria</mat-card-title>\n\n      <mat-card-content>\n        <form [formGroup]=\"budgetCertificationForm\" (submit)=\"save()\">\n          <div class=\"textarea-container\">\n          <mat-form-field>\n            <textarea matInput placeholder=\"Codigo de Reserva\" formControlName=\"reserveCode\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n\n        </div>\n        <div class=\"button-row\">\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!budgetCertificationForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n\n\n  <div class=\"panelRight70\">\n    <mat-card-title>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"createDocument()\"\n        [disabled]=\"!budgetCertification\"\n        *ngIf = \"documents.length<1\"\n      >\n        <mat-icon>add</mat-icon>Documento\n      </button>\n    </mat-card-title>\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Documentos</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"document\">\n            <th mat-header-cell *matHeaderCellDef>Documento</th>\n            <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n              <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef>Ver</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openPreviewDocumentDialog(element.src)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateDocumentDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteDocument(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"sendEvent()\"\n      >\n        <mat-icon>add</mat-icon>Enviar evento\n   </button> -->\n\n\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BudgetCertification } from 'src/app/models/budgetCertification.model';\nimport { Document } from 'src/app/models/document.model';\nimport { BudgetCertificationService } from 'src/app/services/budgetCertification/budget-certification.service';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { AppState } from '../../store/app.reducers';\nimport { Store } from '@ngrx/store';\n@Component({\n  selector: 'app-budget-certification-view',\n  templateUrl: './budget-certification-view.component.html',\n  styleUrls: ['./budget-certification-view.component.scss']\n})\nexport class BudgetCertificationViewComponent implements OnInit {\n\n  budgetCertification: BudgetCertification;\n  documents: Document;\n  id: string = null;\n  displayedDocuments: string[] = ['name', 'type', 'src'];\n  fileView: File;\n  pdfSrc = \"https://vadimdez.github.io/ng2-pdf-viewer/assets/pdf-test.pdf\";\n  pdfSrc1 = \"../../../assets/certificacion.pdf\";\n  pdfSrc2 = \"http://localhost:3000/api/files/19d3b9d2-f2ad-413f-b10e-0ca4befc5be3-544.pdf\"\n  constructor(\n    public _budgetCertification: BudgetCertificationService,\n    public _document: DocumentService,\n    private store: Store<AppState>\n\n  ) { }\n\n  ngOnInit(): void {\n    \n\n    this.store.select('status').subscribe(({ status }) => {\n      console.log('el estado en la certificación es ', status);\n      this.id = status.formId;\n      this.getBudgetCertification(this.id);\n    });\n\n  }\n\n  getBudgetCertification(id: string){\n    this._budgetCertification.getBC(id)\n      .subscribe(budgetCertification => {\n        if ( !budgetCertification ) {\n          return;\n        }\n\n        this.budgetCertification = budgetCertification;\n        this.documents = budgetCertification.documents;\n\n\n      })\n  }\n\n  getFile(src){\n    this._document.getFile(src)\n    .subscribe(resp => {\n      console.log(this.fileView);\n      this.fileView = resp;\n      console.log(this.fileView);\n    })\n  }\n\n}\n","<ng-container *ngIf=\"budgetCertification\">\n<mat-accordion>\n  <mat-expansion-panel hideToggle>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Certificacion Presupuestaria sasd\n      </mat-panel-title>\n      <mat-panel-description>\n        {{budgetCertification.reserveCode}}\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Nombre</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"type\">\n        <th mat-header-cell *matHeaderCellDef>Tipo</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.type }}\n        </td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"src\">\n        <th mat-header-cell *matHeaderCellDef>Src</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.src }}</td>\n      </ng-container>\n\n\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n    </table>\n    <!-- <pdf-viewer [src]=\"'../../../assets/certificacion.pdf'\"\n              [render-text]=\"true\"\n              style=\"display: block;\"\n  ></pdf-viewer> -->\n  </mat-expansion-panel>\n\n</mat-accordion>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { BudgetCertification } from 'src/app/models/budgetCertification.model';\nimport { BudgetCertificationService } from 'src/app/services/budgetCertification/budget-certification.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-budget-certification',\n  templateUrl: './budget-certification.component.html',\n  styleUrls: ['./budget-certification.component.scss']\n})\nexport class BudgetCertificationComponent implements OnInit {\n\n  budgetCertifications: BudgetCertification[] = [];\n  displayedColumns: string[] = ['reserveCode','edit','delete'];\n\n  constructor(\n    public _budgetCertification: BudgetCertificationService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>,\n  ) { }\n\n  ngOnInit(): void {\n    this.getBudgetCertifications();\n  }\n\n  getBudgetCertifications(){\n    this._budgetCertification.getBudgetCertifications()\n      .subscribe(budgetCertifications => this.budgetCertifications = budgetCertifications);\n  }\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/budgetCertification/edit');\n  }\n  delete( id: string ) {\n\n    this._budgetCertification.deleteBudgetCertification( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente la Certificacion Presupuestaria ');\n              this.getBudgetCertifications();\n            });\n\n  }\n\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Certificaciones presupuestarias</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Certificaciones presupuestarias</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/budgetCertification/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva certificación presupuestaria\n  </button> -->\n</div>\n\n<table mat-table [dataSource]=\"budgetCertifications\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"reserveCode\">\n    <th mat-header-cell *matHeaderCellDef> Codigo Reserva </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.reserveCode}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" [routerLink]=\"['/budgetCertification', element.id ]\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>eliminar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { Company } from 'src/app/models/company.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CompanyService } from 'src/app/services/company/company.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { OfficeComponent } from '../office/office.component';\nimport { OfficeFormComponent } from '../office/office-form.component';\nimport { Office } from 'src/app/models/office.model';\nimport { OfficeService } from 'src/app/services/office/office.service';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-company-form',\n  templateUrl: './company-form.component.html',\n  styleUrls: ['./company-form.component.scss']\n})\nexport class CompanyFormComponent implements OnInit {\n\n  company: Company;\n  public companyForm: FormGroup;\n  offices: Office[] = [];\n  displayedOffices: string[] = ['name','supOfficeId','edit', 'delete'];\n  constructor(\n    public _company: CompanyService,\n    public router: Router,\n    public activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    public _office: OfficeService,\n    public snackService: SnackService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params\n    .subscribe( ({ id }) => this.getCompany( id ) );\n\n    this.companyForm = this.formBuilder.group({\n          name:[null, Validators.required],\n          direction:[null, Validators.required],\n          nit:[null, Validators.required],\n          email:[null, Validators.required],\n          phone:[null, Validators.required],\n        });\n    this.getOffices();\n  }\n\n  getCompany(id: string){\n    if(id==='new'){\n      return;\n    }\n    this._company.getCompany(id)\n      .subscribe(company => {\n        if(!company){\n          return this.router.navigateByUrl(`/companies`);\n        }\n        const {name,direction,nit,email,phone} = company;\n        this.company = company;\n        this.companyForm.setValue({name,direction,nit,email,phone});\n      })\n  }\n\n  save() {\n\n    const {name} = this.companyForm.value;\n\n    if ( this.company ) {\n      // update\n      const data = {\n        ...this.companyForm.value,\n        id: this.company.id\n      }\n      this._company.updateCompany( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la empresa ' + `${ name }`);\n        })\n\n    } else {\n      // create\n\n      this._company.createCompany( this.companyForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente la empresa '+ `${name }`);\n            this.router.navigateByUrl(`/company/${ resp.company.id }`)\n        })\n    }\n\n  }\n\n  getOffices(){\n    this._office.getOffices()\n      .subscribe(offices => this.offices = offices);\n  }\n\n  delete( id: string ) {\n\n    this._office.deleteOffice( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente a la Unidad');\n              this.getOffices();\n            });\n\n  }\n\n\n\n}\n","<div class=\"content\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Empresa</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <form [formGroup]=\"companyForm\" (submit)=\"save()\">\n        <div class=\"controles-container\">\n          <mat-form-field appearance=\"standard\">\n            <input matInput placeholder=\"Nombre\" formControlName=\"name\" />\n            <mat-error>Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"standard\">\n            <input\n              matInput\n              placeholder=\"Direccion\"\n              formControlName=\"direction\"\n            />\n            <mat-error>Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n\n          <br />\n\n          <mat-form-field appearance=\"standard\">\n            <input matInput placeholder=\"Nit\" formControlName=\"nit\" />\n            <mat-error>Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"standard\">\n            <input matInput placeholder=\"Email\" formControlName=\"email\" />\n            <mat-error>Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n\n          <br />\n\n          <mat-form-field appearance=\"standard\">\n            <input matInput placeholder=\"Telefono\" formControlName=\"phone\" />\n            <mat-error>Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"button-row\">\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!companyForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n      </form>\n    </mat-card-content>\n  </mat-card>\n  <aside *ngIf=\"company\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Unidades</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"offices\" class=\"mat-elevation-z8\">\n          <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n          <!-- Position Column -->\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n          <!-- Weight Column -->\n          <ng-container matColumnDef=\"supOfficeId\">\n            <th mat-header-cell *matHeaderCellDef>supOfficeId</th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element.supOfficeId }}\n            </td>\n          </ng-container>\n\n          <!-- Edit Column -->\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>edit</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                [routerLink]=\"['/office', element.id]\"\n                class=\"btn btn-primary\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <!-- Delete Column -->\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>delete</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"delete(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedOffices\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedOffices\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </aside>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Company } from 'src/app/models/company.model';\nimport { CompanyService } from 'src/app/services/company/company.service';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.scss']\n})\nexport class CompanyComponent implements OnInit {\n\n  companies: Company[] = [];\n  displayedColumns: string[] = ['name', 'direction','nit', 'email', 'phone','edit','delete'];\n  constructor(\n    public _company: CompanyService,\n    public snackService: SnackService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getCompanies();\n  }\n\n  getCompanies(){\n    this._company.getCompanies()\n    .subscribe(companies => this.companies = companies);\n  }\n\n  delete( id: string ) {\n\n    this._company.deleteCompany( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente a la Empresa');\n              this.getCompanies();\n            });\n\n  }\n\n\n}\n","\n<mat-card-title>\n  <div class=\"button-row\">\n<button mat-raised-button class=\"create\" [routerLink] = \"['/company/new']\">\n        <mat-icon>add</mat-icon>New Company\n</button>\n</div>\n</mat-card-title>\n\n<table mat-table [dataSource]=\"companies\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Nombre </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"direction\">\n    <th mat-header-cell *matHeaderCellDef> Direccion </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.direction}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"nit\">\n    <th mat-header-cell *matHeaderCellDef> Nit </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.nit}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"email\">\n    <th mat-header-cell *matHeaderCellDef> email </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"phone\">\n    <th mat-header-cell *matHeaderCellDef> telefono </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.phone}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button [routerLink]=\"['/company', element.id ]\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>borrar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { Status } from '../../models/status.model';\nimport { ConfirmFormService } from '../../services/confirmForm.service';\nimport { Store } from '@ngrx/store';\n\nimport { ConfirmForm } from '../../models/confirmForm.model';\nimport * as actions from '../../store/actions/status.actions';\nimport { AppState } from '../../store/app.reducers';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styles: ['']\n})\nexport class ConfirmComponent implements OnInit {\n\n  currentStatus: Status;\n  activate = false;\n  currentUser: User;\n  confirmation: ConfirmForm;\n\n  constructor(\n    public confirmFormService: ConfirmFormService,\n    private store: Store<AppState>\n\n     ) { }\n\n  ngOnInit(): void {\n\n    this.confirmFormService.initializeFormGroup();\n\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status.formId != null) {\n          this.getConfirmForm( status.formId);\n        } else {\n          this.getConfirmForm( 'new');\n        }\n      }\n    });\n    // console.log('Valor del form ', this.confirmFormService.form);\n  }\n\n  getConfirmForm(formId: string) {\n\n    if ( formId === 'new' ) {\n      // console.log('confirmacion nueva');\n      this.confirmFormService.initializeFormGroup();\n\n    } else {\n      this.confirmFormService.getConfirmation(formId).subscribe( confirmation => {\n        // console.log('confiracion cargada', confirmation);\n        this.confirmFormService.onSetForm(confirmation['confirmation']);\n      });\n    }\n\n  }\n\n  onChange(value: boolean) {\n    // console.log('value ', value);\n    this.confirmFormService.form.controls['codeRequest'].setValue(this.currentStatus.codeRequest);\n    this.confirmFormService.saveConfirmation(this.confirmFormService.form.value).subscribe( resp => {\n      // console.log('confirm form ', resp );\n      if (this.currentStatus.procedureId) {\n          const std: Status = Status.fromState( this.currentStatus );\n          std.formId = resp.id;\n          std.status = 'terminado';\n          // console.log('current status ', std);\n          this.store.dispatch(actions.updateStatus({ status: std }));\n          // this.store.dispatch(actions.resetStatus());\n        }\n    });\n    // console.log('Valor del form ', this.confirmFormService.form.value.userId);\n  }\n\n  onSubmit() {\n\n  }\n\n}\n","<div class=\"container\" >\n\n    <div class=\"panelLeft\">\n\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n              <div mat-card-avatar class=\"example-header-image\"></div>\n              <mat-card-title>Aprobación de solicitud</mat-card-title>\n              <mat-card-subtitle>Solicitud de adqisición de bienes o servicios</mat-card-subtitle>\n            </mat-card-header>\n            \n            <mat-card-content>\n              <p>\n                Los detalles de la solicitud se encuentran en la pestana \"Solicitud\", en este panel se detallan los datos de la solicitud de los bienes y o servicios que se solicita.\n              </p>\n            </mat-card-content>\n            <mat-card-actions>\n              <form [formGroup]=\"confirmFormService.form\"  class=\"normal-form\" (submit)=\"onSubmit()\">\n                <input type=\"hidden\" formControlName=\"id\">\n                \n                \n                \n                <mat-button-toggle-group formControlName=\"refuse\" value=\"refuse\" #group=\"matButtonToggleGroup\" aria-label=\"Confirmación\" (change)=\"onChange(group.value)\">\n                  <mat-button-toggle [value]=\"false\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Aceptar la solicitud\"  >done</mat-icon>\n                    ACEPTAR\n                  </mat-button-toggle>\n                  <mat-button-toggle [value]=\"true\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"No aceptar la Solicitud\">clear</mat-icon> \n                    NO ACEPTAR\n                  </mat-button-toggle>\n                </mat-button-toggle-group>\n\n\n            </form>\n\n            </mat-card-actions>\n          </mat-card>\n\n    </div>\n    <div class=\"panelRight\">\n\n        <!-- <mat-card class=\"example-card\">\n            <mat-card-header>\n              <div mat-card-avatar class=\"example-header-image\"></div>\n              <mat-card-title>Formulario de aprobación</mat-card-title>\n              <mat-card-subtitle>dfasd</mat-card-subtitle>\n            </mat-card-header>\n            <form>\n            <mat-card-content>\n                <mat-form-field appearance=\"fill\" style=\"width: 100%\">\n                    <mat-label>Observaciones</mat-label>\n                    <textarea matInput ></textarea>\n                  </mat-form-field>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-button mat-raised-button  >\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Aceptar la solicitud\">done</mat-icon>\n                    ACEPTAR\n                 </button>\n              <button mat-button mat-raised-button  > \n                  <mat-icon aria-hidden=\"false\" aria-label=\"No aceptar la Solicitud\">clear</mat-icon> \n                  NO ACEPTAR\n              </button>\n              \n            </mat-card-actions>\n            </form>\n\n          </mat-card> -->\n\n    </div>\n</div>\n\n\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { IStatus } from '../../interfaces/interfaces';\n\n\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor( ) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n <app-tasks></app-tasks>\n  \n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../store/app.reducers';\nimport { Status } from '../../../models/status.model';\nimport * as actions from '../../../store/actions/status.actions';\nimport * as actionss from '../../../store/actions/statuss.actions';\nimport { ProcedureService } from '../../../services/procedure/procedure.service';\nimport { User } from '../../../models/user';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-pursue',\n  templateUrl: './pursue.component.html',\n  styleUrls: ['./pursue.component.scss']\n})\nexport class PursueComponent implements OnInit {\n\n  currentStatus: Status;\n  activate = false;\n  currentUser: User;\n  constructor(\n          private store: Store<AppState>,\n          private procedureService: ProcedureService,\n          private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n      this.store.select('status').subscribe(({status}) => {\n        if (status != null) {\n\n          // console.log('el estado actual es ', status);\n          this.currentStatus = status;\n          if (status.status === 'terminado') {\n            this.switchButtons(true);\n            }else {\n              this.switchButtons(false);\n            }\n          }\n        });\n  }\n\n  switchButtons(active: boolean) {\n    this.activate = active;\n  }\n\n  nextTask() {\n    // console.log('press next');\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    const std: Status = Status.fromState( this.currentStatus );\n    std.current = false;\n            // console.log('current status ', std);\n    this.store.dispatch( actions.updateStatus({ status: std }));\n\n    this.procedureService.getProcedure(std.procedureId).subscribe( currentProcedure => {\n        const nextOrder = currentProcedure.order + 1;\n        this.procedureService.getProcedureByOrder(nextOrder).subscribe( procedure => {\n          const nextstd: Status = Status.fromState( std );\n          nextstd.procedureId = procedure.id;\n          nextstd.name = procedure.procedureName;\n          nextstd.userId = null;\n          nextstd.formId = null;\n          nextstd.status = 'proceso';\n          nextstd.dateAt = new Date();\n          nextstd.current = true;\n          // para cargar correctamente la lista de tareas\n          const currentPID = this.currentStatus.procedureId;\n          // Crear estado y actualizar lista de tareas\n          this.store.dispatch( actions.createStatus({status: nextstd}));\n          this.store.dispatch( actionss.loadStatuss(\n            {\n              positionId: this.currentUser.positionId,\n              procedureId: currentPID,\n              userId: this.currentUser.id\n            }));\n\n          this.store.dispatch( actions.resetStatus());\n        });\n    });\n  }\n\n  refuseTask() {\n\n    console.log('press refuse');\n  }\n \n\n}\n","\n<mat-card style=\"margin-top: 10px;\" *ngIf=\"activate\">\n\n    <form class=\"form\"  >\n        <div class=\"formLeft\"  ><button mat-flat-button color=\"accent\" [disabled]=\"!activate\" (click)=\"refuseTask()\" > <mat-icon aria-hidden=\"false\" aria-label=\"Rechazar\">arrow_back_ios</mat-icon> Regresar </button></div>\n        <div class=\"formRight\" ><button mat-flat-button color=\"primary\" [disabled]=\"!activate\" (click)=\"nextTask()\">Continuar <mat-icon aria-hidden=\"false\" aria-label=\"Continuar con la siguiente tarea\">arrow_forward_ios</mat-icon></button></div>\n    </form>\n</mat-card>\n","import { Component, OnInit, ViewChild, SimpleChanges } from '@angular/core';\nimport { StatusService } from '../../../services/status/status.service';\nimport { Status } from 'src/app/models/status.model';\nimport { IStatus } from '../../../interfaces/interfaces';\nimport { ProcedureService } from '../../../services/procedure/procedure.service';\nimport { PositionService } from '../../../services/position/position.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { User } from '../../../models/user';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../store/app.reducers';\n// import { loadStatuss } from '../../../store/actions/statuss.actions';\nimport * as actions from '../../../store/actions/statuss.actions';\n\n// import { loadStatus } from 'src/app/store/actions';\nimport { loadStatus, requestStatus } from '../../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n\n  // @Output() statusSelect = new EventEmitter<Status>();\n  filters: actions.validFilters [] = ['proceso', 'pendiente', 'terminado'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  user: User;\n  statuss: Status [] = [];\n  data: Status [] = [];\n  status: Status;\n  currentUser: User;\n  refresh = false;\n  currentFilter: actions.validFilters = 'proceso';\n\n  loading: boolean = false;\n  error: any;\n\n\n  page = 0;\n  size = 5;\n\n  constructor(\n    public statusService: StatusService,\n    public procedureService: ProcedureService,\n    public positionService: PositionService,\n    public authService: AuthService,\n    private store: Store<AppState>\n\n  ) {}\n\n  ngOnInit(): void {\n\n    // this.store.select('statuss').subscribe(({ filter }) => {\n    //   // console.log('el estado en filtro es ', filter);\n    //   this.currentFilter = filter;\n\n    // });\n    this.getStatus();\n  }\n\n  newRequest() {\n    this.user = JSON.parse(this.authService.getUser());\n    this.procedureService.getProcedureByOrder(1).subscribe( procedure => {\n      // console.log('Procedimento almacenado ', procedure);\n      this.store.dispatch( requestStatus({ userId: this.user.id, procedureId: procedure.id, name: procedure.procedureName }) );\n    });\n  }\n\n  changeFilter( filter: actions.validFilters ) {\n    // console.log('filtro seleccionado ', filter);\n    this.store.dispatch( actions.setFilterStatus({ filter }));\n  }\n  // ngOnChanges(changes: SimpleChanges): void {\n\n  //   if (changes.refresh.currentValue){\n  //     this.getStatus();\n  //   }\n  // }\n\n  // doRefresh(value: boolean){\n  //   console.log('list refresh ', value);\n  //   if (value) {\n  //     this.statuss = [];\n  //     this.getStatus();\n  //   }\n  // }\n\n  getStatus() {\n\n\n    this.store.select('statuss').subscribe( ({statuss, loading, error, filter}) => {\n\n      let res = statuss.filter( status => status.status === filter);\n      this.statuss = res;\n      this.data = this.statuss;\n      this.loading = loading;\n      this.error = error;\n      this.currentFilter = filter;\n      this.getData({pageIndex: this.page, pageSize: this.size});\n    });\n\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n\n    this.procedureService.getProcedureByOrder(1).subscribe( procedure => {\n      this.store.dispatch( actions.loadStatuss({\n              positionId: this.currentUser.positionId,\n              procedureId: procedure.id,\n              userId: this.currentUser.id\n            }));\n    });\n\n    \n\n  }\n\n\n  // getStatus(){\n  //   console.log('Carga datos de la lista de tareas');\n\n  //   this.currentUser =  JSON.parse(this.authService.getUser()) ;\n\n  //   this.positionService.getPosition(this.currentUser.positionId).subscribe(position => {\n\n  //     this.procedureService.getProcedureByPosition(position.id).subscribe(procedures => {\n\n  //       procedures.forEach( procedure => this.statuss.push(...procedure.status));\n\n  //       this.data = this.statuss;\n  //       this.getData({pageIndex: this.page, pageSize: this.size});\n\n\n\n  //     });\n\n  //   });\n\n  // }\n\n\n\n// opciones para el paginador\n  getData(obj) {\n    let index = 0,\n    startingIndex = obj.pageIndex * obj.pageSize,\n    endingIndex = startingIndex + obj.pageSize;\n\n    this.data = this.statuss.filter(() => {\n      index++;\n      return (index > startingIndex && index <= endingIndex) ? true : false;\n    });\n  }\n\n  sendStatus(status: Status): void {\n    // console.log('estado enviado ', status);\n    this.store.dispatch( loadStatus({ id: status.id }));\n    this.status = status;\n    this.refresh = false;\n    // this.statusSelect.emit(status);\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"'navigation'\"\n      [mode]=\"'side'\"\n      [opened]=\"true\">\n    <mat-toolbar>\n      <span>Options</span>\n    </mat-toolbar>\n\n    <mat-selection-list [multiple]=\"false\">\n      <!-- <div mat-subheader>Folders</div> -->\n      <mat-list-option  *ngFor=\"let filter of filters\" [class.selected] = \"filter === currentFilter\"  (click)=\"changeFilter(filter)\" >\n        <div mat-line >{{ filter | titlecase }}</div>\n\n      </mat-list-option>\n\n\n    </mat-selection-list>\n\n    <!-- <mat-nav-list>\n      <a mat-list-item routerLink=\"/dashboard\">En proceso</a>\n      <a mat-list-item routerLink=\"/status\">Pendientes</a>\n      <a mat-list-item routerLink=\"/status\">Terminados</a>\n    </mat-nav-list> -->\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <button mat-flat-button color=\"primary\" routerLink=\"/dashboard\" routerLinkActive=\"active\" >\n        <mat-icon>fact_check</mat-icon>\n        Tareas</button>\n        <!-- routerLink=\"/acquisitionRequest/new\" -->\n      <button mat-flat-button color=\"primary\"  (click)=\"newRequest()\" routerLinkActive=\"active\">\n        <mat-icon>grading</mat-icon>\n        Solicitud</button>\n\n\n    </mat-toolbar>\n\n\n<div class=\"content\" >\n<aside>\n<mat-card class=\"example-card\">\n    <mat-card-header>\n      \n      <mat-card-title>Filtrar tareas</mat-card-title>\n      <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\n    </mat-card-header>\n    \n    <mat-card-content>\n\n\n      <form class=\"example-form\">\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Buscar</mat-label>\n          <input matInput placeholder=\"Buscar ...\" value=\"\">\n        </mat-form-field>\n        </form>\n    </mat-card-content>\n    <!-- <mat-card-actions>\n      <button mat-button>LIKE</button>\n      <button mat-button>SHARE</button>\n    </mat-card-actions> -->\n  </mat-card>\n  <br>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      \n      <mat-card-title>Lista de tareas</mat-card-title>\n      <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\n    </mat-card-header>\n    \n    <mat-card-content>\n\n      <div class=\"spinner\" *ngIf=\"loading\">\n        <div class=\"bounce1\"></div>\n        <div class=\"bounce2\"></div>\n        <div class=\"bounce3\"></div>\n      </div>\n      \n      <mat-card  *ngIf=\"error\" style=\"background-color: palevioletred; width: 380px; overflow: auto;white-space: nowrap; \">\n        <mat-card-header>\n          <mat-card-title>Error</mat-card-title>\n          <mat-card-subtitle>\n            <pre>\n              {{ error | json }}\n            </pre>\n          </mat-card-subtitle>\n          \n        </mat-card-header>\n      </mat-card>\n\n\n      <mat-card class=\"s-card\" *ngIf=\"!data.length\">\n        <mat-card-header>\n          <mat-card-title>Usted no tiene tareas</mat-card-title>\n          <mat-card-subtitle>No se ha registrado tareas a su cargo </mat-card-subtitle>\n        </mat-card-header>\n      </mat-card>\n\n      <mat-selection-list [multiple]=\"false\" *ngIf=\"!loading\">\n        <!-- <div mat-subheader>Folders</div> -->\n        <mat-list-option *ngFor=\"let std of data  | estates:currentFilter\" (click)=\"sendStatus(std)\"> \n          <mat-icon mat-list-icon color=\"primary\">mail_outline</mat-icon>\n          <div mat-line>{{std.name}}</div>\n          <div mat-line> {{std.dateAt | date}} </div>\n        </mat-list-option>\n       \n  \n      </mat-selection-list>\n\n    </mat-card-content>\n    <mat-card-actions>\n      <mat-paginator [length]=\"statuss.length\"\n          [pageSize]=\"size\"\n          [pageIndex]=\"page\"\n          [pageSizeOptions]=\"[5, 10, 20]\"\n          (page)=\"getData($event)\">\n    </mat-paginator>\n    </mat-card-actions>\n  </mat-card>\n\n</aside>\n<div class=\"info\" >\n \n  <app-work  ></app-work>\n\n</div>\n</div>\n\n<ng-container *ngIf=\"status\"><app-tracing></app-tracing></ng-container>\n\n\n\n</mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit, Input, SimpleChanges, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\nimport { IStatus } from 'src/app/interfaces/interfaces';\nimport { StatusService } from '../../../services/status/status.service';\nimport { ProcedureService } from '../../../services/procedure/procedure.service';\nimport { Procedure } from '../../../models/procedure.model';\nimport { Status } from '../../../models/status.model';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../store/app.reducers';\n\n@Component({\n  selector: 'app-tracing',\n  templateUrl: './tracing.component.html',\n  styleUrls: ['./tracing.component.scss']\n})\nexport class TracingComponent implements OnInit, AfterViewChecked {\n  \n  currentStatus: Status;\n  tracer: IStatus [] = [];\n  procedure: Procedure = new Procedure(null, null, '', 0);\n  @ViewChild('container') private myScrollContainer: ElementRef;\n\n  constructor(\n              private statusService: StatusService,\n              private procedureService: ProcedureService,\n              private store: Store<AppState>\n              ) { }\n\n  ngOnInit(): void {\n\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status == null) { return; }\n        if ( status.codeRequest ) {\n          this.getStatus(this.currentStatus.codeRequest);\n          this.getNextProcedure(this.currentStatus.procedureId);\n        } else {\n          this.tracer = null;\n          this.procedure = null;\n        }\n\n      }\n    });\n    // this.scrollToBottom();\n    // console.log('entro al init');\n  }\n\n  ngAfterViewChecked () {\n    // lo llama varias veces\n    this.scrollToBottom();\n    // console.log('entro al cheked');\n  }\n\n  getStatus(codeRequest: string) {\n    this.statusService.getStatusByRequest(codeRequest).subscribe( tracer => {\n      // console.log('traza ', tracer);\n      this.tracer = tracer;\n    } );\n  }\n\n  getNextProcedure(procedureId: string) {\n    this.procedureService.getProcedure(procedureId).subscribe( currentProcedure => {\n      const newOrder = currentProcedure.order + 1;\n      this.procedureService.getProcedureByOrder(newOrder).subscribe( nextProcedure => {\n        this.procedure = nextProcedure;\n        // console.log('siguiente procedimiento', this.procedure);\n      });\n    });\n  }\n\n  scrollToBottom(): void {\n\n    try {\n        // console.log('estro al scroll', this.myScrollContainer.nativeElement.scrollWidth);\n\n\n        this.myScrollContainer.nativeElement.scrollLeft = this.myScrollContainer.nativeElement.scrollWidth;\n    \n      } catch (err) { console.log('error en le scroll ', err); }\n}\n\n}\n","<div class=\"container\"  id=\"container\" #container>\n   <div class=\"panelCenter\" >\n    <mat-card>\n       \n        <div id=\"flex-scroll\">\n\n        <ul class=\"timeline\" id=\"timeline\">\n        \n        \n        <!-- complete , current -->\n        <li class=\"li\"  *ngFor=\"let trace of tracer\" [ngClass]=\"trace.current ? 'current': 'complete'\" >\n            <div class=\"timestamp\">\n            <span class=\"author\"><strong>{{trace.name | truncateText: 35}}</strong> </span>\n            <span class=\"date\">{{trace.dateAt | date: 'dd MMM yyyy, h:mm a'}}</span>\n            </div>\n            <div class=\"status\">\n            <h4 *ngIf=\"trace.current\"> Actual </h4>\n            <h4 *ngIf=\"!trace.current\"> Completada </h4>\n            </div>\n        </li>\n        <li class=\"li\" *ngIf=\"procedure != null\" >\n            <div class=\"timestamp\">\n            <span class=\"author\"><strong>{{procedure.procedureName | truncateText: 35}}</strong></span>\n            <span class=\"date\">Próximo</span>\n            </div>\n            <div class=\"status\">\n            <h4> Siguiente </h4>\n            </div>\n        </li>\n        </ul>     \n    </div> \n\n</mat-card>\n   \n</div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { IStatus } from 'src/app/interfaces/interfaces';\nimport { FormsIn } from '../../../interfaces/interfaces';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../store/app.reducers';\nimport { Status } from '../../../models/status.model';\n\n\n@Component({\n  selector: 'app-work',\n  templateUrl: './work.component.html',\n  styleUrls: ['./work.component.scss']\n})\nexport class WorkComponent implements OnInit {\n\n  // @Input() status: IStatus;\n  // @Input('childToMaster') masterName: string;\n\n  // @Output() eventRefresh = new EventEmitter<boolean>();\n  currentStatus: Status;\n  formsIn: FormsIn = 'anyForm';\n  infoIn: string;\n  constructor( private store: Store<AppState> ) {\n  }\n\n  ngOnInit(): void {\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status.codeRequest);\n        this.currentStatus = status;\n        this.chargeForms(status);\n      } else {\n        this.formsIn = 'anyForm';\n      }\n\n    });\n    \n  }\n\n  // tslint:disable-next-line:use-lifecycle-interface\n\n  // doRefresh(value: boolean) {\n  //   // console.log(' refresca ', value );\n  //   this.formsIn = 'anyForm';\n  //   this.eventRefresh.emit(true);\n  // }\n\n  chargeForms(status: Status) {\n\n    \n    // console.log('status ', status.name)\n    status.codeRequest != null ? this.infoIn = 'infoReq' : this.infoIn = 'none';\n    \n    if (status.name === 'Solicitud de adquisición de bienes' ) {\n      this.formsIn = 'request';\n    }\n    if (status.name === 'Aprobación Solicitud' ) {\n      this.formsIn = 'confirm';\n    }\n    if (status.name === 'Certificación presupuestaria' ) {\n      this.formsIn = 'certification';\n    }\n    if (status.name === 'Elaborar especificación técnica' ) {\n      this.formsIn = 'technical';\n    }\n    if (status.name === 'Inicio de proceso' ) {\n      this.formsIn = 'initial';\n    }\n    if (status.name === 'Aprobación inicio de proceso' ) {\n      this.formsIn = 'aproved';\n    }\n    if (status.name === 'Recepción de propuestas' ) {\n      this.formsIn = 'proposal';\n    }\n    if (status.name === 'Elabora Informe de evaluación técnica' ) {\n      this.formsIn = 'inform';\n    }\n    if (status.name === 'Elaborar cuadro comparativo' ) {\n      this.formsIn = 'comparative';\n    }\n    if (status.name === 'Elabora contrato' ) {\n      this.formsIn = 'contract';\n    }\n    if (status.name === 'Firma orden de compra' ) {\n      this.formsIn = 'order';\n    }\n    if (status.name === 'Fin del proceso' ) {\n      this.formsIn = 'end';\n    }\n    // console.log('formIn ', this.formsIn)\n    // console.log('valor info', this.infoIn);\n  }\n\n  // ngOnChanges(changes: SimpleChanges): void {\n\n\n  //   // for (const propName in changes) {\n  //   //     const change = changes[propName];\n  //   //     const curVal  = JSON.stringify(change.currentValue);\n  //   //     const prevVal = JSON.stringify(change.previousValue);\n\n  //   //     console.log('actual', curVal);\n  //   //     console.log('previo', prevVal);\n  //   //   }\n\n  //   if (this.currentStatus != null) {\n\n  //   if (changes.status.currentValue){\n  //     // console.log('estado cambia a ', this.status);\n\n\n  //     if (this.currentStatus.name === 'Solicitud de adquisición de bienes' ) {\n  //       this.formsIn = 'request';\n  //     }\n  //     if (this.currentStatus.name === 'Certificación presupuestaria' ) {\n  //       this.formsIn = 'certification';\n  //     }\n  //     if (this.currentStatus.name === 'Elaborar informe de inicio de proceso' ) {\n  //       this.formsIn = 'thecnical';\n  //     }\n  //   }\n\n    \n  // }\n  // }\n\n}\n","<mat-tab-group animationDuration=\"300ms\">\n    <mat-tab label=\"Tarea\">\n      <br>\n\n      <div class=\"container\" *ngIf=\"formsIn === 'anyForm'\" >\n        <div class=\"panelCenter\" >\n          <mat-card class=\"s-card\" >\n            <mat-card-header>\n              <mat-card-title>Seleccione una tarea para continuar</mat-card-title>\n              <mat-card-subtitle>No se leccionó ninguna tarea, seleccioné una tarea de la lista de tareas </mat-card-subtitle>\n            </mat-card-header>\n          </mat-card>\n        </div>\n      </div>\n\n\n\n        <ng-container *ngIf=\"formsIn === 'request'\" > <app-acquisition-request-form></app-acquisition-request-form> </ng-container>\n        <ng-container *ngIf=\"formsIn === 'confirm'\" > <app-confirm  ></app-confirm> </ng-container>\n        <ng-container *ngIf=\"formsIn === 'certification'\" ><app-budget-certification-form ></app-budget-certification-form></ng-container>\n        <ng-container *ngIf=\"formsIn === 'technical'\"> <app-technical-report-form ></app-technical-report-form> </ng-container>\n        <ng-container *ngIf=\"formsIn === 'initial'\" > <app-process-start-form></app-process-start-form> </ng-container>\n        <ng-container *ngIf=\"formsIn === 'aproved'\" ><app-aprobation></app-aprobation></ng-container>\n        <ng-container *ngIf=\"formsIn === 'proposal'\" ><app-proposal-evaluation-form></app-proposal-evaluation-form></ng-container>\n        <ng-container *ngIf=\"formsIn === 'inform'\"> <app-technical-evaluation-form></app-technical-evaluation-form> </ng-container>\n        <ng-container *ngIf=\"formsIn === 'comparative'\" ><app-proposal-comparison-form></app-proposal-comparison-form></ng-container>\n        <ng-container *ngIf=\"formsIn === 'contract'\" ><app-legal-contract-form></app-legal-contract-form></ng-container>\n        <ng-container *ngIf=\"formsIn === 'order'\" ><app-purchase-order-form></app-purchase-order-form></ng-container>\n        \n    \n    </mat-tab>\n\n    <mat-tab label=\"Detalles\" *ngIf=\"infoIn === 'infoReq'\">\n      <div class=\"info\" >\n        <br>\n\n        <h2>\n          <!-- <mat-icon mat-list-icon color=\"primary\">domain_verification</mat-icon> -->\n          Solicitud de Adquisicion\n        </h2>\n        <app-acquisition-request-view ></app-acquisition-request-view>\n\n        <ng-container *ngIf=\"formsIn === 'technical'\">\n          <h2>Certificacion</h2>\n          <!-- <app-budget-certification-view></app-budget-certification-view> -->\n        </ng-container>\n      </div>\n\n\n    </mat-tab>\n\n\n  </mat-tab-group>\n\n  <app-pursue></app-pursue>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Document } from 'src/app/models/document.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-document',\n  templateUrl: './document.component.html',\n  styleUrls: ['./document.component.scss']\n})\nexport class DocumentComponent implements OnInit {\n\n  document: Document;\n  public documentForm: FormGroup;\n  formId: string;\n  documentId: string;\n\n  constructor(\n    public _document: DocumentService,\n    private dialogRef: MatDialogRef<DocumentComponent>,\n    private documentFormBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: DocumentComponent,\n    public snackService: SnackService,\n\n  ) { }\n\n  ngOnInit(): void {\n    if(this.data.documentId !== 'new'){\n      this.getDocument(this.data.documentId);\n    }\n\n    this.documentForm = this.documentFormBuilder.group({\n      name:[null, Validators.required],\n      type:[null],\n      formId:[this.data.formId],\n      src:[null],\n\n\n    });\n  }\n  getDocument(id: string){\n    this._document.getDocument(id)\n      .subscribe(document => {\n        if(!document){\n          this.onCloseDialog();\n        }\n        const {name, type, formId, src} = document;\n        this.document = document;\n        this.documentForm.setValue({name, type, formId, src});\n      })\n  }\n  onCloseDialog(){\n\n    this.dialogRef.close();\n  }\n  save() {\n\n    const {name} = this.documentForm.value;\n    if ( this.document ) {\n      // update\n      const data = {\n        ...this.documentForm.value,\n        id: this.document.id,\n        formId: this.document.formId\n      }\n      console.log(data);\n      this._document.updateDocument( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el documento ' + `${ name }`);\n          this.onCloseDialog();\n        })\n\n    } else {\n      // create\n\n      this._document.createDocument( this.documentForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente el documento '+ `${name }`);\n            this.onCloseDialog();\n        })\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.success('Se ha creado borrado el documento ');\n            });\n\n  }\n\n\n}\n","<mat-toolbar>\n  <div class=\"fill-remaining-space\">\n    <span class=\"fill-remaining-space\">Documento</span>\n  </div>\n</mat-toolbar>\n\n<form [formGroup]=\"documentForm\" (submit)=\"save()\">\n\n\n  <div class=\"controles-container\">\n    <mat-form-field>\n      <input matInput placeholder=\"Nombre\" formControlName=\"name\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n\n  </div>\n\n    <div class=\"button-row\">\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        class=\"button\"\n        [disabled]=\"!documentForm.valid\"\n      >\n        Guardar\n      </button>\n      <button mat-button mat-dialog-close>Cerrar</button>\n    </div>\n\n\n\n</form>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Document } from 'src/app/models/document.model';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DocumentComponent } from 'src/app/pages/document/document.component';\nimport { SnackService } from 'src/app/services/snack.service';\n\n\n@Component({\n  selector: 'app-file-preview',\n  templateUrl: './file-preview.component.html',\n  styleUrls: ['./file-preview.component.scss']\n})\nexport class FilePreviewComponent implements OnInit {\n\n  url: string;\n  src: string;\n  formId: string;\n  document: Document;\n  aux = '518ddd2a-e9b6-459a-8fae-01665ef0661f-788.pdf';\n\n  constructor(\n    public _document: DocumentService,\n    private dialogRef: MatDialogRef<FilePreviewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: FilePreviewComponent,\n    public snackService: SnackService,\n  ) { }\n\n  ngOnInit(): void {\n    if(this.data.src){\n      this.getFileSrc(this.data.src);\n    }\n  }\n  getDocument(id: string){\n    this._document.getDocumentForm(id)\n      .subscribe(document => {\n        if(!document){\n          this.onCloseDialog();\n        }\n\n        this.document = document;\n        this.getFileSrc(this.document.src);\n        console.log(this.url);\n\n\n      })\n  }\n  getFileSrc(src: string){\n    if(src==\"./uploads\"){\n      this.onCloseDialog();\n      this.snackService.warn(\"No se tiene ningun archivo\");\n    }\n    else{\n\n      this.url = src;\n\n    }\n  }\n  onCloseDialog(){\n\n    this.dialogRef.close();\n  }\n}\n","<ng-container *ngIf=\"url\">\n\n  <iframe [src]=\"url | pdfView\" type=\"application/pdf\" style=\"height:700px;width:100%\"></iframe>\n</ng-container>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { Status } from '../../models/status.model';\nimport { ConfirmFormService } from '../../services/confirmForm.service';\nimport { Store } from '@ngrx/store';\nimport { ConfirmForm } from '../../models/confirmForm.model';\nimport * as actions from '../../store/actions/status.actions';\nimport { AppState } from '../../store/app.reducers';\n\n\n@Component({\n  selector: 'app-firm',\n  templateUrl: './firm.component.html',\n  styles: ['']\n})\nexport class FirmComponent implements OnInit {\n\n  currentStatus: Status;\n  activate = false;\n  currentUser: User;\n  confirmation: ConfirmForm;\n\n  constructor(\n    public confirmFormService: ConfirmFormService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.confirmFormService.initializeFormGroup();\n\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status.formId != null) {\n          this.getConfirmForm( status.formId);\n        } else {\n          this.getConfirmForm( 'new');\n        }\n      }\n    });\n  }\n\n  getConfirmForm(formId: string) {\n\n    if ( formId === 'new' ) {\n      console.log('confirmacion nueva');\n      this.confirmFormService.initializeFormGroup();\n\n    } else {\n      // console.log('id formulario ', formId);\n      this.confirmFormService.getConfirmation(formId).subscribe( confirmation => {\n        console.log('confiracion cargada', confirmation);\n        if ( confirmation ){\n        this.confirmFormService.onSetForm(confirmation['confirmation']);\n        }\n      });\n    }\n\n  }\n\n  onChange(value: boolean) {\n    // console.log('value ', value);\n    this.confirmFormService.form.controls['codeRequest'].setValue(this.currentStatus.codeRequest);\n    this.confirmFormService.saveConfirmation(this.confirmFormService.form.value).subscribe( resp => {\n      console.log('confirm form ', resp );\n      const std: Status = Status.fromState( this.currentStatus );\n      std.formId = resp.id;\n      std.status = 'terminado';\n      // console.log('current status ', std);\n      this.store.dispatch(actions.updateStatus({ status: std }));\n      // this.store.dispatch(actions.resetStatus());\n    });\n    // console.log('Valor del form ', this.confirmFormService.form.value.userId);\n  }\n\n  onSubmit() {\n\n  }\n\n}\n","<div class=\"container\" >\n\n    <div class=\"panelLeft\">\n\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n              <div mat-card-avatar class=\"example-header-image\"></div>\n              <mat-card-title>Aprobación de Inicio de proceso</mat-card-title>\n              <mat-card-subtitle>Adqisición de bienes o servicios</mat-card-subtitle>\n            </mat-card-header>\n            \n            <mat-card-content>\n              <p>\n                Los detalles de la solicitud se encuentran en la pestana \"Solicitud\", en este panel se detallan los datos de la solicitud de los bienes y o servicios que se solicita.\n              </p>\n            </mat-card-content>\n            <mat-card-actions>\n              <form [formGroup]=\"confirmFormService.form\"  class=\"normal-form\" (submit)=\"onSubmit()\">\n                <input type=\"hidden\" formControlName=\"id\">\n                \n                \n                \n                <mat-button-toggle-group formControlName=\"refuse\" value=\"refuse\" #group=\"matButtonToggleGroup\" aria-label=\"Confirmación\" (change)=\"onChange(group.value)\">\n                  <mat-button-toggle [value]=\"false\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Aceptar la solicitud\"  >done</mat-icon>\n                    ACEPTAR\n                  </mat-button-toggle>\n                  <mat-button-toggle [value]=\"true\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"No aceptar la Solicitud\">clear</mat-icon> \n                    NO ACEPTAR\n                  </mat-button-toggle>\n                </mat-button-toggle-group>\n\n\n            </form>\n\n            </mat-card-actions>\n          </mat-card>\n\n    </div>\n    <div class=\"panelRight\">\n\n        <!-- <mat-card class=\"example-card\">\n            <mat-card-header>\n              <div mat-card-avatar class=\"example-header-image\"></div>\n              <mat-card-title>Formulario de aprobación</mat-card-title>\n              <mat-card-subtitle>dfasd</mat-card-subtitle>\n            </mat-card-header>\n            <form>\n            <mat-card-content>\n                <mat-form-field appearance=\"fill\" style=\"width: 100%\">\n                    <mat-label>Observaciones</mat-label>\n                    <textarea matInput ></textarea>\n                  </mat-form-field>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-button mat-raised-button  >\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Aceptar la solicitud\">done</mat-icon>\n                    ACEPTAR\n                 </button>\n              <button mat-button mat-raised-button  > \n                  <mat-icon aria-hidden=\"false\" aria-label=\"No aceptar la Solicitud\">clear</mat-icon> \n                  NO ACEPTAR\n              </button>\n              \n            </mat-card-actions>\n            </form>\n\n          </mat-card> -->\n\n    </div>\n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\nimport { routeMap } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n\n  constructor( private authService: AuthService, private router: Router ) {\n    console.log(routeMap);\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      // this.router.navigate(['/login']);\n      console.log('variable next ', next.routeConfig.path);\n      console.log('variable state ', state);\n\n\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { LegalContract } from 'src/app/models/legalContract.model';\nimport { LegalContractService } from 'src/app/services/legalContract/legal-contract.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { DocumentComponent } from '../document/document.component';\nimport { Document } from 'src/app/models/document.model';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Status } from '../../models/status.model';\nimport { User } from '../../models/user';\nimport * as actions from '../../store/actions/status.actions';\nimport { AuthService } from '../../services/auth.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-legal-contract-form',\n  templateUrl: './legal-contract-form.component.html',\n  styleUrls: ['./legal-contract-form.component.scss']\n})\nexport class LegalContractFormComponent implements OnInit {\n\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  public legalContractForm: FormGroup;\n  public legalContract: LegalContract;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document','preview','name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n\n  constructor(\n    public _legalContract: LegalContractService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n\n    this.legalContractForm = this.formBuilder.group({\n          code:[null, Validators.required],\n          description:[null, Validators.required],\n          responsable:[null, Validators.required],\n\n        });\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status.formId != null) {\n          this.getLegalContract( status.formId);\n        } else {\n          this.getLegalContract('new');\n        }\n      }\n    });\n  }\n\n  getLegalContract(id: string){\n\n    if(id === 'new'){\n      return;\n    }\n    this._legalContract.getPCD(id)\n      .subscribe(legalContract => {\n        if ( legalContract ) {\n          const {code, description,responsable} = legalContract;\n          this.legalContract = legalContract;\n          this.documents = legalContract.documents;\n          this.legalContractForm.setValue({code, description,responsable});\n        }\n      })\n  }\n\n  terminate() {\n    if ( this.currentStatus.procedureId ) {\n      const std: Status = Status.fromState( this.currentStatus );\n      if (this.documents.length > 0) {\n            std.userId = this.currentUser.id;\n            std.status = 'terminado';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n          }else {\n              std.status = 'pendiente';\n          }\n    }\n  }\n\n  save() {\n\n    const {code} = this.legalContractForm.value;\n\n    if ( this.legalContract ) {\n      // update\n      const data = {\n        ...this.legalContractForm.value,\n        id: this.legalContract.id\n      }\n      this._legalContract.updateLegalContract( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el Contrato Legal ' + `${ code }`);\n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/legalContracts');\n          } else {\n            this.terminate();\n          }\n        })\n\n    } else {\n      // create\n\n      this._legalContract.createLegalContract( this.legalContractForm.value )\n          .subscribe( (resp: any) => {\n            // console.log('valor de la certificación guardada', resp);\n            if ( this.currentStatus.procedureId ) {\n              const std: Status = Status.fromState( this.currentStatus );\n              std.formId = resp.legalContract.id;\n              std.userId = this.currentUser.id;\n              std.status = 'pendiente';\n              // console.log('current status ', std);\n              this.store.dispatch( actions.updateStatus({ status: std }));\n            }\n            this.getLegalContract(resp.legalContract.id);\n            this.snackService.success('Se ha creado correctamente el Contrato Legal '+ `${code }`);\n\n            // this.router.navigateByUrl(`/legalContract/${ resp.legalContract.id }`)\n        })\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._legalContract.deleteLegalContract( id )\n            .subscribe ( () =>\n            { this._legalContract.getLegalContracts();\n              this.snackService.warn('Se ha borrado correctamente el Contrato Legal ');\n            });\n\n  }\n\n  //document\n  getDocuments(){\n    this._document.getDocuments()\n      .subscribe(documents => this.documents = documents);\n  }\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.legalContract.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n\n      this.getLegalContract(this.legalContract.id);\n      //this.sendEvent();\n\n    });\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getLegalContract(this.legalContract.id);\n      this.terminate();\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src: src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getLegalContract(this.legalContract.id);\n              this.terminate();\n            });\n\n  }\n\n  /* sendEvent() {\n    // console.log('eniva evento');\n    this.eventRefresh.emit(true);\n  } */\n\n  createDocument(){\n\n    const document: Document = {id:'',name:\"Contrato Legal\",type: \"\", formId:this.legalContract.id,src:\"./uploads\", status:\"active\", createDate: new Date()};\n    this._document.createDocument(document)\n      .subscribe(() =>\n      {\n        this._document.getDocuments();\n        this.snackService.success('Se ha creado correctamente el documento ');\n        this.getLegalContract(this.legalContract.id);\n      }\n      )\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getLegalContract(this.legalContract.id);\n                  //this.sendEvent();\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src == \"./uploads\") {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n\n}\n","<div class=\"container\">\n  <div class=\"panelLeft30\" >\n\n    <mat-card>\n      <mat-card-title>Contrato Legal</mat-card-title>\n\n      <mat-card-content>\n        <form [formGroup]=\"legalContractForm\" (submit)=\"save()\">\n          \n          <mat-form-field>\n            <textarea matInput placeholder=\"Codigo\" formControlName=\"code\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <textarea matInput placeholder=\"Responsable\" formControlName=\"responsable\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <textarea matInput placeholder=\"Descripcion\" formControlName=\"description\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n        <div class=\"button-row\">\n          <br>\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!legalContractForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n\n\n  <div class=\"panelRight70\">\n    <mat-card-title>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"createDocument()\"\n        [disabled]=\"!legalContract\"\n      >\n        <mat-icon>add</mat-icon>Documento\n      </button>\n    </mat-card-title>\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Documentos</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"document\">\n            <th mat-header-cell *matHeaderCellDef>Documento</th>\n            <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n              <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef>Ver</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openPreviewDocumentDialog(element.src)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateDocumentDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteDocument(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"sendEvent()\"\n      >\n        <mat-icon>add</mat-icon>Enviar evento\n   </button> -->\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LegalContract } from 'src/app/models/legalContract.model';\nimport { LegalContractService } from 'src/app/services/legalContract/legal-contract.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-legal-contract',\n  templateUrl: './legal-contract.component.html',\n  styleUrls: ['./legal-contract.component.scss']\n})\nexport class LegalContractComponent implements OnInit {\n\n  legalContracts: LegalContract[] = [];\n  displayedColumns: string[] = ['code','description','edit','delete'];\n\n  constructor(\n    public _legalContract: LegalContractService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.getLegalContracts();\n  }\n\n  getLegalContracts(){\n    this._legalContract.getLegalContracts()\n      .subscribe(legalContracts => this.legalContracts = legalContracts);\n  }\n\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/legalContract/edit');\n  }\n\n  delete(id: string){\n    this._legalContract.deleteLegalContract(id)\n      .subscribe(() =>\n      {\n        this.snackService.warn('Se ha borrado correctamente el Contrato Legal ');\n        this.getLegalContracts();\n      })\n  }\n\n}\n","\n<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2> Contratos legales </h2> \n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Contratos legales </a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/legalContract/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nuevo contrato legal\n  </button> -->\n</div>  \n\n<table mat-table [dataSource]=\"legalContracts\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef> Codigo de Todo </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef> Descripcion </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>eliminar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule\n  ]\n})\nexport class AllMaterialModule {}\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Office } from 'src/app/models/office.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { OfficeService } from 'src/app/services/office/office.service';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { PositionComponent } from '../position/position.component';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PositionFormComponent } from '../position/position-form.component';\nimport { PositionService } from 'src/app/services/position/position.service';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-office-form',\n  templateUrl: './office-form.component.html',\n  styleUrls: ['./office-form.component.scss']\n})\nexport class OfficeFormComponent implements OnInit {\n\n  office: Office;\n  public officeForm: FormGroup;\n  companyId: string;\n  positionDialogRef: MatDialogRef<PositionComponent>;\n  //positionFormDialogRef: MatDialogRef<PositionFormComponent>;\n  positions: Position[] = [];\n  displayedColumns: string[] = ['name', 'active','edit', 'delete'];\n  constructor(\n    public _office: OfficeService,\n    private officeFormBuilder: FormBuilder,\n    private dialog: MatDialog,\n    public router: Router,\n    public activatedRoute: ActivatedRoute,\n    public _position: PositionService,\n    public snackService: SnackService,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.activatedRoute.params\n    .subscribe( ({ id }) => this.getOffice( id ) );\n    this.officeForm = this.officeFormBuilder.group({\n      name:[null, Validators.required],\n      companyId:[null],\n      supOfficeId:[null],\n\n\n    });\n\n  }\n\n  getOffice(id: string){\n    if(id==='new'){\n      return;\n    }\n    this._office.getOF(id)\n      .subscribe(office => {\n        if(!office){\n          return this.router.navigateByUrl(`/offices`);\n        }\n        const {name, companyId, supOfficeId} = office;\n        this.office = office;\n        this.positions = office.positions;\n        this.officeForm.setValue({name, companyId, supOfficeId });\n      })\n  }\n\n  save() {\n\n    const {name} = this.officeForm.value;\n    if ( this.office ) {\n      // update\n      const data = {\n        ...this.officeForm.value,\n        id: this.office.id,\n        companyId: this.office.companyId\n      }\n      console.log(data);\n      this._office.updateOffice( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la Unidad ' + `${ name }`);\n        })\n\n    } else {\n      // create\n\n      this._office.createOffice( this.officeForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente la Unidad ' + `${ name }`);\n            this.router.navigateByUrl(`/office/${ resp.office.id }`)\n        })\n    }\n\n\n\n  }\n\n  openViewPositionDialog(){\n    this.positionDialogRef = this.dialog.open(PositionComponent);\n  }\n\n  openAddPositionDialog(){\n    const positionFormDialogRef = this.dialog.open(PositionFormComponent, {\n      data: { officeId: this.office.id,\n              positionId: 'new'\n      }\n    });\n    positionFormDialogRef.afterClosed().subscribe( result => {\n      this.getOffice(this.office.id);\n    });\n  }\n\n  openUpdatePositionDialog(id: string){\n    const positionFormDialogRef = this.dialog.open(PositionFormComponent, {\n      data: { positionId: id}\n    });\n    positionFormDialogRef.afterClosed().subscribe( result => {\n      this.getOffice(this.office.id);\n    });\n\n  }\n\n  getPositions(){\n    this._position.getPositions()\n    .subscribe(positions => this.positions = positions);\n}\n\ndeletePosition( id: string ) {\n\n  this._position.deletePosition( id )\n          .subscribe ( () =>\n          { this.getOffice(this.office.id);\n            this.snackService.warn('Se ha borrado correctamente el cargo ');\n          });\n\n}\n\n}\n","<!--Form Acquisition Request-->\n<div class=\"content\">\n  <mat-card>\n  <mat-card-header>\n    <mat-card-title>Unidad</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form [formGroup]=\"officeForm\" (submit)=\"save()\" >\n      <div class=\"controles-container\">\n    <mat-form-field appearance=\"standard\">\n\n      <input matInput placeholder=\"Nombre\" formControlName=\"name\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n  </div>\n    <div class=\"button-row\">\n    <button mat-raised-button color=\"primary\" type=\"submit\" class=\"button\" [disabled]=\"!officeForm.valid\" >Guardar</button>\n    </div>\n  </form>\n  </mat-card-content>\n  <br>\n\n</mat-card>\n\n<aside *ngIf=\"office\">\n  <mat-card-title>\n    <button mat-raised-button class=\"create\" (click)=\"openAddPositionDialog()\">\n      <mat-icon>add</mat-icon>Cargo\n    </button>\n  </mat-card-title>\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Cargos</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <table mat-table [dataSource]=\"positions\" class=\"mat-elevation-z8\">\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef> Nombre </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"active\">\n          <th mat-header-cell *matHeaderCellDef> Activo </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.active}} </td>\n        </ng-container>\n\n        <!-- Edit Column -->\n        <ng-container matColumnDef=\"edit\">\n          <th mat-header-cell *matHeaderCellDef> editar </th>\n          <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"openUpdatePositionDialog(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n          </button>  </td>\n        </ng-container>\n\n        <!-- Delete Column -->\n        <ng-container matColumnDef=\"delete\">\n          <th mat-header-cell *matHeaderCellDef>eliminar</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button\n              mat-button\n              class=\"btn btn-primary\"\n              color=\"warn\"\n              (click)=\"deletePosition(element.id)\"\n            >\n            <mat-icon>delete_outline</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </mat-card-content>\n  </mat-card>\n</aside>\n\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Office } from 'src/app/models/office.model';\nimport { OfficeService } from 'src/app/services/office/office.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-office',\n  templateUrl: './office.component.html',\n  styleUrls: ['./office.component.scss']\n})\nexport class OfficeComponent implements OnInit {\n\n  offices: Office[] = [];\n  displayedColumns: string[] = ['name', 'companyId', 'supOfficeId','edit', 'delete'];\n\n  constructor(\n    public _office: OfficeService,\n    public snackService: SnackService,\n    //private dialogRef: MatDialogRef<OfficeComponent>,\n  ) { }\n\n  ngOnInit(): void {\n    this.getOffices()\n  }\n\n  getOffices(){\n    this._office.getOffices()\n    .subscribe(offices => this.offices = offices);\n}\n\ndelete( id: string ) {\n\n  this._office.deleteOffice( id )\n          .subscribe ( () =>\n          { this._office.getOffices();\n            this.snackService.warn('Se ha borrado correctamente la Unidad ');\n          });\n\n}\n\n\n\n\n\n}\n","<table mat-table [dataSource]=\"offices\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Nombre </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"companyId\">\n    <th mat-header-cell *matHeaderCellDef> CompanyId </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.companyId}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"supOfficeId\">\n    <th mat-header-cell *matHeaderCellDef> supOfficeId </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.supOfficeId}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button [routerLink]=\"['/office', element.id ]\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>borrar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button\n        mat-button\n        class=\"btn btn-primary\"\n        color=\"warn\"\n        (click)=\"delete(element.id)\"\n      >\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../store/app.reducers';\nimport { resetStatus} from '../store/actions/status.actions';\nimport { routeMap } from '../config/global';\nimport { PositionService } from '../services/position/position.service';\nimport { OfficeService } from '../services/office/office.service';\n\n\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.scss']\n})\nexport class PagesComponent implements OnInit {\n  user: User;\n  routeMap = routeMap;\n  currentOffice = 'NONE';\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private positionService: PositionService,\n              private officeService: OfficeService,\n              private store: Store<AppState>\n              ) { }\n\n  ngOnInit(): void {\n\n    this.user = this.userService.user;\n    // console.log('Usuario actual ', this.user)\n    this.refresh();\n  }\n\n  logout(){\n    this.store.dispatch( resetStatus());\n    this.authService.logout();\n  }\n\n  refresh() {\n    this.user = JSON.parse(this.authService.getUser());\n\n    if (this.user) {\n      this.positionService.getPosition(this.user.positionId).subscribe( myPosition => {\n        this.officeService.getOffice(myPosition.officeId).subscribe( myOffice => {\n          // console.log('mi officina es ', myOffice.name);\n\n          if ( this.user.role === 'ADMIN_ROLE' ) {\n            this.currentOffice = myOffice.name;\n          } else {\n            this.currentOffice = 'NONE';\n          }\n\n        });\n      });\n    }\n\n  }\n}\n","<nav>\n    <mat-toolbar >\n      <mat-toolbar-row>\n        <span>\n          <img src=\"./../../assets/images/logoEA.png\" alt=\"\" width=\"155\" style=\"margin-top: 10px;\" >\n\n        </span>\n\n\n        <span class=\"example-spacer\"></span>\n        <button mat-flat-button color=\"primary\" routerLink=\"/dashboard\" routerLinkActive=\"active\"> <mat-icon>fact_check</mat-icon> Tareas</button>\n        <button mat-button [matMenuTriggerFor]=\"menu\" [matMenuTriggerData]=\"{name: user.name+' '+ user.lastname}\">\n          <mat-icon>account_circle</mat-icon>\n          {{user.name}} {{user.lastname}}\n          <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <ng-template matMenuContent let-name=\"name\">\n            <button mat-menu-item>Perfil de usuario</button>\n            <button mat-menu-item>Cambiar password</button>\n            <button mat-menu-item [routerLink] = \"['/performed']\" >Tareas terminadas</button>\n            <button mat-menu-item (click)=\"logout()\" >Cerar sessión {{name}}</button>\n          </ng-template>\n\n        </mat-menu>\n\n        <!-- <button mat-button >Finanzas</button> -->\n        \n        <button mat-icon-button [matMenuTriggerFor]=\"appMenu\" *ngIf=\"user.role == 'ADMIN_ROLE'\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n\n        <mat-menu #appMenu=\"matMenu\">\n\n          <div *ngFor=\"let menu of routeMap\"  >\n\n            <ng-template  [ngIf]=\"menu.office === currentOffice\">\n              <!-- <mat-list>\n                <mat-list-item>{{menu.office}}</mat-list-item>\n              </mat-list> -->\n              <button *ngFor=\"let submenu of menu.routes\" mat-menu-item [routerLink] = \"['/'+submenu.path]\">{{submenu.title}}</button>\n            </ng-template>\n          </div>\n\n\n           \n          </mat-menu>\n\n\n\n      </mat-toolbar-row>\n\n\n    </mat-toolbar>\n\n  </nav>\n\n  <div class=\"contenedor\" >\n\n\n        <!-- Add Content Here -->\n        <router-outlet></router-outlet>\n\n\n\n  </div>\n\n\n\n  <!-- <footer class=\"footer-distributed\">\n\n    <div class=\"footer-right\">\n\n      <a [routerLink] = \"['/dashboard']\"><i class=\"fa fa-facebook\"></i></a>\n      <a [routerLink] = \"['/dashboard']\"><i class=\"fa fa-twitter\"></i></a>\n      <a [routerLink] = \"['/dashboard']\"><i class=\"fa fa-linkedin\"></i></a>\n      <a [routerLink] = \"['/dashboard']\"><i class=\"fa fa-github\"></i></a>\n\n    </div>\n\n    <div class=\"footer-left\">\n\n      <p class=\"footer-links\">\n        <a class=\"link-1\" [routerLink] = \"['/dashboard']\">Tareas</a>\n\n        <a [routerLink] = \"['/dashboard']\">Nueva Solicitud</a>\n\n        <a [routerLink] = \"['/dashboard']\">Tareas del usuario</a>\n\n\n      </p>\n\n      <p>Ende Andina &copy; 2020</p>\n    </div>\n\n  </footer> -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { SharedModule } from '../shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxExtendedPdfViewerModule } from 'ngx-extended-pdf-viewer';\nimport { AllMaterialModule } from './material/material.module';\n\n\nimport { pagesRoutes } from './pages.routes';\nimport { PagesComponent } from './pages.component';\n\n\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UsersComponent } from './users/users.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptorService } from '../services/token-interceptor.service';\nimport { ModalFileUploadComponent } from '../components/modal-file-upload/modal-file-upload.component';\nimport { FilePreviewComponent } from './file-preview/file-preview.component';\nimport { PipesModule } from '../pipes/pipes.module';\n\nimport { UsersFormComponent } from './users/users-form/users-form.component';\nimport { TechnicalReportComponent } from './technical-report/technical-report.component';\nimport { AcquisitionRequestComponent } from './acquisition-request/acquisition-request.component';\nimport { AcquisitionRequestFormComponent } from './acquisition-request/acquisition-request-form.component';\nimport { TechnicalReportFormComponent } from './technical-report/technical-report-form.component';\nimport { ProductComponent } from './product/product.component';\nimport { AdmConditionComponent } from './adm-condition/adm-condition.component';\nimport { OfficeComponent } from './office/office.component';\nimport { OfficeFormComponent } from './office/office-form.component';\nimport { PositionComponent } from './position/position.component';\nimport { PositionFormComponent } from './position/position-form.component';\nimport { CompanyComponent } from './company/company.component';\nimport { CompanyFormComponent } from './company/company-form.component';\nimport { DocumentComponent } from './document/document.component';\nimport { BudgetCertificationComponent } from './budget-certification/budget-certification.component';\nimport { StatusComponent } from './status/status.component';\nimport { ProcedureComponent } from './procedure/procedure.component';\nimport { BudgetCertificationFormComponent } from './budget-certification/budget-certification-form.component';\nimport { ProcedureFormComponent } from './procedure/procedure-form.component';\nimport { TasksComponent } from './dashboard/tasks/tasks.component';\nimport { WorkComponent } from './dashboard/work/work.component';\nimport { AcquisitionRequestViewComponent } from './acquisition-request/acquisition-request-view.component';\nimport { BudgetCertificationViewComponent } from './budget-certification/budget-certification-view.component';\nimport { TracingComponent } from './dashboard/tracing/tracing.component';\nimport { PursueComponent } from './dashboard/pursue/pursue.component';\nimport { EstatesPipe } from './pipes/estates.pipe';\nimport { ProposalEvaluationsComponent } from './proposal-evaluations/proposal-evaluations.component';\nimport { ProposalProviderComponent } from './proposal-provider/proposal-provider.component';\nimport { ProposalProviderFormComponent } from './proposal-provider/proposal-provider-form.component';\nimport { ProposalEvaluationFormComponent } from './proposal-evaluations/proposal-evaluation-form.component';\nimport { ProposalComparisonComponent } from './proposal-comparison/proposal-comparison.component';\nimport { ProposalComparisonFormComponent } from './proposal-comparison/proposal-comparison-form.component';\nimport { ProcessStartComponent } from './process-start/process-start.component';\nimport { ProcessStartFormComponent } from './process-start/process-start-form.component';\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { PurchaseOrderFormComponent } from './purchase-order/purchase-order-form.component';\nimport { TechnicalEvaluationComponent } from './technical-evaluation/technical-evaluation.component';\nimport { TechnicalEvaluationFormComponent } from './technical-evaluation/technical-evaluation-form.component';\nimport { ConfirmComponent } from './confirm/confirm.component';\nimport { AprobationComponent } from './aprobation/aprobation.component';\nimport { LegalContractComponent } from './legal-contract/legal-contract.component';\nimport { LegalContractFormComponent } from './legal-contract/legal-contract-form.component';\nimport { FirmComponent } from './firm/firm.component';\nimport { PerformedComponent } from './performed/performed.component';\nimport { DetailComponent } from './performed/detail/detail.component';\nimport { TruncateTextPipe } from './pipes/truncate-text.pipe';\nimport { FormatDatePipe } from './pipes/format-date.pipe';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    PagesComponent,\n    DashboardComponent,\n    UsersComponent,\n    UsersFormComponent,\n    ModalFileUploadComponent,\n    FilePreviewComponent,\n    TechnicalReportComponent,\n    AcquisitionRequestComponent,\n    AcquisitionRequestFormComponent,\n    TechnicalReportFormComponent,\n    ProductComponent,\n    AdmConditionComponent,\n    OfficeComponent,\n    OfficeFormComponent,\n    PositionComponent,\n    PositionFormComponent,\n    CompanyComponent,\n    CompanyFormComponent,\n    DocumentComponent,\n    BudgetCertificationComponent,\n    StatusComponent,\n    ProcedureComponent,\n    BudgetCertificationFormComponent,\n    ProcedureFormComponent,\n    TasksComponent,\n    WorkComponent,\n    AcquisitionRequestViewComponent,\n    BudgetCertificationViewComponent,\n    TracingComponent,\n    PursueComponent,\n    EstatesPipe,\n    ProposalEvaluationsComponent,\n    ProposalProviderComponent,\n    ProposalProviderFormComponent,\n    ProposalEvaluationFormComponent,\n    ProposalComparisonComponent,\n    ProposalComparisonFormComponent,\n    ProcessStartComponent,\n    ProcessStartFormComponent,\n    PurchaseOrderComponent,\n    PurchaseOrderFormComponent,\n    TechnicalEvaluationComponent,\n    TechnicalEvaluationFormComponent,\n    ConfirmComponent,\n    AprobationComponent,\n    LegalContractComponent,\n    LegalContractFormComponent,\n    FirmComponent,\n    PerformedComponent,\n    DetailComponent,\n    TruncateTextPipe,\n    FormatDatePipe\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    AllMaterialModule,\n    PipesModule,\n    // SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxExtendedPdfViewerModule,\n    RouterModule.forChild(pagesRoutes)\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    },\n   \n  ],\n  exports: [\n    PagesComponent,\n  ]\n})\nexport class PagesModule { }\n","import { Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UsersComponent } from './users/users.component';\nimport { TechnicalReportComponent } from './technical-report/technical-report.component';\nimport { AcquisitionRequestComponent } from './acquisition-request/acquisition-request.component';\nimport { AcquisitionRequestFormComponent } from './acquisition-request/acquisition-request-form.component';\nimport { TechnicalReportFormComponent } from './technical-report/technical-report-form.component';\nimport { CompanyComponent } from './company/company.component';\nimport { CompanyFormComponent } from './company/company-form.component';\nimport { OfficeComponent } from './office/office.component';\nimport { OfficeFormComponent } from './office/office-form.component';\nimport { ProcedureComponent } from './procedure/procedure.component';\nimport { BudgetCertificationComponent } from './budget-certification/budget-certification.component';\nimport { BudgetCertificationFormComponent } from './budget-certification/budget-certification-form.component';\nimport { ProcedureFormComponent } from './procedure/procedure-form.component';\nimport { StatusComponent } from './status/status.component';\nimport { ProposalEvaluationsComponent } from './proposal-evaluations/proposal-evaluations.component';\nimport { ProposalEvaluationFormComponent } from './proposal-evaluations/proposal-evaluation-form.component';\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { PurchaseOrderFormComponent } from './purchase-order/purchase-order-form.component';\nimport { ProposalComparisonComponent } from './proposal-comparison/proposal-comparison.component';\nimport { ProposalComparisonFormComponent } from './proposal-comparison/proposal-comparison-form.component';\nimport { ProcessStartComponent } from './process-start/process-start.component';\nimport { ProcessStartFormComponent } from './process-start/process-start-form.component';\nimport { TechnicalEvaluationComponent } from './technical-evaluation/technical-evaluation.component';\nimport { TechnicalEvaluationFormComponent } from './technical-evaluation/technical-evaluation-form.component';\nimport { LegalContractComponent } from './legal-contract/legal-contract.component';\nimport { LegalContractFormComponent } from './legal-contract/legal-contract-form.component';\nimport { PerformedComponent } from './performed/performed.component';\nimport { RoleGuard } from './guards/role.guard';\n\n\n\n\nexport const pagesRoutes: Routes = [\n    { path: 'dashboard', component: DashboardComponent, data: {titulo: 'Dashboard'} },\n    { path: 'users', component: UsersComponent, data: {titulo: 'Mantenimiento de usuarios'}  },\n    { path: 'technicalReports', component: TechnicalReportComponent, data: {titulo: 'Informe Tecnico'}  },\n    { path: 'technicalReport/:id', component: TechnicalReportFormComponent, data: {titulo: 'Formulario Informe Tecnico'}  },\n    { path: 'acquisitionRequests', component: AcquisitionRequestComponent, data: {titulo: 'Solicitudes de Adquisicion'}  },\n    { path: 'acquisitionRequest/:id', component: AcquisitionRequestFormComponent, data: {titulo: 'Formulario Solicitud de Adquisicion'}  },\n    { path: 'budgetCertifications', component: BudgetCertificationComponent, data: {titulo: 'Certificacion Presupuestaria'}  },\n    { path: 'budgetCertification/:id', component: BudgetCertificationFormComponent, data: {titulo: 'Formulario Certificacion Presupuestaria'}  },\n    { path: 'companies', component: CompanyComponent, data: {titulo: 'Empresa'}  },\n    { path: 'company/:id', component: CompanyFormComponent, data: {titulo: 'Empresa'}  },\n    { path: 'offices', component: OfficeComponent, canActivate: [RoleGuard], data: {titulo: 'Unidad'}  },\n    { path: 'office/:id', component: OfficeFormComponent, canActivate: [RoleGuard], data: {titulo: 'Formulario Unidad'}  },\n    { path: 'procedures', component: ProcedureComponent, data: {titulo: 'Proceso'}  },\n    { path: 'procedure/:id', component: ProcedureFormComponent, data: {titulo: 'Formulario Proceso'}  },\n    { path: 'status', component: StatusComponent, data: {titulo: 'Estados'}  },\n    { path: 'proposalEvaluations', component: ProposalEvaluationsComponent, data: {titulo: 'Evaluacion Propuesta'}  },\n    { path: 'proposalEvaluation/:id', component: ProposalEvaluationFormComponent, data: {titulo: 'Formulario Evaluacion Propuesta'}  },\n    { path: 'purchaseOrders', component: PurchaseOrderComponent, data: {titulo: 'Orden Compra'}  },\n    { path: 'purchaseOrder/:id', component: PurchaseOrderFormComponent, data: {titulo: 'Formulario Orden Compra'}  },\n    { path: 'proposalComparisons', component: ProposalComparisonComponent, data: {titulo: 'Comparacion Propuesta'}  },\n    { path: 'proposalComparison/:id', component: ProposalComparisonFormComponent, data: {titulo: 'Formulario Comparacion Propuesta'}  },\n    { path: 'processStarts', component: ProcessStartComponent, data: {titulo: 'Inicio Proceso'}  },\n    { path: 'processStart/:id', component: ProcessStartFormComponent, data: {titulo: 'Formulario Inicio Proceso'}  },\n    { path: 'technicalEvaluations', component: TechnicalEvaluationComponent, data: {titulo: 'Evaluacion Tecnica'}  },\n    { path: 'technicalEvaluation/:id', component: TechnicalEvaluationFormComponent, data: {titulo: 'Formulario Evaluacion Tecnica'}  },\n    { path: 'legalContracts', component: LegalContractComponent, data: {titulo: 'Contrato Legal'}  },\n    { path: 'legalContract/:id', component: LegalContractFormComponent, data: {titulo: 'Formulario Contrato Legal'}  },\n    { path: 'performed', component: PerformedComponent, data: {titulo: 'Historial de actividades'}  },\n    { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\n];\n","import { Component, OnInit } from '@angular/core';\nimport { SnackService } from '../../../services/snack.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Product } from '../../../models/product.model';\nimport { AdmCondition } from '../../../models/admCondition.model';\nimport { AcquisitionRequest } from '../../../models/acquisitionRequest.model';\nimport { StatusService } from '../../../services/status/status.service';\nimport { Status } from '../../../models/status.model';\nimport { AcquisitionRequestService } from '../../../services/acquisitionRequest/acquisition-request.service';\nimport { PositionService } from '../../../services/position/position.service';\nimport { OfficeService } from '../../../services/office/office.service';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n\n  displayedProducts: string[] = ['name', 'description', 'quantity', 'price'];\n  displayedAdmConditions: string[] = ['priority', 'type', 'warranty'];\n  acquisitionRequest: AcquisitionRequest;\n  products: Product;\n  admConditions: AdmCondition;\n  status: Status;\n  currentOffice: string;\n  constructor(\n    public snackService: SnackService,\n    private statusService: StatusService,\n    private positionService: PositionService,\n    private officeService: OfficeService,\n    public acquisitionRequestService: AcquisitionRequestService,\n    public dialogRef: MatDialogRef<DetailComponent>\n  ) { }\n\n  ngOnInit(): void {\n    this.status = this.statusService.selectedStatus;\n    console.log('estado seleccionado ', this.status)\n    this.getAcquisitionRequest(this.status.codeRequest);\n    this.getCurrentState(this.status.codeRequest);\n  }\n\n  getAcquisitionRequest(id: string){\n    this.acquisitionRequestService.getACQRequest(id)\n      .subscribe(acquisitionRequest => {\n        if (!acquisitionRequest){\n          return;\n        }\n        this.acquisitionRequest = acquisitionRequest;\n        this.products = acquisitionRequest.products;\n        this.admConditions = acquisitionRequest.admConditions;\n\n      });\n  }\n\n  onClose(){\n    // this.userService.form.reset();\n    // this.userService.initializeFormGroup();\n    this.dialogRef.close();\n  }\n  \n  getCurrentState(codeRequest){\n    this.statusService.getCurrentStatus(codeRequest).subscribe( currentStatus => {\n      console.log('actual estado', currentStatus);\n      this.positionService.getPosition(currentStatus.procedure.positionId).subscribe(position => {\n          this.officeService.getOffice(position.officeId).subscribe(office => {\n            this.currentOffice = office.name;\n          });\n      })\n    });\n    // this._position.getPositions().subscribe(positions => this.positions = positions);\n  }\n}\n","<mat-toolbar>\n    <div class=\"fill-remaining-space\">\n        <span class=\"fill-remaining-space\">Detalle del Proceso</span>\n        <button class=\"btn-dialog-close\" mat-stroked-button (click)=\"onClose()\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n    </div>\n\n  </mat-toolbar>\n\n  <div class=\"container\" >\n\n    <div class=\"panelLeft30\" >\n   \n      <mat-card *ngIf=\"acquisitionRequest\">\n      \n        <div class=\"form\" >\n          <div class=\"formLeft\" >\n  \n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Codigo\"\n                value=\"{{ acquisitionRequest.code }}\"\n              />\n            </mat-form-field>\n      \n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Version\"\n                value=\"{{ acquisitionRequest.version }}\"\n              />\n            </mat-form-field>\n      \n           \n              <mat-form-field>\n                <input\n                  matInput\n                  placeholder=\"Vigencia\"\n                  [matDatepicker]=\"picker1\"\n                  value=\"{{ acquisitionRequest.validity }}\"\n                />\n                <mat-datepicker-toggle\n                  matSuffix\n                  [for]=\"picker1\"\n                ></mat-datepicker-toggle>\n                <mat-datepicker #picker1></mat-datepicker>\n              </mat-form-field>\n  \n          </div>\n          <div class=\"formRight\" >\n  \n  \n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"N de Solicitud\"\n                value=\"{{ acquisitionRequest.numRequest }}\"\n              />\n            </mat-form-field>\n        \n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"Fecha de Solicitud\"\n                [matDatepicker]=\"picker\"\n                value=\"{{ acquisitionRequest.requestDate }}\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n    \n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"N de Pac\"\n                value=\"{{ acquisitionRequest.nPac }}\"\n              />\n            </mat-form-field>\n  \n          </div>\n        </div>\n  \n  \n         \n      <div class=\"formCenter\" >\n  \n        <mat-form-field>\n          <input\n            matInput\n            placeholder=\"Lugar\"\n            value=\"{{ acquisitionRequest.place }}\"\n          />\n        </mat-form-field>\n        <mat-form-field>\n          <textarea\n            matInput\n            placeholder=\"¿Para que es necesaria la adquisición del bien o bienes?\"\n            value=\"{{ acquisitionRequest.question1 }}\"\n          ></textarea>\n        </mat-form-field>\n        <br />\n        <mat-form-field>\n          <textarea\n            matInput\n            placeholder=\"¿En que Oficina / Planta / Proyecto se usará el bien o bienes?\"\n            value=\"{{ acquisitionRequest.question2 }}\"\n          ></textarea>\n        </mat-form-field>\n        <br />\n        <mat-form-field>\n          <textarea\n            matInput\n            placeholder=\"¿Quién o quiénes harán uso del bien o bienes?\"\n            value=\"{{ acquisitionRequest.question3 }}\"\n          ></textarea>\n        </mat-form-field>\n    \n  \n      </div>\n  \n    </mat-card>\n  \n    </div>\n  \n  \n  \n    <div class=\"panelRight60\" >\n      <h3>Items</h3>\n      <table mat-table [dataSource]=\"products\" class=\"mat-elevation-z8\">\n        <!--- Note that these columns can be defined in any order.\n      The actual rendered columns are set as a property on the row definition\" -->\n  \n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef>Nombre</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"description\">\n          <th mat-header-cell *matHeaderCellDef>Descripcion</th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element.description }}\n          </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"quantity\">\n          <th mat-header-cell *matHeaderCellDef>Cantidad</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.quantity }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"price\">\n          <th mat-header-cell *matHeaderCellDef>Precio</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.price }}</td>\n        </ng-container>\n  \n        <tr mat-header-row *matHeaderRowDef=\"displayedProducts\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedProducts\"></tr>\n      </table>\n  \n      <br>\n      <h3>Condiciones Administrativas</h3>\n      <table mat-table [dataSource]=\"admConditions\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"priority\">\n          <th mat-header-cell *matHeaderCellDef>Prioridad</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.priority }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"type\">\n          <th mat-header-cell *matHeaderCellDef>Tipo</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"warranty\">\n          <th mat-header-cell *matHeaderCellDef>Garantia</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.warranty }}</td>\n        </ng-container>\n  \n        <tr mat-header-row *matHeaderRowDef=\"displayedAdmConditions\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedAdmConditions\"></tr>\n      </table>\n  \n    </div>\n  \n  </div>\n\n  <mat-toolbar>\n    <div class=\"fill-remaining-space\">\n        <span class=\"fill-remaining-space\">Actualmente le proceso esta en</span>\n       \n    </div>\n\n  </mat-toolbar>\n\n  <table>\n      <thead>\n          <tr>\n            <th>Tarea Actual</th>\n            <th>Oficina Actual</th>\n            <th>Fecha Inicio</th>\n          </tr>\n          \n      </thead>\n      <tbody>\n          <tr>\n            <td>{{status.name}}</td>\n            <td>{{currentOffice}}</td>\n            <td>{{status.dateAt}}</td>\n          </tr>\n           \n      </tbody>\n  </table>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { StatusService } from '../../services/status/status.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Status } from '../../models/status.model';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { IStatus } from '../../interfaces/interfaces';\nimport { DetailComponent } from './detail/detail.component';\n\n@Component({\n  selector: 'app-performed',\n  templateUrl: './performed.component.html',\n  styleUrls: ['./performed.component.scss']\n})\nexport class PerformedComponent implements OnInit {\n\n  listData: MatTableDataSource<any>;\n  displayedColumns: string[] = ['name', 'dateAt', 'status', 'actions'];\n  data: Status [] = [];\n  statuss: Status[] = [];\n  loading = false;\n  error: any;\n  detailComp: DetailComponent;\n\n  page = 0;\n  size = 5;\n\n  // @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  \n  constructor( public dialog: MatDialog, public statusService: StatusService ) { }\n\n  ngOnInit(): void {\n    this.submit();\n  }\n\n  submit() {\n    this.statusService.getStatusByUserId(this.statusService.searchform.value)\n          .subscribe(\n              (data) => {\n                // console.log('Se envio el form', data);\n                this.statuss = data.status;\n                this.data = this.statuss;\n                this.getData({pageIndex: this.page, pageSize: this.size});\n              },\n              (error: HttpErrorResponse) => {\n                console.log(error);\n              }\n          )\n  }\n\n\n// opciones para el paginador\n  getData(obj) {\n    let index = 0,\n    startingIndex = obj.pageIndex * obj.pageSize,\n    endingIndex = startingIndex + obj.pageSize;\n\n    this.data = this.statuss.filter(() => {\n      index++;\n      return (index > startingIndex && index <= endingIndex) ? true : false;\n    });\n  }\n\n  detail( row) {\n    this.statusService.reciveStatus(row);\n    // this.userService.populateForm(row);\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '60%';\n    const dialogRef = this.dialog.open(DetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // this.getUsers();\n    });\n  }\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Histórico de transacciones por fecha</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Transacciones usuario</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nuevo proceso\n  </button> -->\n</div>\n\n<div class=\"contenido\" >\n<h2></h2>\n<div class=\"searchBox\">\n    \n    <form [formGroup]=\"statusService.searchform\" (ngSubmit)=\"submit()\">\n        <input type=\"hidden\" formControlName=\"userId\">\n        \n        <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Desde\"\n              [matDatepicker]=\"startDate\"\n              formControlName=\"startDate\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"startDate\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #startDate></mat-datepicker>\n            <mat-error>La fecha desde no puede ser mayor a la fecha hasta.</mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Hasta\"\n              [matDatepicker]=\"endDate\"\n              formControlName=\"endDate\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"endDate\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #endDate></mat-datepicker>\n            <mat-error>La fecha hasta no puede ser menor a la fecha desde.</mat-error>\n          </mat-form-field>\n    \n          \n            <button mat-raised-button  [disabled] =\"!statusService.searchform.valid\" type=\"submit\"> Buscar</button>\n    </form>\n</div>\n\n</div>\n\n  <table mat-table [dataSource]=\"statuss\" class=\"mat-elevation-z8\"  >\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\" sticky>\n      <th mat-header-cell *matHeaderCellDef> PROCESO </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"dateAt\" sticky>\n      <th mat-header-cell *matHeaderCellDef> Fecha </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.dateAt}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"status\" sticky>\n      <th mat-header-cell *matHeaderCellDef> Estado </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.status}} </td>\n    </ng-container>\n\n    \n\n    \n      <!-- Star Column -->\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef> DETALLES </th>\n      <td mat-cell *matCellDef=\"let row\">\n        \n        <button mat-flat-button color=\"primary\" (click)=\"detail(row)\">Detalles</button>\n        \n      </td>\n    </ng-container>\n\n    \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    \n  </table>\n  <mat-paginator class=\"mat-elevation-z8\" [pageSizeOptions]=\"[5, 10, 25, 100]\" [pageSize]=\"10\" showFirstLastButtons></mat-paginator>","import { Pipe, PipeTransform } from '@angular/core';\nimport { Status } from '../../models/status.model';\nimport { validFilters } from '../../store/actions/statuss.actions';\n\n@Pipe({\n  name: 'estates'\n})\nexport class EstatesPipe implements PipeTransform {\n\n  transform(statuss: Status[], filter: validFilters ): Status[] {\n    // console.log('Estado entrante ', filter);\n    switch ( filter ) {\n      case 'proceso':\n        return statuss.filter( status => status.status === 'proceso');\n      case 'pendiente':\n        return statuss.filter( status => status.status === 'pendiente');\n      case 'terminado':\n        return statuss.filter( status => status.status === 'terminado');\n      default:\n        return statuss;\n    }\n\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatDate'\n})\nexport class FormatDatePipe implements PipeTransform {\n\n  transform(date: string, args: string): any {\n    console.log('fecha ', date)\n    if (!date) { return ''; }\n    if (!args ) { return date; }\n    const months = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'];\n    // console.log('argumento ', args);\n    const date1 = new Date(date);\n    let result;\n\n    if ( args === 'day' ) {\n      result = date1.getDate();\n    } else if ( args === 'month' ) {\n      result = months[date1.getMonth()];\n    } else {\n      result = date1.getFullYear();\n    }\n\n    return result;\n\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncateText'\n})\nexport class TruncateTextPipe implements PipeTransform {\n  transform(value: string, length: number): string {\n    // https://en.wikipedia.org/wiki/Longest_word_in_English\n    const biggestWord = 50;\n    const elipses = '...';\n\n\n    if (typeof value === 'undefined') { return value; }\n    if (value.length <= length) { return value; }\n\n    // .. truncate to about correct lenght\n    let truncatedText = value.slice(0, length + biggestWord);\n\n    // .. now nibble ends till correct length\n    while (truncatedText.length > length - elipses.length) {\n        const lastSpace = truncatedText.lastIndexOf(' ');\n\n        if (lastSpace === -1) { break; }\n\n        truncatedText = truncatedText.slice(0, lastSpace).replace(/[!,.?]$/, '');\n\n    }\n\n   //  console.log((truncatedText + elipses).length);\n\n    return truncatedText + elipses;\n }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Position } from 'src/app/models/position.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { PositionService } from 'src/app/services/position/position.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SnackService } from 'src/app/services/snack.service';\n\n\n@Component({\n  selector: 'app-position-form',\n  templateUrl: './position-form.component.html',\n  styleUrls: ['./position-form.component.scss']\n})\nexport class PositionFormComponent implements OnInit {\n\n  position: Position;\n  public positionForm: FormGroup;\n  officeId: string;\n  positionId: string;\n  constructor(\n    public _position: PositionService,\n    private positionFormBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<PositionFormComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: PositionFormComponent,\n    public snackService: SnackService,\n  ) { }\n\n  ngOnInit(): void {\n    if(this.data.positionId !== 'new'){\n      this.getPosition(this.data.positionId);\n    }\n\n    this.positionForm = this.positionFormBuilder.group({\n      name:[null, Validators.required],\n      officeId:[this.data.officeId],\n      active:[null, Validators.required],\n\n    });\n  }\n  getPosition(id: string){\n    this._position.getPosition(id)\n      .subscribe(position => {\n        if(!position){\n          this.onCloseDialog();\n        }\n        const {name, officeId, active} = position;\n        this.position = position;\n        this.positionForm.setValue({name, officeId, active });\n      })\n  }\n  onCloseDialog(){\n    this.dialogRef.close();\n  }\n\n  save() {\n\n    const {name} = this.positionForm.value;\n    if ( this.position ) {\n      // update\n      const data = {\n        ...this.positionForm.value,\n        id: this.position.id,\n        officeId: this.position.officeId\n      }\n\n      this._position.updatePosition( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el cargo ' + `${ name }`);\n          this.onCloseDialog();\n        })\n\n    } else {\n      // create\n\n      this._position.createPosition( this.positionForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente el cargo '+ `${name }`);\n            this.onCloseDialog();\n        })\n    }\n\n\n\n  }\n\n\n}\n","<mat-toolbar>\n  <div class=\"fill-remaining-space\">\n    <span class=\"fill-remaining-space\">Cargo</span>\n  </div>\n</mat-toolbar>\n\n<form [formGroup]=\"positionForm\" (submit)=\"save()\">\n  <div class=\"controles-container\">\n  <mat-form-field>\n    <input matInput placeholder=\"Nombre\" formControlName=\"name\" />\n    <mat-error>Este campo es obligatorio.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-select formControlName=\"active\" placeholder=\"Activo\">\n\n\n        <mat-option value=\"true\">Si</mat-option>\n        <mat-option value=\"false\">No</mat-option>\n\n    </mat-select>\n    <mat-error>Este campo es obligatorio.</mat-error>\n  </mat-form-field>\n  </div>\n  <div class=\"button-row\">\n  <button\n    mat-raised-button\n    color=\"primary\"\n    type=\"submit\"\n    class=\"button\"\n    [disabled]=\"!positionForm.valid\"\n  >\n    Guardar\n  </button>\n  <button mat-button mat-dialog-close>Cerrar</button>\n  </div>\n  </form>\n","import { Component, OnInit } from '@angular/core';\nimport { Position } from 'src/app/models/position.model';\nimport { PositionService } from 'src/app/services/position/position.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-position',\n  templateUrl: './position.component.html',\n  styleUrls: ['./position.component.scss']\n})\nexport class PositionComponent implements OnInit {\n\n  positions: Position[] = [];\n  displayedColumns: string[] = ['name', 'officeId', 'active','edit'];\n\n  constructor(\n    public _position: PositionService,\n    private dialogRef: MatDialogRef<PositionComponent>\n  ) { }\n\n  ngOnInit(): void {\n    this.getPositions();\n  }\n\n  getPositions(){\n    this._position.getPositions()\n    .subscribe(positions => this.positions = positions);\n}\n\nonCloseDialog(){\n\n  this.dialogRef.close();\n}\n\n}\n","<table mat-table [dataSource]=\"positions\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"officeId\">\n    <th mat-header-cell *matHeaderCellDef> OfficeId </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.officeId}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"active\">\n    <th mat-header-cell *matHeaderCellDef> Active </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.active}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> edit </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button [routerLink]=\"['/acquisitionRequest', element.id ]\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Procedure } from 'src/app/models/procedure.model';\nimport { ProcedureService } from 'src/app/services/procedure/procedure.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PositionService } from 'src/app/services/position/position.service';\nimport { Position } from 'src/app/models/position.model';\n\n@Component({\n  selector: 'app-procedure-form',\n  templateUrl: './procedure-form.component.html',\n  styleUrls: ['./procedure-form.component.scss']\n})\nexport class ProcedureFormComponent implements OnInit {\n\n  public procedureForm:FormGroup;\n  public procedure: Procedure;\n  public positions: Position [] = [];\n  constructor(\n    public _procedure: ProcedureService,\n    public _position: PositionService,\n    public router: Router,\n    public activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    public snackService: SnackService,\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params\n        .subscribe( ({ id }) => this.getProcedure( id ) );\n\n    this.procedureForm = this.formBuilder.group({\n          positionId:[null, Validators.required],\n          procedureName:[null, Validators.required],\n          order:[null, Validators.required],\n\n        });\n    this.getPositions();\n  }\n\n  getProcedure(id: string){\n\n    if(id === 'new'){\n      return;\n    }\n    this._procedure.getProcedure(id)\n      .subscribe(procedure => {\n        if ( !procedure ) {\n          return this.router.navigateByUrl(`/procedures`);\n        }\n        const {positionId, procedureName, order} = procedure;\n        this.procedure = procedure;\n        this.procedureForm.setValue({positionId, procedureName, order });\n      })\n  }\n\n  save() {\n\n    const {procedureName} = this.procedureForm.value;\n\n    if ( this.procedure ) {\n      // update\n      const data = {\n        ...this.procedureForm.value,\n        id: this.procedure.id\n      }\n      this._procedure.updateProcedure( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el Proceso ' + `${ procedureName }`);\n        })\n\n    } else {\n      // create\n\n      this._procedure.createProcedure( this.procedureForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente el Proceso '+ `${procedureName }`);\n            this.router.navigateByUrl(`/procedure/${ resp.procedure.id }`)\n        })\n    }\n\n\n\n  }\n\n  getPositions(){\n    this._position.getPositions().subscribe(positions => this.positions = positions);\n  }\n\n}\n","<div class=\"content\">\n  <mat-card>\n    <mat-card-title>Proceso</mat-card-title>\n\n    <mat-card-content>\n      <form [formGroup]=\"procedureForm\" (submit)=\"save()\">\n        <div class=\"textarea-container\">\n          <mat-form-field>\n            <mat-select formControlName=\"positionId\" placeholder=\"Cargo\">\n              <mat-option>None</mat-option>\n              <ng-container *ngFor=\"let position of positions\">\n                <mat-option value=\"{{position.id}}\">{{position.name}}</mat-option>\n              </ng-container>\n            </mat-select>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n        <mat-form-field>\n          <textarea matInput placeholder=\"Nombre del Proceso\" formControlName=\"procedureName\"></textarea>\n          <mat-error>\n            El campo es requerido.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <textarea matInput placeholder=\"Order\" formControlName=\"order\"></textarea>\n          <mat-error>\n            El campo es requerido.\n          </mat-error>\n        </mat-form-field>\n\n\n      </div>\n      <div class=\"button-row\">\n        <button\n          mat-raised-button\n          color=\"primary\"\n          type=\"submit\"\n          class=\"button\"\n          [disabled]=\"!procedureForm.valid\"\n        >\n          Guardar\n        </button>\n      </div>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Procedure } from 'src/app/models/procedure.model';\nimport { ProcedureService } from 'src/app/services/procedure/procedure.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { PositionService } from 'src/app/services/position/position.service';\nimport { Position } from 'src/app/models/position.model';\n\n@Component({\n  selector: 'app-procedure',\n  templateUrl: './procedure.component.html',\n  styleUrls: ['./procedure.component.scss']\n})\nexport class ProcedureComponent implements OnInit {\n\n  procedures: Procedure [] = [];\n  displayedColumns: string[] = ['positionId', 'procedureName', 'order', 'edit', 'delete'];\n  positions: Position [] = [];\n  position: Position;\n  name: string;\n\n  constructor(\n    public _procedure: ProcedureService,\n    public snackService: SnackService,\n    public _position: PositionService,\n  ) { }\n\n\n  ngOnInit(): void {\n    this.getProcedures();\n    this.getPositions();\n  }\n  getProcedures(){\n    this._procedure.getProcedures()\n      .subscribe(procedures => this.procedures = procedures);\n  }\n\n  delete( id: string ) {\n\n    this._procedure.deleteProcedure( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente el Proceso ');\n              this.getProcedures();\n            });\n\n  }\n  getPositions(){\n    this._position.getPositions()\n      .subscribe(positions => this.positions = positions);\n  }\n\n  getNamePosition(id: string){\n    return this.position = this.positions.find(p => p.id === id);\n\n  }\n\n  namePosition(id: string){\n    console.log('procedimiento ', this.getNamePosition(id));\n    this.name = this.getNamePosition(id).name;\n  }\n\n}\n","<table mat-table [dataSource]=\"procedures\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"positionId\">\n    <th mat-header-cell *matHeaderCellDef> Cargo </th>\n    <!-- {{namePosition(element.positionId)}}{{name}}   -->\n    <td mat-cell *matCellDef=\"let element\"> {{element.positionId}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"procedureName\">\n    <th mat-header-cell *matHeaderCellDef> Nombre Proceso </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.procedureName}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"order\">\n    <th mat-header-cell *matHeaderCellDef> Orden </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.order}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button [routerLink]=\"['/procedure', element.id ]\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>borrar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, FormControl } from '@angular/forms';\nimport { ProcessStart } from 'src/app/models/processStart.model';\nimport { ProcessStartService } from 'src/app/services/processStart/process-start.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { Document } from 'src/app/models/document.model';\nimport { DocumentComponent } from '../document/document.component';\nimport { AuthService } from '../../services/auth.service';\nimport * as actions from '../../store/actions/status.actions';\nimport { Status } from '../../models/status.model';\nimport { User } from '../../models/user';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-process-start-form',\n  templateUrl: './process-start-form.component.html',\n  styleUrls: ['./process-start-form.component.scss']\n})\nexport class ProcessStartFormComponent implements OnInit {\n\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  public processStartForm: FormGroup;\n  public processStart: ProcessStart;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document','preview','name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n  error:any={isError:false,errorMessage:''};\n\n  constructor(\n    public _processStart: ProcessStartService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    this.processStartForm = this.formBuilder.group({\n      category:[null, Validators.required],\n      startDate:[null, Validators.required],\n      endDate:[null, [Validators.required]],\n\n    }, {validator: this.MustMatch( 'startDate', 'endDate')} );\n\n    this.store.select('status').subscribe(({ status }) => {\n          if (status != null) {\n            // console.log('el estado actual es ', status);\n            this.currentStatus = status;\n            if ( status.formId != null) {\n              this.getProcessStart( status.formId);\n            } else {\n              this.getProcessStart( 'new');\n            }\n          }\n        });\n\n  }\n\n\n\n  getProcessStart(id: string){\n\n    if (id === 'new'){\n      return;\n    }\n    this._processStart.getPSD(id)\n      .subscribe(processStart => {\n\n        if ( processStart ){\n        const {category, startDate, endDate} = processStart;\n        this.processStart = processStart;\n        this.documents = processStart.documents;\n        this.processStartForm.setValue({category, startDate, endDate});\n        }\n      });\n  }\n\n  terminate() {\n    if (this.currentStatus.procedureId) {\n        const std: Status = Status.fromState( this.currentStatus );\n        if (this.documents.length > 0) {\n              std.userId = this.currentUser.id;\n              std.status = 'terminado';\n              // console.log('current status ', std);\n              this.store.dispatch( actions.updateStatus({ status: std }));\n            }else {\n                std.status = 'pendiente';\n            }\n    }\n  }\n\n  save() {\n\n    const {category} = this.processStartForm.value;\n\n    if ( this.processStart ) {\n      // update\n      const data = {\n        ...this.processStartForm.value,\n        id: this.processStart.id\n      };\n      this._processStart.updateProcessStart( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el Inicio de Proceso ' + `${ category }`);\n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/processStarts');\n          } else {\n            this.terminate();\n          }\n        });\n\n    } else {\n      // create\n\n      this._processStart.createProcessStart( this.processStartForm.value )\n          .subscribe( (resp: any) => {\n            if (this.currentStatus.procedureId) {\n                const std: Status = Status.fromState( this.currentStatus );\n                std.formId = resp.processStart.id;\n                std.userId = this.currentUser.id;\n                std.status = 'pendiente';\n                // console.log('current status ', std);\n                this.store.dispatch( actions.updateStatus({ status: std }));\n            }\n            this.getProcessStart(resp.processStart.id);\n            this.snackService.success('Se ha creado correctamente el Inicio de Proceso ' + `${category }`);\n\n            // this.router.navigateByUrl(`/processStart/${ resp.processStart.id }`)\n        });\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._processStart.deleteProcessStart( id )\n            .subscribe ( () =>\n            { this._processStart.getProcessStarts();\n              this.snackService.warn('Se ha borrado correctamente el Inicio de Proceso ');\n            });\n\n  }\n\n\nMustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n          // return if another validator has already found an error on the matchingControl\n          return;\n      }\n\n      // set error on matchingControl if validation fails\n      if (control.value > matchingControl.value) {\n          matchingControl.setErrors({ mustMatch: true });\n      } else {\n          matchingControl.setErrors(null);\n      }\n  }\n}\n\n// compareTwoDates(){\n//    if(new Date(this.processStartForm.controls['endDate'].value)<new Date(this.processStartForm.controls['startDate'].value)){\n//       return null;\n//    }\n//    else{\n//      return true;\n//    }\n// }\n\n  //document\n  getDocuments(){\n    this._document.getDocuments()\n      .subscribe(documents => this.documents = documents);\n  }\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.processStart.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n\n      this.getProcessStart(this.processStart.id);\n      // this.sendEvent();\n\n    });\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getProcessStart(this.processStart.id);\n      console.log('Documentos cargados', this.documents);\n      this.terminate();\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src: src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getProcessStart(this.processStart.id);\n              console.log('Documentos cargados', this.documents);\n              this.terminate();\n            });\n\n  }\n\n  /* sendEvent() {\n    // console.log('eniva evento');\n    this.eventRefresh.emit(true);\n  } */\n\n  createDocument(){\n    const document: Document = {id:'',name:\"Inicio Proceso\",type: \"\", formId:this.processStart.id,src:\"./uploads\", status: \"active\", createDate: new Date()};\n    this._document.createDocument(document)\n      .subscribe(() =>\n      {\n        this._document.getDocuments();\n        this.snackService.success('Se ha creado correctamente el documento ');\n        this.getProcessStart(this.processStart.id);\n\n      }\n      );\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getProcessStart(this.processStart.id);\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src == \"./uploads\") {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n}\n","\n<div class=\"formHeader\" >\n  <div class=\"title\" >\n  <h2>Inicio de proceso</h2>\n  <h3><strong>Solicitud: </strong>Compra de material del seguridad industrial</h3>\n</div>\n</div>\n\n<div class=\"container\">\n \n  <div class=\"panelLeft30\" >\n\n    <mat-card>\n      <!-- <mat-card-title>Inicio Proceso</mat-card-title> -->\n     \n      <mat-card-content>\n        \n        <form [formGroup]=\"processStartForm\" (submit)=\"save()\" style=\"margin: 30px 0 0 0;\">\n\n          <mat-form-field>\n            <mat-select formControlName=\"category\" placeholder=\"Categoria\" width=\"100%\">\n              <mat-option value=\"categoria 1\" >Categoria 1</mat-option>\n              <mat-option value=\"categoria 1\" >Categoria 2</mat-option>\n            </mat-select>\n            <mat-error>\n              Este campo es obligatorio.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Fecha Inicio\"\n              [matDatepicker]=\"picker1\"\n              formControlName=\"startDate\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"picker1\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker1></mat-datepicker>\n            <mat-error> Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Fecha Final\"\n              [matDatepicker]=\"picker\"\n              formControlName=\"endDate\"\n\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error>Este campo es obligatorio y no puede ser menor a la fecha de inicio. </mat-error>\n          </mat-form-field>\n\n\n        <div class=\"button-row\">\n          <br>\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!processStartForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n\n\n  <div class=\"panelRight70\">\n    <mat-card-title>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"createDocument()\"\n        [disabled]=\"!processStart\"\n      >\n        <mat-icon>add</mat-icon>Documento\n      </button>\n    </mat-card-title>\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Documentos</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"document\">\n            <th mat-header-cell *matHeaderCellDef>Documento</th>\n            <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n              <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef>Ver</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openPreviewDocumentDialog(element.src)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateDocumentDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteDocument(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"sendEvent()\"\n      >\n        <mat-icon>add</mat-icon>Enviar evento\n   </button> -->\n\n\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ProcessStart } from 'src/app/models/processStart.model';\nimport { ProcessStartService } from 'src/app/services/processStart/process-start.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n\n@Component({\n  selector: 'app-process-start',\n  templateUrl: './process-start.component.html',\n  styleUrls: ['./process-start.component.scss']\n})\nexport class ProcessStartComponent implements OnInit {\n\n  processStarts: ProcessStart[] = [];\n  displayedColumns: string[] = ['category','startDate', 'endDate','edit','delete'];\n\n  constructor(\n    public _processStart: ProcessStartService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.getProcessStarts();\n  }\n\n  getProcessStarts(){\n    this._processStart.getProcessStarts()\n      .subscribe(processStarts => this.processStarts = processStarts);\n  }\n\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/processStart/edit');\n  }\n\n  delete(id: string){\n    this._processStart.deleteProcessStart(id)\n      .subscribe(() =>\n      {\n        this.snackService.warn('Se ha borrado correctamente la Orden de Compra ');\n        this.getProcessStarts();\n      })\n  }\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Inicios de proceso</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Inicios de proceso</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/processStart/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva inicio de proceso\n  </button> -->\n</div>  \n\n<table mat-table [dataSource]=\"processStarts\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"category\">\n    <th mat-header-cell *matHeaderCellDef> Categoria </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.category}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"startDate\">\n    <th mat-header-cell *matHeaderCellDef> Fecha Inicio </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.startDate}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"endDate\">\n    <th mat-header-cell *matHeaderCellDef> Fecha Final </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.endDate}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>eliminar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Product } from 'src/app/models/product.model';\nimport { ProductService } from 'src/app/services/product/product.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { SnackService } from 'src/app/services/snack.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n\n  product: Product;// = new Product(\"\",\"\",\"\",\"\",null,\"\");\n  public productForm: FormGroup;\n  requestId: string;\n  productId: string;\n  constructor(\n    public _product: ProductService,\n    public router: Router,\n    public activatedRoute: ActivatedRoute,\n    private dialogRef: MatDialogRef<ProductComponent>,\n    private productFormBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: ProductComponent,\n    public snackService: SnackService,\n\n  ) {  }\n\n  ngOnInit(): void {\n    if(this.data.productId !== 'new'){\n      this.getProduct(this.data.productId);\n    }\n\n    this.productForm = this.productFormBuilder.group({\n      name:[null, Validators.required],\n      description:[null, Validators.required],\n      quantity:[null, Validators.required],\n      price:[null, [Validators.required, Validators.pattern(/^(0|[1-9]\\d*)(\\.\\d+)?$/)]],\n      requestId:[this.data.requestId],\n\n    });\n  }\n  getProduct(id: string){\n    this._product.getProduct(id)\n      .subscribe(product => {\n        if(!product){\n          this.onCloseDialog();\n        }\n        const {name, description, quantity, price, requestId} = product;\n        this.product = product;\n        this.productForm.setValue({name, description, quantity, price, requestId });\n      })\n  }\n  onCloseDialog(){\n\n    this.dialogRef.close();\n  }\n  save() {\n\n    const {name} = this.productForm.value;\n    if ( this.product ) {\n      // update\n      const data = {\n        ...this.productForm.value,\n        id: this.product.id,\n        requestId: this.product.requestId\n      }\n      console.log(data);\n      this._product.updateProduct( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el Item ' + `${ name }`);\n          this.onCloseDialog();\n        })\n\n    } else {\n      // create\n\n      this._product.createProduct( this.productForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente el Item '+ `${name }`);\n            this.onCloseDialog();\n        })\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._product.deleteProduct( id )\n            .subscribe ( () =>\n            { this._product.getProducts();\n              this.snackService.warn('Se ha eliminado correctamente el Item ');\n            });\n\n  }\n\n\n\n}\n","<!--Form Acquisition Request-->\n\n<mat-toolbar>\n  <div class=\"fill-remaining-space\">\n    <span class=\"fill-remaining-space\">Item</span>\n  </div>\n</mat-toolbar>\n\n<form [formGroup]=\"productForm\" (submit)=\"save()\">\n  <mat-grid-list cols=\"2\" rowHeight=\"1:1\">\n\n  <div class=\"controles-container\">\n    <mat-form-field>\n      <input matInput placeholder=\"Nombre\" formControlName=\"name\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput placeholder=\"Descripcion\" formControlName=\"description\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n  </div>\n\n  <div class=\"controles-container\">\n    <mat-form-field>\n      <input matInput placeholder=\"Cantidad\" formControlName=\"quantity\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput type=\"number\" placeholder=\"Price\" formControlName=\"price\" />\n      <mat-error>Este campo es obligatorio, debe ser un numero.</mat-error>\n    </mat-form-field>\n  </div>\n\n    <div class=\"button-row\">\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        class=\"button\"\n        [disabled]=\"!productForm.valid\"\n      >\n        Guardar\n      </button>\n      <button mat-button mat-dialog-close>Cerrar</button>\n    </div>\n\n\n</mat-grid-list>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProposalComparison } from 'src/app/models/proposalComparison.model';\nimport { ProposalComparisonService } from 'src/app/services/proposalComparison/proposal-comparison.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { DocumentComponent } from '../document/document.component';\nimport { Document } from 'src/app/models/document.model';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Status } from '../../models/status.model';\nimport * as actions from '../../store/actions/status.actions';\nimport { User } from '../../models/user';\nimport { AuthService } from '../../services/auth.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-proposal-comparison-form',\n  templateUrl: './proposal-comparison-form.component.html',\n  styleUrls: ['./proposal-comparison-form.component.scss']\n})\nexport class ProposalComparisonFormComponent implements OnInit {\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n  public proposalComparisonForm: FormGroup;\n  public proposalComparison: ProposalComparison;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document', 'preview', 'name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n\n  constructor(\n    public _proposalComparison: ProposalComparisonService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    this.proposalComparisonForm = this.formBuilder.group({\n          code: [null, Validators.required],\n          description: [null],\n          provider: [null, Validators.required],\n\n        });\n    this.store.select('status').subscribe(({ status }) => {\n          if (status != null) {\n            // console.log('el estado actual es ', status);\n            this.currentStatus = status;\n            if ( status.formId != null) {\n              this.getProposalComparison( status.formId);\n            } else {\n              this.getProposalComparison( 'new');\n            }\n          }\n        });\n  }\n\n  getProposalComparison(id: string){\n\n    if (id === 'new'){\n      return;\n    }\n    this._proposalComparison.getPCD(id)\n      .subscribe(proposalComparison => {\n\n        if ( proposalComparison ) {\n          const {code, description,provider} = proposalComparison;\n          this.proposalComparison = proposalComparison;\n          this.documents = proposalComparison.documents;\n          this.proposalComparisonForm.setValue({code, description,provider});\n        }\n      });\n  }\n\n  terminate() {\n    if (this.currentStatus.procedureId) {\n      const std: Status = Status.fromState( this.currentStatus );\n      if (this.documents.length > 0) {\n            std.userId = this.currentUser.id;\n            std.status = 'terminado';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n          }else {\n              std.status = 'pendiente';\n          }\n    }\n  }\n\n  save() {\n\n    const {code} = this.proposalComparisonForm.value;\n\n    if ( this.proposalComparison ) {\n      // update\n      const data = {\n        ...this.proposalComparisonForm.value,\n        id: this.proposalComparison.id\n      };\n      this._proposalComparison.updateProposalComparison( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la Comparacion Propuesta ' + `${ code }`);\n          \n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/proposalComparisons');\n          } else {\n            this.terminate();\n          }\n        });\n\n    } else {\n      // create\n\n      this._proposalComparison.createProposalComparison( this.proposalComparisonForm.value )\n          .subscribe( (resp: any) => {\n            // console.log('valor de la certificación guardada', resp);\n            if (this.currentStatus.procedureId) {\n              const std: Status = Status.fromState( this.currentStatus );\n              std.formId = resp.proposalComparison.id;\n              std.userId = this.currentUser.id;\n              std.status = 'pendiente';\n              // console.log('current status ', std);\n              this.store.dispatch( actions.updateStatus({ status: std }));\n            }\n\n            this.getProposalComparison(resp.proposalComparison.id);\n            this.snackService.success('Se ha creado correctamente la Comparacion Propuesta ' + `${code }`);\n\n            // this.router.navigateByUrl(`/proposalComparison/${ resp.proposalComparison.id }`)\n        });\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._proposalComparison.deleteProposalComparison( id )\n            .subscribe ( () =>\n            { this._proposalComparison.getProposalComparisons();\n              this.snackService.warn('Se ha borrado correctamente la Comparacion Propuesta ');\n            });\n\n  }\n\n  // document\n  getDocuments(){\n    this._document.getDocuments()\n      .subscribe(documents => this.documents = documents);\n  }\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.proposalComparison.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n\n      this.getProposalComparison(this.proposalComparison.id);\n      // this.sendEvent();\n    });\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getProposalComparison(this.proposalComparison.id);\n      this.terminate();\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getProposalComparison(this.proposalComparison.id);\n              this.terminate();\n            });\n\n  }\n\n  /* sendEvent() {\n    // console.log('eniva evento');\n    this.eventRefresh.emit(true);\n  } */\n\n  createDocument(){\n    const document: Document = {id:'',name:\"Comparacion Propuesta\",type: \"\", formId:this.proposalComparison.id,src:\"./uploads\", status:\"active\", createDate: new Date()};\n    this._document.createDocument(document)\n      .subscribe(() =>\n      {\n        this._document.getDocuments();\n        this.snackService.success('Se ha creado correctamente el documento ');\n        this.getProposalComparison(this.proposalComparison.id);\n      }\n      );\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getProposalComparison(this.proposalComparison.id);\n                  // this.sendEvent();\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src === './uploads') {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n\n}\n","<div class=\"container\">\n  <div class=\"panelLeft30\" >\n\n    <mat-card>\n      <mat-card-title>Tabla Comparativa</mat-card-title>\n\n      <mat-card-content>\n        <form [formGroup]=\"proposalComparisonForm\" (submit)=\"save()\">\n          \n          <mat-form-field>\n            <textarea matInput placeholder=\"Codigo\" formControlName=\"code\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n        \n          <mat-form-field>\n            <textarea matInput placeholder=\"Proveedor Ganador\" formControlName=\"provider\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <textarea matInput placeholder=\"Observacion\" formControlName=\"description\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n       \n\n        <div class=\"button-row\">\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!proposalComparisonForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n\n\n  <div class=\"panelRight70\">\n    <mat-card-title>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"createDocument()\"\n        [disabled]=\"!proposalComparison\"\n      >\n        <mat-icon>add</mat-icon>Documento\n      </button>\n    </mat-card-title>\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Documentos</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"document\">\n            <th mat-header-cell *matHeaderCellDef>Documento</th>\n            <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n              <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef>Ver</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openPreviewDocumentDialog(element.src)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateDocumentDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteDocument(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"sendEvent()\"\n      >\n        <mat-icon>add</mat-icon>Enviar evento\n   </button> -->\n\n\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ProposalComparison } from 'src/app/models/proposalComparison.model';\nimport { ProposalComparisonService } from 'src/app/services/proposalComparison/proposal-comparison.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-proposal-comparison',\n  templateUrl: './proposal-comparison.component.html',\n  styleUrls: ['./proposal-comparison.component.scss']\n})\nexport class ProposalComparisonComponent implements OnInit {\n\n  proposalComparisons: ProposalComparison[] = [];\n  displayedColumns: string[] = ['code','description','edit','delete'];\n\n  constructor(\n    public _proposalComparison: ProposalComparisonService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.getProposalComparisons();\n  }\n\n  getProposalComparisons(){\n    this._proposalComparison.getProposalComparisons()\n      .subscribe(proposalComparisons => this.proposalComparisons = proposalComparisons);\n  }\n\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/proposalComparison/edit');\n  }\n\n  delete(id: string){\n    this._proposalComparison.deleteProposalComparison(id)\n      .subscribe(() =>\n      {\n        this.snackService.warn('Se ha borrado correctamente la Propuesta Comparacion ');\n        this.getProposalComparisons();\n      })\n  }\n\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Comparaciones de propuestas</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Comparaciones de propuestas</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/proposalComparison/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva comparación de propuesta\n  </button> -->\n</div>  \n\n<table mat-table [dataSource]=\"proposalComparisons\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef> Codigo de Todo </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef> Descripcion </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>eliminar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ProposalEvaluation } from 'src/app/models/proposalEvaluation.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProposalProvider } from 'src/app/models/proposalProvider.model';\nimport { ProposalProviderService } from 'src/app/services/proposalProvider/proposal-provider.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProposalEvaluationService } from 'src/app/services/proposalEvaluation/proposal-evaluation.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DocumentComponent } from '../document/document.component';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Status } from '../../models/status.model';\nimport * as actions from '../../store/actions/status.actions';\nimport { User } from '../../models/user';\nimport { AuthService } from '../../services/auth.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\n\n@Component({\n  selector: 'app-proposal-evaluation-form',\n  templateUrl: './proposal-evaluation-form.component.html',\n  styleUrls: ['./proposal-evaluation-form.component.scss']\n})\nexport class ProposalEvaluationFormComponent implements OnInit {\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n  public proposalEvaluationForm: FormGroup;\n  public proposalEvaluation: ProposalEvaluation;\n  proposalProviders: ProposalProvider [] = [];\n  displayedProposalProviders: string[] = ['name', 'nit', 'edit', 'delete'];\n\n  iconFile = '../assets/images/icon/add-file.png';\n\n  constructor(\n   public _proposalProvider: ProposalProviderService,\n   private authService: AuthService,\n   private formBuilder: FormBuilder,\n   private router: Router,\n   private dialog: MatDialog,\n   public _proposalEvaluation: ProposalEvaluationService,\n   public snackService: SnackService,\n   public modalFileUploadService: ModalFileUploadService,\n   private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n\n  this.currentUser =  JSON.parse(this.authService.getUser());\n  this.proposalEvaluationForm = this.formBuilder.group({\n    code: [null, Validators.required],\n\n  });\n\n  this.store.select('status').subscribe(({ status }) => {\n    if (status != null) {\n      // console.log('el estado actual es ', status);\n      this.currentStatus = status;\n      if ( status.formId != null) {\n        this.getProposalEvaluation( status.formId);\n      } else {\n        this.getProposalEvaluation( 'new');\n      }\n    }\n  });\n\n\n}\n\ngetProposalEvaluation(id: string){\n\n  if (id === 'new'){\n    return;\n  }\n  this._proposalEvaluation.getPEP(id)\n    .subscribe(proposalEvaluation => {\n      // if ( !proposalEvaluation ) {\n      //   return this.router.navigateByUrl(`/proposalEvaluations`);\n      // }\n      if ( proposalEvaluation ){\n      const {code} = proposalEvaluation;\n      this.proposalEvaluation = proposalEvaluation;\n\n      this.proposalProviders = proposalEvaluation.proposalProviders;\n\n      this.proposalEvaluationForm.setValue({code });\n      }\n\n    });\n}\n\n\nsave() {\n\n  const {reserveCode} = this.proposalEvaluationForm.value;\n\n  if ( this.proposalEvaluation ) {\n    // update\n    const data = {\n      ...this.proposalEvaluationForm.value,\n      id: this.proposalEvaluation.id\n    };\n    this._proposalEvaluation.updateProposalEvaluation( data )\n      .subscribe( resp => {\n        this.snackService.success('Se ha actualizado correctamente la Evaluacion ' + `${ reserveCode }`);\n        if (!this.currentStatus.procedureId) {\n          this.router.navigateByUrl('/budgetCertifications');\n        } else {\n          // analizar la forma cambiar de estado cuando modifica\n          // this.terminate();\n        }\n      });\n\n  } else {\n    // create\n\n    this._proposalEvaluation.createProposalEvaluation( this.proposalEvaluationForm.value )\n        .subscribe( (resp: any) => {\n          // console.log('valor de la certificación guardada', resp);\n\n          if (this.currentStatus.procedureId){\n            const std: Status = Status.fromState( this.currentStatus );\n            std.formId = resp.proposalEvaluation.id;\n            std.userId = this.currentUser.id;\n            std.status = 'pendiente';\n              // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n          }\n\n          this.getProposalEvaluation(resp.proposalEvaluation.id);\n          this.snackService.success('Se ha creado correctamente la Evaluacion ' + `${reserveCode }`);\n\n          // this.router.navigateByUrl(`/proposalEvaluation/${ resp.proposalEvaluation.id }`)\n      });\n  }\n\n\n\n}\n\ndelete( id: string ) {\n\n  this._proposalEvaluation.deleteProposalEvaluation( id )\n          .subscribe ( () =>\n          { this._proposalEvaluation.getProposalEvaluations();\n            this.snackService.warn('Se ha borrado correctamente la Certificacion Presupuestaria ');\n          });\n\n}\n\n\nopenAddDocumentDialog(){\n  const documentDialogRef = this.dialog.open(DocumentComponent, {\n    data: { formId: this.proposalEvaluation.id,\n            documentId: 'new'\n    }\n  });\n  documentDialogRef.afterClosed().subscribe( result => {\n\n    this.getProposalEvaluation(this.proposalEvaluation.id);\n\n\n  });\n}\nopenUpdateDocumentDialog(id: string){\n  const documentDialogRef = this.dialog.open(DocumentComponent, {\n    data: { documentId: id}\n  });\n  documentDialogRef.afterClosed().subscribe( result => {\n    this.getProposalEvaluation(this.proposalEvaluation.id);\n    console.log('cierra dialog')\n  });\n}\n\n\nchangeFile(id: string) {\n  this.dialog.open(ModalFileUploadComponent);\n  this.modalFileUploadService.showModal( 'docs', id );\n\n  this.modalFileUploadService.modalNotification\n              .subscribe( (resp: any) => {\n                // console.log(resp);\n\n                this.changeIcon(resp.document.src);\n                this.getProposalEvaluation(this.proposalEvaluation.id);\n              });\n}\n\nchangeIcon(src) {\n\n  if (src === './uploads') {\n    this.iconFile = '../assets/images/icon/add-file.png';\n    return;\n  }\n  const ext = src.split('.');\n  // console.log('extencion', ext);\n\n  if (ext[1] === 'pdf') {\n    this.iconFile = '../assets/images/icon/pdf.png';\n  }\n\n\n}\n\n}\n","<div class=\"container\">\n  <div class=\"panelLeft30\" >\n\n    <mat-card>\n      <mat-card-title>Evaluacion Propuesta</mat-card-title>\n\n      <mat-card-content>\n        <form [formGroup]=\"proposalEvaluationForm\" (submit)=\"save()\">\n          <div class=\"textarea-container\">\n          <mat-form-field>\n            <textarea matInput placeholder=\"Codigo\" formControlName=\"code\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n\n        </div>\n        <div class=\"button-row\">\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!proposalEvaluationForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n  <!-- <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"sendEvent()\"\n      >\n        <mat-icon>add</mat-icon>Enviar evento\n   </button> -->\n   <div class=\"panelRight70\">\n   <mat-card>\n    <mat-card-header>\n      <mat-card-title>Proveedores</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <ng-container *ngIf = proposalEvaluation>\n        <!-- [id]=\"proposalEvaluation.id\" -->\n        <app-proposal-provider ></app-proposal-provider>\n      </ng-container>\n    </mat-card-content>\n\n    </mat-card>\n  </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ProposalEvaluationService } from 'src/app/services/proposalEvaluation/proposal-evaluation.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ProposalEvaluation } from 'src/app/models/proposalEvaluation.model';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-proposal-evaluations',\n  templateUrl: './proposal-evaluations.component.html',\n  styleUrls: ['./proposal-evaluations.component.scss']\n})\nexport class ProposalEvaluationsComponent implements OnInit {\n\n  proposalEvaluations: ProposalEvaluation[] = [];\n  displayedColumns: string[] = ['code','edit','delete'];\n\n  constructor(\n    public _proposalEvaluation: ProposalEvaluationService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n\n  ) { }\n\n  ngOnInit(): void {\n    this.getProposalEvaluations();\n  }\n\n  getProposalEvaluations(){\n    this._proposalEvaluation.getProposalEvaluations()\n      .subscribe(proposalEvaluations => this.proposalEvaluations = proposalEvaluations);\n  }\n\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/proposalEvaluation/edit');\n  }\n\n  delete( id: string ) {\n\n    this._proposalEvaluation.deleteProposalEvaluation( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente la Evaluacion Propuestas ');\n              this.getProposalEvaluations();\n            });\n\n  }\n\n}\n","\n<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2> Evaluaciones de propuestas </h2> \n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Evaluaciones de propuestas </a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/proposalEvaluation/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva evaluación de propuesta\n  </button> -->\n</div>  \n\n\n<table mat-table [dataSource]=\"proposalEvaluations\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef> Codigo de Todo </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>eliminar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { ProposalProvider } from 'src/app/models/proposalProvider.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProposalProviderService } from 'src/app/services/proposalProvider/proposal-provider.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Document } from 'src/app/models/document.model';\nimport { DocumentService } from 'src/app/services/document/document.service';\n\n@Component({\n  selector: 'app-proposal-provider-form',\n  templateUrl: './proposal-provider-form.component.html',\n  styleUrls: ['./proposal-provider-form.component.scss']\n})\nexport class ProposalProviderFormComponent implements OnInit {\n\n  proposalProvider: ProposalProvider;\n  public proposalProviderForm: FormGroup;\n  formId: string;\n  proposalProviderId: string;\n\n  constructor(\n    public _proposalProvider: ProposalProviderService,\n    private dialogRef: MatDialogRef<ProposalProviderFormComponent>,\n    private proposalProviderFormBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: ProposalProviderFormComponent,\n    public snackService: SnackService,\n    public _document: DocumentService,\n  ) { }\n\n  ngOnInit(): void {\n    if(this.data.proposalProviderId !== 'new'){\n      this.getProposalProvider(this.data.proposalProviderId);\n    }\n\n    this.proposalProviderForm = this.proposalProviderFormBuilder.group({\n      name:[null, Validators.required],\n      nit:[null, Validators.required],\n      date:[null, Validators.required],\n      formId:[this.data.formId],\n\n    });\n  }\n\n  getProposalProvider(id: string){\n    this._proposalProvider.getProposalProvider(id)\n      .subscribe(proposalProvider => {\n        if(!proposalProvider){\n          this.onCloseDialog();\n        }\n        const {name, nit, date, formId} = proposalProvider;\n        this.proposalProvider = proposalProvider;\n        this.proposalProviderForm.setValue({name, nit, date, formId });\n      })\n  }\n\n  onCloseDialog(){\n\n    this.dialogRef.close();\n  }\n  save() {\n\n    const {name} = this.proposalProviderForm.value;\n    if ( this.proposalProvider ) {\n      // update\n      const data = {\n        ...this.proposalProviderForm.value,\n        id: this.proposalProvider.id,\n        formId: this.proposalProvider.formId\n      }\n      console.log(data);\n      this._proposalProvider.updateProposalProvider( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente el Proveedor ' + `${ name }`);\n          this.onCloseDialog();\n        })\n\n    } else {\n      // create\n\n      this._proposalProvider.createProposalProvider( this.proposalProviderForm.value )\n          .subscribe( (resp: any) => {\n            this.snackService.success('Se ha creado correctamente el Proveedor '+ `${name }`);\n            this.onCloseDialog();\n\n\n        })\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._proposalProvider.deleteProposalProvider( id )\n            .subscribe ( () =>\n            { this._proposalProvider.getProposalProviders();\n              this.snackService.warn('Se ha eliminado correctamente el Proveedor ');\n            });\n\n  }\n\n\n\n}\n","<!--Form Acquisition Request-->\n\n<mat-toolbar>\n  <div class=\"fill-remaining-space\">\n    <span class=\"fill-remaining-space\">Propuesta Proveedor</span>\n  </div>\n</mat-toolbar>\n\n<form [formGroup]=\"proposalProviderForm\" (submit)=\"save()\">\n  <mat-grid-list cols=\"2\" rowHeight=\"1:1\">\n\n  <div class=\"controles-container\">\n    <mat-form-field>\n      <input matInput placeholder=\"Nombre\" formControlName=\"name\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput placeholder=\"Nit\" formControlName=\"nit\" />\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n  </div>\n\n  <div class=\"controles-container\">\n    <mat-form-field>\n      <input\n        matInput\n        placeholder=\"Fecha de Registro\"\n        [matDatepicker]=\"picker\"\n        formControlName=\"date\"\n      />\n      <mat-datepicker-toggle\n        matSuffix\n        [for]=\"picker\"\n      ></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n      <mat-error>Este campo es obligatorio.</mat-error>\n    </mat-form-field>\n  </div>\n\n    <div class=\"button-row\">\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        class=\"button\"\n        [disabled]=\"!proposalProviderForm.valid\"\n      >\n        Guardar\n      </button>\n      <button mat-button mat-dialog-close>Cerrar</button>\n    </div>\n\n\n</mat-grid-list>\n</form>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ProposalProvider } from 'src/app/models/proposalProvider.model';\nimport { ProposalProviderService } from 'src/app/services/proposalProvider/proposal-provider.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { ProposalProviderFormComponent } from './proposal-provider-form.component';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { Document } from 'src/app/models/document.model';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { DocumentComponent } from '../document/document.component';\nimport { Status } from '../../models/status.model';\nimport { User } from '../../models/user';\nimport { AuthService } from '../../services/auth.service';\nimport * as actions from '../../store/actions/status.actions';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\n\n@Component({\n  selector: 'app-proposal-provider',\n  templateUrl: './proposal-provider.component.html',\n  styleUrls: ['./proposal-provider.component.scss']\n})\nexport class ProposalProviderComponent implements OnInit {\n\n  // @Input() id: string;\n  id: string;\n  proposalProviders: ProposalProvider[] = [];\n  proposalProvidersDoc: ProposalProvider[] = [];\n  displayedColumns: string[] = ['document', 'preview', 'name', 'nit', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n  document: Document;\n  panelOpenState = false;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document','preview','name', 'edit', 'delete'];\n  formId: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  constructor(\n    public _proposalProvider: ProposalProviderService,\n    private authService: AuthService,\n    public snackService: SnackService,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser =  JSON.parse(this.authService.getUser());\n    // if (this.id)\n    // {\n    //   this.getProposalProviders(this.id);\n\n    // }\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status.formId != null) {\n          this.id = status.formId;\n          this.getProposalProviders( status.formId);\n        }\n      }\n    });\n\n\n  }\n\n  getProposalProviders(id: string){\n    this._proposalProvider.getPPForm(id)\n      .subscribe(proposalProviders => {\n\n        this.proposalProviders = proposalProviders;\n        this.getDocuments();\n      });\n\n\n  }\n\n  terminate() {\n    // console.log('Documentos cargados', this.document);\n    if (this.currentStatus.procedureId) {\n      const std: Status = Status.fromState( this.currentStatus );\n      std.userId = this.currentUser.id;\n      std.status = 'terminado';\n      // console.log('current status ', std);\n      this.store.dispatch( actions.updateStatus({ status: std }));\n    }\n  }\n\n  delete( id: string ) {\n\n    this._proposalProvider.deleteProposalProvider( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente el Proveedor ');\n              this.getProposalProviders(this.id);\n            });\n\n  }\n\n  openAddProposalProviderDialog(){\n    const proposalProviderDialogRef = this.dialog.open(ProposalProviderFormComponent, {\n      data: { formId: this.id,\n              proposalProviderId: 'new'\n      }\n    });\n    proposalProviderDialogRef.afterClosed().subscribe( result => {\n      this.getProposalProviders(this.id);\n      // console.log('Documentos cargados', this.document);\n      this.terminate();\n    });\n\n  }\n\n  openUpdateProposalProviderDialog(id: string){\n    const proposalProviderDialogRef = this.dialog.open(ProposalProviderFormComponent, {\n      data: {\n              proposalProviderId: id\n      }\n    });\n    proposalProviderDialogRef.afterClosed().subscribe( result => {\n      this.getProposalProviders(this.id);\n      this.terminate();\n    });\n\n  }\n\n  /* openPreviewDocument(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  openPreviewDocumentDialog(id: string){\n    this._document.getDocumentForm(id).subscribe(document => {\n      this.document = document;\n      this.openPreviewDocument(this.document.src);\n    });\n  } */\n  getDocuments(){\n    this._document.getDocuments().subscribe(documents => {\n      this.documents = documents;\n    })\n  }\n  getDocumentsProviders(id:string){\n    this._document.getDocumentForm(id).subscribe(documents => {\n      this.documents = documents;\n    })\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getDocuments();\n      this.terminate();\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src: src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( document: Document ) {\n    document.status = 'inactive';\n    this._document.updateDocument( document )\n            .subscribe ( () =>\n            { this.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n\n            });\n\n  }\n\n  createDocument(id: string){\n    const date = new Date();\n    const document: Document = {id:'',name:\"Documento Proveedor\",type: \"\", formId: id,src:\"./uploads\", status:\"active\", createDate: date};\n    this._document.createDocument(document)\n      .subscribe( (resp: any) =>\n      {\n        this.getDocuments();\n        this.snackService.success('Se ha creado correctamente el documento ');\n\n      })\n  }\n\n  createDocumentReplace(id:string){\n    const documentR: Document = {id:'', name:\"Documento Proveedor\",type: \"\", formId: id, src:\"./uploads\", status:\"active\", createDate: new Date};\n    this._document.createDocument(documentR)\n    .subscribe( (resp: any) =>\n    {\n      console.log(resp.document);\n      this.changeFile(resp.document.id);\n\n\n\n    })\n  }\n\n  updateStatusDocument(document: Document){\n    document.status=\"replaced\";\n    this.formId=document.formId;\n    this._document.updateDocument(document)\n      .subscribe((resp:any) => {\n        console.log(resp.document.name);\n        this.createDocumentReplace(this.formId);\n\n      })\n  }\n\n  replaceFile(document: Document){\n    this.updateStatusDocument(document);\n\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log( resp);\n                  this.snackService.success('Se ha modificado correctamente el adjunto del documento ');\n                  this.changeIcon(resp.document.src);\n                  this.getDocuments();\n                  //this.sendEvent();\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src == \"./uploads\") {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n\n\n\n}\n","\n<div class=\"panelRight70\">\n  <mat-card-title>\n    <button\n      mat-raised-button\n      class=\"create\"\n      [disabled]=\"!proposalProviders\"\n      (click)=\"openAddProposalProviderDialog()\"\n    >\n      <mat-icon>add</mat-icon>Propuesta Proveedor\n    </button>\n  </mat-card-title>\n\n\n</div>\n\n<ng-container *ngFor=\"let provider of proposalProviders\" >\n\n  <mat-accordion>\n    <mat-expansion-panel hideToggle>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Proveedor: {{provider.name}}\n        </mat-panel-title>\n        <mat-panel-description>\n          NIT: {{provider.nit}}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <h3>Documentos del Proveedor</h3>\n      <div class=\"panelRight70\">\n        <mat-card-title>\n          <button\n            mat-raised-button\n            class=\"create\"\n            (click)=\"createDocument(provider.id)\"\n\n          >\n            <mat-icon>add</mat-icon>Documento\n          </button>\n        </mat-card-title>\n\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title>Documentos</mat-card-title>\n          </mat-card-header>\n          <br />\n          <mat-card-content>\n            <table class=\"mat-elevation-z8\">\n              <thead>\n                <tr>\n                  <th>Documento</th>\n                  <th>Ver</th>\n                  <th>Nombre</th>\n                  <th>Estado</th>\n                  <th>Editar</th>\n                  <th>Eliminar</th>\n                </tr>\n              </thead>\n              <tbody>\n                  <tr *ngFor=\"let doc of documents\">\n                    <ng-container *ngIf=\"doc.formId === provider.id\">\n                    <td>\n                      {{ changeIcon(doc.src) }}\n                      <ng-container *ngIf=\"doc.src === './uploads'\" >\n\n                        <img (click)=\"changeFile(doc.id)\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n                      </ng-container>\n\n                      <ng-container *ngIf=\"doc.src != './uploads'\" >\n\n                        <img (click)=\"replaceFile(doc)\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n                      </ng-container>\n                    </td>\n\n                    <td>\n                      <button\n                      mat-button\n                      class=\"btn btn-primary\"\n                      (click)=\"openPreviewDocumentDialog(doc.src)\"\n                      >\n                    <mat-icon>launch</mat-icon>\n                    </button>\n                    </td>\n                    <td>\n                      {{doc.name}}\n                    </td>\n                    <td>\n                      {{doc.status}}\n                    </td>\n\n                    <td>\n                      <button\n                      mat-button\n                      class=\"btn btn-primary\"\n                      (click)=\"openUpdateDocumentDialog(doc.id)\"\n                     >\n                     <mat-icon>launch</mat-icon>\n                      </button>\n                    </td>\n\n                    <td>\n                      <button\n                        mat-button\n                        class=\"btn btn-primary\"\n                        color=\"warn\"\n                        (click)=\"deleteDocument(doc)\"\n                       >\n                       <mat-icon>delete_outline</mat-icon>\n              </button>\n                    </td>\n                  </ng-container>\n                  </tr>\n\n              </tbody>\n\n            </table>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </mat-expansion-panel>\n\n  </mat-accordion>\n</ng-container>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { PurchaseOrder } from 'src/app/models/purchaseOrder.model';\nimport { Document } from 'src/app/models/document.model';\nimport { PurchaseOrderService } from 'src/app/services/purchaseOrder/purchase-order.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { DocumentComponent } from '../document/document.component';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Status } from '../../models/status.model';\nimport { User } from '../../models/user';\nimport * as actions from '../../store/actions/status.actions';\nimport { AuthService } from '../../services/auth.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-purchase-order-form',\n  templateUrl: './purchase-order-form.component.html',\n  styleUrls: ['./purchase-order-form.component.scss']\n})\nexport class PurchaseOrderFormComponent implements OnInit {\n\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  public purchaseOrderForm: FormGroup;\n  public purchaseOrder: PurchaseOrder;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document','preview','name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n\n  constructor(\n    public _purchaseOrder: PurchaseOrderService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    this.purchaseOrderForm = this.formBuilder.group({\n          code:[null, Validators.required],\n          description:[null, Validators.required],\n\n        });\n    this.store.select('status').subscribe(({ status }) => {\n      if (status != null) {\n        // console.log('el estado actual es ', status);\n        this.currentStatus = status;\n        if ( status.formId != null) {\n          this.getPurchaseOrder( status.formId);\n        } else {\n          this.getPurchaseOrder( 'new');\n        }\n      }\n    });\n  }\n\n  getPurchaseOrder(id: string){\n\n    if(id === 'new'){\n      return;\n    }\n    this._purchaseOrder.getPOD(id)\n      .subscribe(purchaseOrder => {\n        if ( purchaseOrder ) {\n          const {code, description} = purchaseOrder;\n          this.purchaseOrder = purchaseOrder;\n          this.documents = purchaseOrder.documents;\n          this.purchaseOrderForm.setValue({code, description});\n        }\n      });\n  }\n\n  terminate() {\n    if (this.currentStatus.procedureId) {\n      const std: Status = Status.fromState( this.currentStatus );\n      if (this.documents.length > 0) {\n            std.userId = this.currentUser.id;\n            std.status = 'terminado';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n          }else {\n              std.status = 'pendiente';\n          }\n    }\n  }\n\n  save() {\n\n    const {code} = this.purchaseOrderForm.value;\n\n    if ( this.purchaseOrder ) {\n      // update\n      const data = {\n        ...this.purchaseOrderForm.value,\n        id: this.purchaseOrder.id\n      }\n      this._purchaseOrder.updatePurchaseOrder( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la Orden de Compra ' + `${ code }`);\n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/purchaseOrders');\n          } else {\n            this.terminate();\n          }\n        })\n\n    } else {\n      // create\n\n      this._purchaseOrder.createPurchaseOrder( this.purchaseOrderForm.value )\n          .subscribe( (resp: any) => {\n            if (this.currentStatus.procedureId) {\n              const std: Status = Status.fromState( this.currentStatus );\n              std.formId = resp.purchaseOrder.id;\n              std.userId = this.currentUser.id;\n              std.status = 'pendiente';\n              // console.log('current status ', std);\n              this.store.dispatch( actions.updateStatus({ status: std }));\n            }\n            this.getPurchaseOrder(resp.purchaseOrder.id);\n            this.snackService.success('Se ha creado correctamente la Orden de Compra '+ `${code }`);\n\n            // this.router.navigateByUrl(`/purchaseOrder/${ resp.purchaseOrder.id }`)\n        });\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n    this._purchaseOrder.deletePurchaseOrder( id )\n            .subscribe ( () =>\n            { this._purchaseOrder.getPurchaseOrders();\n              this.snackService.warn('Se ha borrado correctamente la Orden Compra ');\n            });\n  }\n\n  //document\n  getDocuments(){\n    this._document.getDocuments()\n      .subscribe(documents => this.documents = documents);\n  }\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.purchaseOrder.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n\n      this.getPurchaseOrder(this.purchaseOrder.id);\n      //this.sendEvent();\n\n    });\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getPurchaseOrder(this.purchaseOrder.id);\n      console.log('Documentos cargados', this.documents);\n      this.terminate();\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src: src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getPurchaseOrder(this.purchaseOrder.id);\n\n              this.terminate();\n            });\n  }\n\n  createDocument(){\n    const document: Document = {id:'',name:\"Orden Compra\",type: \"\", formId:this.purchaseOrder.id,src:\"./uploads\", status:\"active\", createDate:new Date()};\n    this._document.createDocument(document)\n      .subscribe(() =>\n        {\n          this._document.getDocuments();\n          this.snackService.success('Se ha creado correctamente el documento ');\n          this.getPurchaseOrder(this.purchaseOrder.id);\n        }\n      );\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getPurchaseOrder(this.purchaseOrder.id);\n                  //this.sendEvent();\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src == \"./uploads\") {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"panelLeft30\" >\n\n    <mat-card>\n      <mat-card-title>Orden Compra</mat-card-title>\n\n      <mat-card-content>\n        <form [formGroup]=\"purchaseOrderForm\" (submit)=\"save()\">\n          <div class=\"textarea-container\">\n          <mat-form-field>\n            <textarea matInput placeholder=\"Codigo\" formControlName=\"code\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n\n\n        </div>\n        <div class=\"textarea-container\">\n\n          <mat-form-field>\n            <textarea matInput placeholder=\"Descripcion\" formControlName=\"description\"></textarea>\n            <mat-error>\n              El campo es requerido.\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"button-row\">\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!purchaseOrderForm.valid\"\n          >\n            Guardar\n          </button>\n        </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n\n\n  <div class=\"panelRight70\">\n    <mat-card-title>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"createDocument()\"\n        [disabled]=\"!purchaseOrder\"\n      >\n        <mat-icon>add</mat-icon>Documento\n      </button>\n    </mat-card-title>\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Documentos</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"document\">\n            <th mat-header-cell *matHeaderCellDef>Documento</th>\n            <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n              <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef>Ver</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openPreviewDocumentDialog(element.src)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateDocumentDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <!-- Delete Column -->\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteDocument(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"sendEvent()\"\n      >\n        <mat-icon>add</mat-icon>Enviar evento\n   </button> -->\n\n\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { PurchaseOrder } from 'src/app/models/purchaseOrder.model';\nimport { PurchaseOrderService } from 'src/app/services/purchaseOrder/purchase-order.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-purchase-order',\n  templateUrl: './purchase-order.component.html',\n  styleUrls: ['./purchase-order.component.scss']\n})\nexport class PurchaseOrderComponent implements OnInit {\n\n  purchaseOrders: PurchaseOrder[] = [];\n  displayedColumns: string[] = ['code','description','edit','delete'];\n\n  constructor(\n    public _purchaseOrder: PurchaseOrderService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.getPurchaseOrders();\n  }\n\n  getPurchaseOrders(){\n    this._purchaseOrder.getPurchaseOrders()\n      .subscribe(purchaseOrders => this.purchaseOrders = purchaseOrders);\n  }\n\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/purchaseOrder/edit');\n  }\n\n  delete(id: string){\n    this._purchaseOrder.deletePurchaseOrder(id)\n      .subscribe(() =>\n      {\n        this.snackService.warn('Se ha borrado correctamente la Orden de Compra ');\n        this.getPurchaseOrders();\n      })\n  }\n\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2> Ordenes de compra </h2> \n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Ordenes de compra </a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/purchaseOrder/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva orden de compra\n  </button> -->\n</div> \n\n<table mat-table [dataSource]=\"purchaseOrders\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef> Codigo </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef> Descripcion </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> editar </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>eliminar</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { Status } from 'src/app/models/status.model';\nimport { StatusService } from 'src/app/services/status/status.service';\n\n\n\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.scss']\n})\nexport class StatusComponent implements OnInit {\n\n  status: Status [] = [];\n\n\n  constructor(\n    public _status: StatusService,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.getStatus();\n  }\n\n  getStatus(){\n    this._status.getStatuss().subscribe(status => this.status = status);\n  }\n\n\n\n}\n","<div class=\"content\" >\n  <aside>\n\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n\n        <mat-card-title>Filtrar tareas</mat-card-title>\n        <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\n      </mat-card-header>\n\n      <mat-card-content>\n        <form class=\"example-form\">\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>Buscar</mat-label>\n            <input matInput placeholder=\"Buscar ...\" value=\"\">\n          </mat-form-field>\n          </form>\n      </mat-card-content>\n      <!-- <mat-card-actions>\n        <button mat-button>LIKE</button>\n        <button mat-button>SHARE</button>\n      </mat-card-actions> -->\n    </mat-card>\n    <br>\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n\n        <mat-card-title>Lista de tareas</mat-card-title>\n        <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\n      </mat-card-header>\n\n      <mat-card-content>\n        <mat-nav-list>\n          <!-- <div mat-subheader>Folders</div> -->\n          <a mat-list-item routerLink=\"/\" *ngFor=\"let element of status\">\n            <mat-icon mat-list-icon color=\"primary\">mail_outline</mat-icon>\n            <div mat-line>{{element.name}}</div>\n            <div mat-line> {{element.dateAt | date}} </div>\n          </a>\n\n\n        </mat-nav-list>\n      </mat-card-content>\n      <mat-card-actions>\n        <mat-paginator [length]=\"100\"\n              [pageSize]=\"5\"\n              [pageSizeOptions]=\"[5, 10, 25, 100]\">\n        </mat-paginator>\n      </mat-card-actions>\n    </mat-card>\n\n\n\n\n\n\n  </aside>\n  <div class=\"info\" >\n\n    <mat-tab-group animationDuration=\"0ms\">\n      <mat-tab label=\"Información\">\n        <div class=\"info\" >\n          <br>\n\n          <h2>\n            <mat-icon mat-list-icon color=\"primary\">domain_verification</mat-icon>\n            Informacion\n          </h2>\n\n\n        </div>\n\n\n      </mat-tab>\n      <mat-tab label=\"Formulario\">\n        <br>\n          <h2>Formulario</h2>\n      </mat-tab>\n\n    </mat-tab-group>\n\n\n\n\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TechnicalEvaluation } from 'src/app/models/technicalEvaluation.model';\nimport { TechnicalEvaluationService } from 'src/app/services/technicalEvaluation/technical-evaluation.service';\nimport { StatusService } from 'src/app/services/status/status.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { DocumentComponent } from '../document/document.component';\nimport { Document } from 'src/app/models/document.model';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\nimport { User } from '../../models/user';\nimport * as actions from '../../store/actions/status.actions';\nimport { Status } from '../../models/status.model';\nimport { AuthService } from '../../services/auth.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\n\n@Component({\n  selector: 'app-technical-evaluation-form',\n  templateUrl: './technical-evaluation-form.component.html',\n  styleUrls: ['./technical-evaluation-form.component.scss']\n})\nexport class TechnicalEvaluationFormComponent implements OnInit {\n\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  // technicalEvaluation: TechnicalEvaluation= new TechnicalEvaluation(\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\");\n  public technicalEvaluationForm: FormGroup;\n  public technicalEvaluation: TechnicalEvaluation;\n  // documentDialogRef: MatDialogRef<DocumentComponent>;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document', 'preview', 'name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n  constructor(\n    public _technicalEvaluation: TechnicalEvaluationService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n\n  ) {   }\n\n  ngOnInit(): void {\n\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    this.technicalEvaluationForm = this.formBuilder.group({\n          to: [null, Validators.required],\n          via: [null, Validators.required],\n          whose: [null, Validators.required],\n          number: [null, Validators.required],\n          date: [null, Validators.required],\n\n        });\n    this.store.select('status').subscribe(({ status }) => {\n          if (status != null) {\n            // console.log('el estado actual es ', status);\n            this.currentStatus = status;\n            if ( status.formId != null) {\n              this.getTechnicalEvaluation( status.formId);\n            } else {\n              this.getTechnicalEvaluation( 'new');\n            }\n          }\n        });\n\n  }\n\n /*  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.status.currentValue){\n      this.codeRequest = this.status.codeRequest;\n      // console.log('el estado recibido', this.status);\n    }\n\n  } */\n  getTechnicalEvaluation(id: string){\n\n    if (id === 'new'){\n      return;\n    }\n    this._technicalEvaluation.getTED(id)\n      .subscribe(technicalEvaluation => {\n        // if ( !technicalEvaluation ) {\n        //   return this.router.navigateByUrl(`/technicalEvaluations`);\n        // }\n        if ( technicalEvaluation ) {\n        const {to, via, whose, number, date } = technicalEvaluation;\n        this.technicalEvaluation = technicalEvaluation;\n        this.documents = technicalEvaluation.documents;\n        this.technicalEvaluationForm.setValue({to, via, whose, number, date });\n        }\n      });\n  }\n\n  terminate() {\n    // console.log('Documentos cargados', this.documents);\n   if ( this.currentStatus.procedureId ) {\n    const std: Status = Status.fromState( this.currentStatus );\n    if (this.documents.length > 0) {\n           std.userId = this.currentUser.id;\n           std.status = 'terminado';\n           // console.log('current status ', std);\n           this.store.dispatch( actions.updateStatus({ status: std }));\n         }else {\n            std.status = 'pendiente';\n         }\n    }\n  }\n\n  save() {\n\n    const {number} = this.technicalEvaluationForm.value;\n\n    if ( this.technicalEvaluation ) {\n      // update\n      const data = {\n        ...this.technicalEvaluationForm.value,\n        id: this.technicalEvaluation.id\n      };\n      this._technicalEvaluation.updateTechnicalEvaluation( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la Evaluacion Tecnica ' + `${ number }`);\n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/technicalEvaluations');\n          } else {\n            this.terminate();\n          }\n        });\n\n    } else {\n      // create\n\n      this._technicalEvaluation.createTechnicalEvaluation( this.technicalEvaluationForm.value )\n          .subscribe( (resp: any) => {\n            // this._statusService.addStatus(this.codeRequest, resp.technicalEvaluation.id, 'Certificación');\n            if ( this.currentStatus.procedureId ) {\n              const std: Status = Status.fromState( this.currentStatus );\n              std.formId = resp.technicalEvaluation.id;\n              std.userId = this.currentUser.id;\n              std.status = 'pendiente';\n              // console.log('current status ', std);\n              this.store.dispatch( actions.updateStatus({ status: std }));\n\n              this.getTechnicalEvaluation(resp.technicalEvaluation.id);\n              this.snackService.success('Se ha creado correctamente la Evaluacion Tecnica ' + `${number }`);\n              }\n            // this.router.navigateByUrl(`/technicalEvaluation/${ resp.technicalEvaluation.id }`)\n        });\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._technicalEvaluation.deleteTechnicalEvaluation( id )\n            .subscribe ( () =>\n            { this._technicalEvaluation.getTechnicalEvaluations();\n              this.snackService.warn('Se ha borrado correctamente la Evaluacion Tecnica ');\n            });\n\n  }\n\n  // document\n  getDocuments(){\n    this._document.getDocuments()\n      .subscribe(documents => this.documents = documents);\n  }\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.technicalEvaluation.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getTechnicalEvaluation(this.technicalEvaluation.id);\n\n    });\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getTechnicalEvaluation(this.technicalEvaluation.id);\n      this.terminate();\n\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getTechnicalEvaluation(this.technicalEvaluation.id);\n              this.terminate();\n\n            });\n\n  }\n\n  createDocument(){\n    const date = new Date();\n    const document: Document = {id:'',name:\"Evaluacion Tecnica\",type: \"\", formId:this.technicalEvaluation.id,src:\"./uploads\",status:\"active\",createDate: date};\n    this._document.createDocument(document)\n      .subscribe(() =>\n      {\n        this._document.getDocuments();\n        this.snackService.success('Se ha creado correctamente el documento ');\n        this.getTechnicalEvaluation(this.technicalEvaluation.id);\n      }\n      );\n  }\n\n  /* sendEvent() {\n    // console.log('eniva evento');\n    this.eventRefresh.emit(true);\n  } */\n\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getTechnicalEvaluation(this.technicalEvaluation.id);\n                  // this.sendEvent();\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src === './uploads') {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n}\n","<div class=\"container\">\n\n  <div class=\"panelLeft\" >\n    <mat-card>\n      <mat-card-title>Evaluacion Tecnica</mat-card-title>\n\n      <mat-card-content>\n        <form [formGroup]=\"technicalEvaluationForm\" (submit)=\"save()\">\n        <div class=\"form\"  >\n          <div class=\"formLeft\" >\n\n\n          <mat-form-field>\n            <textarea matInput placeholder=\"A quien: \" formControlName=\"to\"></textarea>\n            <mat-error>\n              El campo es requerido, debe tener al menos 10 caracteres.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n\n            <textarea matInput placeholder=\"Via quien: \" formControlName=\"via\"></textarea>\n            <mat-error>\n              El campo es requerido, debe tener al menos 10 caracteres.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n\n            <textarea matInput placeholder=\"De quien: \" formControlName=\"whose\"></textarea>\n            <mat-error>\n              El campo es requerido, debe tener al menos 10 caracteres.\n            </mat-error>\n          </mat-form-field>\n\n\n        </div>\n\n\n        <div class=\"formRight\" >\n\n          <mat-form-field>\n\n            <textarea placeholder=\"Numero\" matInput formControlName=\"number\"></textarea>\n            <mat-error>\n              El campo es requerido, debe tener al menos 10 caracteres.\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Fecha \"\n              [matDatepicker]=\"picker\"\n              formControlName=\"date\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error>Este campo es obligatorio.</mat-error>\n          </mat-form-field>\n\n\n        </div>\n      </div>\n\n        <div class=\"form\" >\n          <div class=\"formCenter\" >\n\n            <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            class=\"button\"\n            [disabled]=\"!technicalEvaluationForm.valid\"\n          >\n            Guardar\n          </button>\n\n          </div>\n\n        </div>\n\n\n        </form>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n\n  <div class=\"panelRight\" >\n\n    <mat-card-title>\n      <button\n        mat-raised-button\n        class=\"create\"\n        (click)=\"createDocument()\"\n        [disabled]=\"!technicalEvaluation\"\n      >\n        <mat-icon>add</mat-icon>Documento\n      </button>\n    </mat-card-title>\n\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Documentos</mat-card-title>\n      </mat-card-header>\n      <br />\n      <mat-card-content>\n        <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"document\">\n            <th mat-header-cell *matHeaderCellDef>Documento</th>\n            <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n              <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"preview\">\n            <th mat-header-cell *matHeaderCellDef>Ver</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openPreviewDocumentDialog(element.src)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>editar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                (click)=\"openUpdateDocumentDialog(element.id)\"\n              >\n                <mat-icon>launch</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef>borrar</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                mat-button\n                class=\"btn btn-primary\"\n                color=\"warn\"\n                (click)=\"deleteDocument(element.id)\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n\n\n  </div>\n\n\n\n\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { TechnicalEvaluation } from 'src/app/models/technicalEvaluation.model';\nimport { TechnicalEvaluationService } from 'src/app/services/technicalEvaluation/technical-evaluation.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-technical-evaluation',\n  templateUrl: './technical-evaluation.component.html',\n  styleUrls: ['./technical-evaluation.component.scss']\n})\nexport class TechnicalEvaluationComponent implements OnInit {\n\n  technicalEvaluations: TechnicalEvaluation[] = [];\n  displayedColumns: string[] = ['number', 'date',  'to','edit', 'delete'];\n\n  constructor(\n    public _technicalEvaluation: TechnicalEvaluationService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.getTechnicalEvaluations();\n  }\n\n\n  getTechnicalEvaluations(){\n    this._technicalEvaluation.getTechnicalEvaluations()\n      .subscribe(technicalEvaluations => this.technicalEvaluations = technicalEvaluations);\n  }\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/technicalEvaluation/edit');\n  }\n\n  delete( id: string ) {\n\n    this._technicalEvaluation.deleteTechnicalEvaluation( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente la Evaluacion Tecnica ');\n              this.getTechnicalEvaluations();\n            });\n\n  }\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Evaluaciones técnicas</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Evaluaciones técnicas</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/technicalEvaluation/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva evaluación técnica\n  </button> -->\n</div>\n\n<table mat-table [dataSource]=\"technicalEvaluations\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"number\">\n    <th mat-header-cell *matHeaderCellDef> numero </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.number}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"date\">\n    <th mat-header-cell *matHeaderCellDef> fecha </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.date}} </td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"to\">\n    <th mat-header-cell *matHeaderCellDef> a quien </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.to}} </td>\n  </ng-container>\n\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> edit </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>delete</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n\n\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { TechnicalReport } from 'src/app/models/technicalReport.model';\nimport { TechnicalReportService } from 'src/app/services/technicalReport/technical-report.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DocumentComponent } from '../document/document.component';\nimport { Document } from 'src/app/models/document.model';\nimport { DocumentService } from 'src/app/services/document/document.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { IStatus } from '../../interfaces/interfaces';\nimport { StatusService } from '../../services/status/status.service';\nimport { Status } from '../../models/status.model';\nimport { User } from '../../models/user';\nimport * as actions from '../../store/actions/status.actions';\nimport { AuthService } from '../../services/auth.service';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { FilePreviewComponent } from '../file-preview/file-preview.component';\n\n\n@Component({\n  selector: 'app-technical-report-form',\n  templateUrl: './technical-report-form.component.html',\n  styleUrls: ['./technical-report-form.component.scss']\n})\nexport class TechnicalReportFormComponent implements OnInit {\n\n  // @Input() status: IStatus;\n  // @Output() eventRefresh = new EventEmitter<boolean>();\n  codeRequest: string;\n  currentStatus: Status;\n  currentUser: User;\n\n  // technicalReport: TechnicalReport= new TechnicalReport(\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\");\n  public technicalReportForm: FormGroup;\n  public technicalReport: TechnicalReport;\n  // documentDialogRef: MatDialogRef<DocumentComponent>;\n  documents: Document[] = [];\n  displayedDocuments: string[] = ['document', 'preview', 'name', 'edit', 'delete'];\n  iconFile = '../assets/images/icon/add-file.png';\n  constructor(\n    public _technicalReport: TechnicalReportService,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    public _document: DocumentService,\n    public snackService: SnackService,\n    public modalUploadFileService: ModalFileUploadService,\n    private store: Store<AppState>\n  ) {   }\n\n  ngOnInit(): void {\n    // this.activatedRoute.params.subscribe(\n    //   params=>{\n    //     let id = params['id'];\n    //     if( id ){\n    // this.activatedRoute.params\n    //     .subscribe( ({ id }) => this.getTechnicalReport( id ) );\n    //     }\n    //   })\n    this.currentUser =  JSON.parse(this.authService.getUser()) ;\n    this.technicalReportForm = this.formBuilder.group({\n          background: [null, Validators.required],\n          acquisitionObjetive: [null, Validators.required],\n          testInspection: [null, Validators.required],\n          supportDocument: [null, Validators.required],\n          technicalQuarantee: [null, Validators.required],\n          technicalService: [null, Validators.required],\n          placeDelivery: [null, Validators.required],\n          deliveryTerm: [null, Validators.required],\n          price: [null, [Validators.required]],\n        });\n\n    this.store.select('status').subscribe(({ status }) => {\n          if (status != null) {\n            // console.log('el estado actual es ', status);\n            this.currentStatus = status;\n            if ( status.formId != null) {\n              this.getTechnicalReport( status.formId);\n            } else {\n              this.getTechnicalReport( 'new');\n            }\n          }\n        });\n\n\n  }\n\n  terminate() {\n    console.log('Documentos cargados', this.documents);\n    const std: Status = Status.fromState( this.currentStatus );\n    if (this.documents.length > 0) {\n           std.userId = this.currentUser.id;\n           std.status = 'terminado';\n           // console.log('current status ', std);\n           this.store.dispatch( actions.updateStatus({ status: std }));\n         }else {\n            std.status = 'pendiente';\n         }\n  }\n\n  getTechnicalReport(id: string){\n\n    if (id === 'new'){\n      return;\n    }\n    this._technicalReport.getTR(id)\n      .subscribe(technicalReport => {\n        // if ( !technicalReport ) {\n        //   return this.router.navigateByUrl(`/technicalReports`);\n        // }\n        if (technicalReport) {\n          const {background, acquisitionObjetive, testInspection, supportDocument, technicalQuarantee, technicalService, placeDelivery, deliveryTerm, price } = technicalReport;\n          this.technicalReport = technicalReport;\n          this.documents = technicalReport.documents;\n          this.technicalReportForm.setValue({background, acquisitionObjetive, testInspection, supportDocument, technicalQuarantee, technicalService, placeDelivery, deliveryTerm, price });\n        }\n\n      });\n  }\n\n  save() {\n\n    const {background} = this.technicalReportForm.value;\n\n    if ( this.technicalReport ) {\n      // update\n      const data = {\n        ...this.technicalReportForm.value,\n        id: this.technicalReport.id\n      };\n      this._technicalReport.updateTechnicalReport( data )\n        .subscribe( resp => {\n          this.snackService.success('Se ha actualizado correctamente la Especificacion Tecnica ' + `${ background }`);\n          if (!this.currentStatus.procedureId) {\n            this.router.navigateByUrl('/technicalReports');\n          } else {\n            this.terminate();\n          }\n        });\n\n    } else {\n      // create\n\n      this._technicalReport.createTechnicalReport( this.technicalReportForm.value )\n          .subscribe( (resp: any) => {\n            // console.log('reporte guardado', resp.technicalReport);\n            const std: Status = Status.fromState( this.currentStatus );\n            std.formId = resp.technicalReport.id;\n            std.userId = this.currentUser.id;\n            std.status = 'pendiente';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n\n            this.getTechnicalReport(resp.technicalReport.id);\n            this.snackService.success('Se ha creado correctamente la Especificacion Tecnica ' + `${background }`);\n\n            // this.router.navigateByUrl(`/technicalReport/${ resp.technicalReport.id }`)\n        });\n    }\n\n\n\n  }\n\n  delete( id: string ) {\n\n    this._technicalReport.deleteTechnicalReport( id )\n            .subscribe ( () =>\n            { this._technicalReport.getTechnicalReports();\n              this.snackService.warn('Se ha borrado correctamente la Especificacion Tecnica ');\n            });\n\n  }\n\n  // document\n  getDocuments(){\n    this._document.getDocuments()\n      .subscribe(documents => this.documents = documents);\n  }\n  openAddDocumentDialog(){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { formId: this.technicalReport.id,\n              documentId: 'new'\n      }\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getTechnicalReport(this.technicalReport.id);\n\n    });\n  }\n  openUpdateDocumentDialog(id: string){\n    const documentDialogRef = this.dialog.open(DocumentComponent, {\n      data: { documentId: id}\n    });\n    documentDialogRef.afterClosed().subscribe( result => {\n      this.getTechnicalReport(this.technicalReport.id);\n\n      this.terminate();\n\n    });\n  }\n\n  openPreviewDocumentDialog(src: string){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {src: src};\n    const documentDialogRef = this.dialog.open(FilePreviewComponent, dialogConfig);\n\n  }\n\n  deleteDocument( id: string ) {\n\n    this._document.deleteDocument( id )\n            .subscribe ( () =>\n            { this._document.getDocuments();\n              this.snackService.warn('Se ha borrado correctamente el documento ');\n              this.getTechnicalReport(this.technicalReport.id);\n\n              this.terminate();\n            });\n\n  }\n\n  createDocument(){\n    const date = new Date();\n    const document: Document = {id:'',name:\"Especificacion Tecnica\",type: \"\", formId:this.technicalReport.id,src:\"./uploads\",status:\"active\",createDate: date};\n    this._document.createDocument(document)\n      .subscribe(() =>\n      {\n        this._document.getDocuments();\n        this.snackService.success('Se ha creado correctamente el documento ');\n        this.getTechnicalReport(this.technicalReport.id);\n      }\n      );\n  }\n\n  // sendEvent() {\n  //   // console.log('eniva evento');\n  //   this.eventRefresh.emit(true);\n  // }\n\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalUploadFileService.showModal( 'docs', id );\n\n    this.modalUploadFileService.modalNotification\n                .subscribe( (resp: any) => {\n                  // console.log(resp);\n\n                  this.changeIcon(resp.document.src);\n                  this.getTechnicalReport(this.technicalReport.id);\n                  this.terminate();\n                });\n  }\n\n  changeIcon(src) {\n\n    if (src === './uploads') {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n    }\n\n  }\n\n}\n\n\n\n\n","<div class=\"container\">\n\n<div class=\"panelLeft\" >\n  <mat-card>\n    <mat-card-title>Especificaciones Tecnicas</mat-card-title>\n\n    <mat-card-content>\n      <form [formGroup]=\"technicalReportForm\" (submit)=\"save()\">\n      <div class=\"form\"  >\n        <div class=\"formLeft\" >\n\n\n        <mat-form-field>\n          <textarea matInput placeholder=\"Antecedentes\" formControlName=\"background\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Ensayos, inspección y pruebas \" formControlName=\"testInspection\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Garantías técnicas\" formControlName=\"technicalQuarantee\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Lugar de entrega\" formControlName=\"placeDelivery\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Precio\" formControlName=\"price\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n      </div>\n\n\n      <div class=\"formRight\" >\n\n        <mat-form-field>\n\n          <textarea placeholder=\"Objeto de la adquisición\" matInput formControlName=\"acquisitionObjetive\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Documentación y soporte\" formControlName=\"supportDocument\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Capacitación y servicio técnico\" formControlName=\"technicalService\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n\n          <textarea matInput placeholder=\"Plazo de entrega\" formControlName=\"deliveryTerm\"></textarea>\n          <mat-error>\n            El campo es requerido, debe tener al menos 10 caracteres.\n          </mat-error>\n        </mat-form-field>\n\n      </div>\n    </div>\n\n      <div class=\"form\" >\n        <div class=\"formCenter\" >\n\n          <button\n          mat-raised-button\n          color=\"primary\"\n          type=\"submit\"\n          class=\"button\"\n          [disabled]=\"!technicalReportForm.valid\"\n        >\n          Guardar\n        </button>\n\n        </div>\n\n      </div>\n\n\n      </form>\n    </mat-card-content>\n  </mat-card>\n\n</div>\n\n<div class=\"panelRight\" >\n\n  <mat-card-title>\n    <button\n      mat-raised-button\n      class=\"create\"\n      (click)=\"createDocument()\"\n      [disabled]=\"!technicalReport\"\n    >\n      <mat-icon>add</mat-icon>Documento\n    </button>\n  </mat-card-title>\n\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Documentos</mat-card-title>\n    </mat-card-header>\n    <br />\n    <mat-card-content>\n      <table mat-table [dataSource]=\"documents\" class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"document\">\n          <th mat-header-cell *matHeaderCellDef>Documento</th>\n          <td mat-cell *matCellDef=\"let element\">{{ changeIcon(element.src) }}\n            <img (click)=\"changeFile(element.id )\" [src]=\"iconFile\" width=\"35px\" alt=\"Subir imagen\" style=\"margin: 0 auto;\" />\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"preview\">\n          <th mat-header-cell *matHeaderCellDef>Ver</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button\n              mat-button\n              class=\"btn btn-primary\"\n              (click)=\"openPreviewDocumentDialog(element.src)\"\n            >\n              <mat-icon>launch</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef>Nombre</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n        </ng-container>\n\n\n        <ng-container matColumnDef=\"edit\">\n          <th mat-header-cell *matHeaderCellDef>editar</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button\n              mat-button\n              class=\"btn btn-primary\"\n              (click)=\"openUpdateDocumentDialog(element.id)\"\n            >\n              <mat-icon>launch</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n\n        <ng-container matColumnDef=\"delete\">\n          <th mat-header-cell *matHeaderCellDef>borrar</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button\n              mat-button\n              class=\"btn btn-primary\"\n              color=\"warn\"\n              (click)=\"deleteDocument(element.id)\"\n            >\n              <mat-icon>delete_outline</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedDocuments\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedDocuments\"></tr>\n      </table>\n    </mat-card-content>\n  </mat-card>\n\n\n</div>\n\n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TechnicalReport } from 'src/app/models/technicalReport.model';\nimport { TechnicalReportService } from 'src/app/services/technicalReport/technical-report.service';\nimport { SnackService } from 'src/app/services/snack.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\n\n@Component({\n  selector: 'app-technical-report',\n  templateUrl: './technical-report.component.html',\n  styleUrls: ['./technical-report.component.scss']\n})\nexport class TechnicalReportComponent implements OnInit {\n\n  technicalReports: TechnicalReport[] = [];\n  displayedColumns: string[] = ['background', 'acquisitionObjetive', 'testInspection', 'supportDocument','edit', 'delete'];\n  constructor(\n    public _technicalReport: TechnicalReportService,\n    public snackService: SnackService,\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.getTechnicalReports();\n  }\n\n\n  getTechnicalReports(){\n    this._technicalReport.getTechnicalReports()\n      .subscribe(technicalReports => this.technicalReports = technicalReports);\n  }\n\n  edit(id: string){\n    this.store.dispatch( actions.changeFormId({ formId: id}) );\n    this.router.navigateByUrl('/technicalReport/edit');\n  }\n\n  delete( id: string ) {\n\n    this._technicalReport.deleteTechnicalReport( id )\n            .subscribe ( () =>\n            {\n              this.snackService.warn('Se ha borrado correctamente la Especificacion Tecnica ');\n              this.getTechnicalReports();\n            });\n\n  }\n}\n","<div class=\"pageHeader\" >\n  <div class=\"title\" >\n  <h2>Especificaciones técnicas</h2>\n  <div class=\"breadcrumb-items\">\n    <a class=\"breadcrumb-item\" [routerLink] = \"['/dashboard']\">Inicio</a>\n    <!-- <a class=\"breadcrumb-item\" href=\"\">crumb b</a> -->\n    <a class=\"breadcrumb-item active\" href=\"\">Especificaciones técnicas</a>\n  </div><!-- .breadcrumb-items -->\n</div>\n  <!-- <button mat-raised-button color=\"accent\" routerLink=\"/technicalReport/new\" style=\"margin:1%; height: 40px;\" >\n    <mat-icon mat-list-icon>add</mat-icon>\n    Nueva especificación técnica\n  </button> -->\n</div>\n\n<table mat-table [dataSource]=\"technicalReports\" class=\"mat-elevation-z8\">\n\n\n  <ng-container matColumnDef=\"background\">\n    <th mat-header-cell *matHeaderCellDef> background </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.background}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"acquisitionObjetive\">\n    <th mat-header-cell *matHeaderCellDef> acquisitionObjetive </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.acquisitionObjetive}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"testInspection\">\n    <th mat-header-cell *matHeaderCellDef> testInspection </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.testInspection}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"supportDocument\">\n    <th mat-header-cell *matHeaderCellDef> supportDocument </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.supportDocument}} </td>\n  </ng-container>\n\n  <!-- Edit Column -->\n  <ng-container matColumnDef=\"edit\">\n    <th mat-header-cell *matHeaderCellDef> edit </th>\n    <td mat-cell *matCellDef=\"let element\"> <button mat-button (click)=\"edit(element.id)\" class=\"btn btn-primary\"><mat-icon>launch</mat-icon>\n    </button>  </td>\n  </ng-container>\n\n  <!-- Delete Column -->\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef>delete</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-button class=\"btn btn-primary\" color=\"warn\" (click)=\"delete(element.id)\">\n      <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../services/user.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SnackService } from '../../../services/snack.service';\nimport { Position } from 'src/app/models/position.model';\nimport { PositionService } from 'src/app/services/position/position.service';\n\n\n@Component({\n  selector: 'app-users-form',\n  templateUrl: './users-form.component.html',\n  styleUrls: ['./users-form.component.scss']\n})\nexport class UsersFormComponent implements OnInit {\n\n  public positions: Position[] = [];\n\n  public roles = [\n    {value: 'ADMIN_ROLE', viewValue: 'ADMIN_ROLE'},\n    {value: 'USER_ROLE', viewValue: 'USER_ROLE'}\n  ];\n\n  constructor(\n              public userService: UserService,\n              public snackService: SnackService,\n              public dialogRef: MatDialogRef<UsersFormComponent>,\n              public _position: PositionService,\n              ) {\n\n               }\n\n  ngOnInit(): void {\n    this.getPositions();\n  }\n\n  onSubmit() {\n\n    if (this.userService.form.valid) {\n      if (!this.userService.form.get('id').value) {\n        this.userService.saveUser(this.userService.form.value).subscribe( resp =>  this.snackService.success(':: Se ha creado correctamente al usuario'));\n       }\n      else {\n      this.userService.updateUser(this.userService.form.value).subscribe( resp => this.snackService.success(':: Se editado correctamente al usuario'));\n      }\n      this.userService.form.reset();\n      this.userService.initializeFormGroup();\n\n      this.onClose();\n    }\n  }\n\n  onClear() {\n    this.userService.form.reset();\n    this.userService.initializeFormGroup();\n    this.snackService.success(':: Se limpio el formulario');\n  }\n\n  onClose(){\n    this.userService.form.reset();\n    this.userService.initializeFormGroup();\n    this.dialogRef.close();\n  }\n\n  getPositions(){\n    this._position.getPositions().subscribe(positions => this.positions = positions);\n  }\n}\n","<mat-toolbar>\n    <div class=\"fill-remaining-space\">\n        <span class=\"fill-remaining-space\">Nuevo Ususario</span>\n        <button class=\"btn-dialog-close\" mat-stroked-button (click)=\"onClose()\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n    </div>\n\n  </mat-toolbar>\n  <form [formGroup]=\"userService.form\"  class=\"normal-form\" (submit)=\"onSubmit()\"  >\n    <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n        <mat-grid-tile>\n          <div class=\"controles-container\">\n            <input type=\"hidden\" formControlName=\"id\">\n            <mat-form-field>\n              <input formControlName=\"name\" matInput placeholder=\"Nombres\">\n              <mat-error>Este campo es obligatorio.</mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n                <input formControlName=\"lastname\" matInput placeholder=\"Apellidos\">\n                <mat-error>Este campo es obligatorio.</mat-error>\n              </mat-form-field>\n\n            <mat-form-field>\n              <input formControlName=\"email\" matInput placeholder=\"Email\">\n              <mat-error>Este email no es válido.</mat-error>\n            </mat-form-field>\n            <mat-form-field >\n              <input formControlName=\"password\" matInput placeholder=\"Contrasena\">\n              <mat-error *ngIf=\"userService.form.controls['password'].errors?.required\">Este campo es obligatorio.</mat-error>\n              <mat-error *ngIf=\"userService.form.controls['password'].errors?.minlength\">Este campo debe tener al menos 5 letras.</mat-error>\n            </mat-form-field>\n\n\n\n          </div>\n        </mat-grid-tile>\n\n        <mat-grid-tile>\n          <div class=\"controles-container\">\n\n            <mat-form-field>\n              <mat-select formControlName=\"role\" placeholder=\"Role\">\n                <mat-option>None</mat-option>\n                <ng-container *ngFor=\"let rol of roles\">\n                    <mat-option value=\"{{rol.value}}\">{{rol.viewValue}}</mat-option>\n                  </ng-container>\n\n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-select formControlName=\"positionId\" placeholder=\"Cargo\">\n                  <mat-option>None</mat-option>\n                  <ng-container *ngFor=\"let position of positions\">\n                    <mat-option value=\"{{position.id}}\">{{position.name}}</mat-option>\n                  </ng-container>\n                </mat-select>\n              </mat-form-field>\n\n\n            <div class=\"button-row\">\n              <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"userService.form.invalid\">Guardar</button>\n              <button mat-raised-button color=\"warn\" >Limpiar</button>\n            </div>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n  </form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { IUser } from '../../interfaces/interfaces';\n// import { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UsersFormComponent } from './users-form/users-form.component';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SnackService } from '../../services/snack.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  listData: MatTableDataSource<any>;\n  displayedColumns: string[] = ['name', 'lastname', 'email', 'role', 'actions'];\n  // columnsToDisplay: string[] = this.displayedColumns.slice();\n  users: IUser[] = [];\n  searchKey: string;\n  showPass = true;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n              public dialog: MatDialog,\n              public snackService: SnackService,\n              private userService: UserService,\n    ) {}\n\n  ngOnInit(): void {\n\n    this.getUsers();\n\n  }\n\n  getUsers() {\n    this.userService.getUsers()\n    .subscribe(\n      res => {\n        this.users = res;\n        // console.log(this.users);\n      },\n      err => console.error(err)\n    );\n  }\n\n  editUser(row): void {\n    this.showPass = false;\n    // console.log(row);\n    this.userService.populateForm(row);\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '60%';\n    const dialogRef = this.dialog.open(UsersFormComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.getUsers();\n    });\n  }\n\n  createUser() {\n    this.showPass = true;\n    this.userService.initializeFormGroup();\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '60%';\n    const dlgRef = this.dialog.open(UsersFormComponent, dialogConfig);\n    dlgRef.afterClosed().subscribe(result => {\n      this.getUsers();\n    });\n  }\n  applyFilter(){}\n  onSearchClear(){}\n\n  delete(id): void {\n    if (confirm('Esta seguro que quiere eliminar al usuario ?')){\n      this.userService.deleteUser(id).subscribe( resp => {\n        console.log('se eliminó correctamente al usuario');\n        this.getUsers();\n      });\n      this.snackService.warn('Se ha borrado correctamente al usuario');\n      }\n  }\n\n\n\n}\n","<div class=\"content\" >\n\n<h2>\n    <mat-icon mat-list-icon color=\"primary\">domain_verification</mat-icon>\n    Usuarios\n  </h2>\n\n\n  <div class=\"search-div\">\n    <button mat-raised-button class=\"create\"  (click)=\"createUser()\">\n      <mat-icon>add</mat-icon>Nuevo usuario\n    </button>\n    <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\n      <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Buscar ...\" autocomplete=\"off\" (keyup)=\"applyFilter()\">\n      <button mat-button matSuffix mat-icon-button aria-label=\"Clear\"*ngIf=\"searchKey\"  (click)=\"onSearchClear()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n  </div>\n\n  <table mat-table [dataSource]=\"users\" class=\"mat-elevation-z8\"  >\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\" sticky>\n      <th mat-header-cell *matHeaderCellDef> NOMBRES </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"lastname\" sticky>\n      <th mat-header-cell *matHeaderCellDef> APELLIDOS </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.lastname}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"email\" sticky>\n      <th mat-header-cell *matHeaderCellDef> EMAIL </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n    </ng-container>\n\n     <!-- Name Column -->\n     <ng-container matColumnDef=\"role\" sticky>\n      <th mat-header-cell *matHeaderCellDef> ROLE </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.role}} </td>\n    </ng-container>\n\n    <!-- <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n        <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\n      </ng-container>\n     -->\n      <!-- Star Column -->\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef> ACCIONES </th>\n      <td mat-cell *matCellDef=\"let row\">\n        \n        <button mat-icon-button (click)=\"editUser(row)\"><mat-icon>launch</mat-icon></button>\n        <button mat-icon-button color=\"warn\" (click)=\"delete(row.id)\"><mat-icon>delete_outline</mat-icon></button>\n\n      </td>\n    </ng-container>\n\n    \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    \n  </table>\n  <mat-paginator class=\"mat-elevation-z8\" [pageSizeOptions]=\"[5, 10, 25, 100]\" [pageSize]=\"10\" showFirstLastButtons></mat-paginator>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\nconst base_url = 'http://localhost:3000/uploads/';\n\n@Pipe({\n  name: 'pdfView'\n})\nexport class PdfViewPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  transform( src) {\n    if(src){\n\n      return this.sanitizer.bypassSecurityTrustResourceUrl(`${base_url}${src}`);\n    }\n    else\n    {\n      return;\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { PdfViewPipe } from './pdfView.pipe';\n\n\n\n@NgModule({\n  declarations: [ PdfViewPipe ],\n  exports: [ PdfViewPipe ],\n})\nexport class PipesModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { AcquisitionRequest } from 'src/app/models/acquisitionRequest.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AcquisitionRequestService {\n  private URL = GLOBAL.uri;\n\n  constructor(private http: HttpClient) {}\n\n  getAcquisitionRequests() {\n    let url = this.URL + '/acquisitionRequests';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.acquisitionRequests;\n      })\n    );\n  }\n\n  getAcquisitionRequest(id: string) {\n    let url = this.URL + '/acquisitionRequests/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.acquisitionRequest;\n      })\n    );\n  }\n\n  getACQRequest(id: string) {\n    let url = this.URL + '/acquisitionRequests/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.acquisitionRequest;\n      })\n    );\n  }\n\n  createAcquisitionRequest(acquisitionRequest: {code: string, version: string,validity: Date, numRequest: string, requestDate: Date, nPac: string, place: string, question1: string, question2: string, question3: string, coin: string, title: string}){\n    let url = this.URL + '/acquisitionRequests';\n    return this.http.post( url, acquisitionRequest);\n\n  }\n\n  updateAcquisitionRequest(acquisitionRequest: AcquisitionRequest){\n    let url = this.URL + '/acquisitionRequests/'+acquisitionRequest.id;\n    return this.http.put( url, acquisitionRequest);\n  }\n\n  deleteAcquisitionRequest( id: string) {\n\n    let url = this.URL + '/acquisitionRequests/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { AdmCondition } from 'src/app/models/admCondition.model';\nimport { GLOBAL } from '../../config/global';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdmConditionService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getAdmConditions() {\n    let url = this.URL + '/admConditions';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.admConditions;\n      })\n    );\n  }\n\n  getAdmCondition(id: string) {\n    let url = this.URL + '/admConditions/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.admCondition;\n      })\n    );\n  }\n\n  getAdmConditionRequest(id: string) {\n    let url = this.URL + '/admConditions/request/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.admCondition;\n      })\n    );\n  }\n\n  createAdmCondition(admCondition: {priority: string, type:string, warranty: string, deliveryTime: number, placeDelivery: string, posibleProviders: string, requestId: string}){\n    let url = this.URL + '/admConditions';\n    return this.http.post( url, admCondition);\n\n  }\n\n  updateAdmCondition(admCondition: AdmCondition){\n    let url = this.URL + '/admConditions/'+admCondition.id;\n    return this.http.put( url, admCondition);\n  }\n\n  deleteAdmCondition(id: string){\n    let url = this.URL + '/admConditions/'+ id;\n    return this.http.delete(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { GLOBAL } from '../config/global';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private URL = GLOBAL.uri;\n\n  constructor( private http: HttpClient, private router: Router) { }\n \n  signIn(user) {\n    return this.http.post<any>(this.URL + '/users/signin', user);\n  }\n\n  signUp(user) {\n    return this.http.post<any>(this.URL + '/users/signup', user);\n  } \n\n  loggedIn(): boolean {\n    return !!localStorage.getItem('token');\n  }\n\n  getToken() {\n    // console.log('Este es el token devuelto', localStorage.getItem('token'));\n    return localStorage.getItem('token');\n\n  }\n  getUser(){\n    return localStorage.getItem('user');\n  }\n  logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      this.router.navigate(['/login']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { BudgetCertification } from 'src/app/models/budgetCertification.model';\nimport { GLOBAL } from '../../config/global';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BudgetCertificationService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getBudgetCertifications() {\n    let url = this.URL + '/budgetCertifications';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.budgetCertifications;\n      })\n    );\n  }\n\n  getBudgetCertification(id: string) {\n    let url = this.URL + '/budgetCertifications/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.budgetCertification;\n      })\n    );\n  }\n\n  getBC(id: string) {\n    let url = this.URL + '/budgetCertifications/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.budgetCertification;\n      })\n    );\n  }\n\n  createBudgetCertification(budgetCertification: {reserveCode: string}){\n    let url = this.URL + '/budgetCertifications';\n    return this.http.post( url, budgetCertification);\n\n  }\n\n  updateBudgetCertification(budgetCertification: BudgetCertification){\n    let url = this.URL + '/budgetCertifications/'+ budgetCertification.id;\n    return this.http.put( url, budgetCertification);\n  }\n\n  deleteBudgetCertification( id: string) {\n\n    let url = this.URL + '/budgetCertifications/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Company } from 'src/app/models/company.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getCompanies() {\n    let url = this.URL + '/companies';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.companies;\n      })\n    );\n  }\n\n  getCompany(id: string) {\n    let url = this.URL + '/companies/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.company;\n      })\n    );\n  }\n\n  createCompany(company: {name: string, direction: string, nit: string, email: string, phone:string}){\n    let url = this.URL + '/companies';\n    return this.http.post( url, company);\n\n  }\n\n  updateCompany(company: Company){\n    let url = this.URL + '/companies/'+company.id;\n    return this.http.put( url, company);\n  }\n\n  deleteCompany( id: string) {\n\n    let url = this.URL + '/companies/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { IUser, IConfirmForm } from '../interfaces/interfaces';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n// import * as _ from 'lodash';\nimport { User } from '../models/user';\nimport { GLOBAL } from '../config/global';\nimport { ConfirmForm } from '../models/confirmForm.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ConfirmFormService {\n\n  constructor( private http: HttpClient) { this.getStorage(); }\n\n  private URL = GLOBAL.uri;\n  user: User;\n  token: string;\n\n  form: FormGroup = new FormGroup({\n    id: new FormControl(null),\n    userId: new FormControl('', Validators.required),\n    codeRequest: new FormControl(''),\n    dateAt: new FormControl('', Validators.required),\n    observation: new FormControl('', Validators.email),\n    refuse: new FormControl(false)\n  });\n\n  getStorage() {\n    if ( localStorage.getItem('token')) {\n      this.token = localStorage.getItem('token');\n      this.user = JSON.parse(localStorage.getItem('user'));\n    } else {\n      this.token = '';\n      this.user = null;\n    }\n  }\n\n  initializeFormGroup() {\n    this.form.setValue({\n      id: null,\n      userId: this.user.id,\n      codeRequest: '',\n      dateAt: new Date(),\n      observation: '',\n      refuse: null\n    });\n  }\n\n  getConfirmations() {\n\n    // return this.http.get<IUser[]>(this.URL + '/users').pipe(map(results => results['data']));\n   try{\n    return this.http.get<IConfirmForm[]>(this.URL + '/confirmations')\n    .pipe(\n        map( results => {\n          return results['confirmations'];\n          }\n        )\n      );\n\n   } catch(err) {\n     console.log('error ====> ', err );\n   }\n  }\n\n  getConfirmation(id: string) {\n    return this.http.get<IConfirmForm>(this.URL + '/confirmations/' + id);\n  }\n\n  onSetForm(confirmation) {\n    this.form.setValue(confirmation);\n  }\n\n  saveConfirmation( confirmation: ConfirmForm) {\n\n    return this.http.post( this.URL + '/confirmations/', confirmation).pipe(\n      map( (resp: any) => {\n        return resp['confirmation'];\n        })\n      );\n  }\n\n  updateConfirmation( confirmation: ConfirmForm ) {\n\n    return this.http.put( this.URL + '/confirmations/' + confirmation.id , confirmation ).pipe(\n        map( (resp: any)  => {\n          return true;\n        }));\n\n  }\n\n  deleteConfirmation( id: string ) {\n\n    return this.http.delete( this.URL + '/confirmationss/' + id ).pipe(\n      map( resp => {\n        // alert('Usuario eliminado correctamente');\n        return true;\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Document } from 'src/app/models/document.model';\nimport { SnackService } from '../snack.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalFileUploadService } from 'src/app/components/modal-file-upload/modal-file-upload.service';\nimport { ModalFileUploadComponent } from 'src/app/components/modal-file-upload/modal-file-upload.component';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport * as actions from '../../store/actions/status.actions';\nimport { Status } from '../../models/status.model';\nimport { UploadFileService } from '../upload-file/upload-file.service';\nimport { GLOBAL } from '../../config/global';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentService {\n  private URL = GLOBAL.uri;\n  iconFile = '../assets/images/icon/add-file.png';\n  currentStatus: Status;\n  constructor(\n    private http: HttpClient,\n    public snackService: SnackService,\n    private dialog: MatDialog,\n    public modalFileUploadService: ModalFileUploadService,\n    private uploadFileService: UploadFileService,\n    private store: Store<AppState>\n    ) { \n      \n      this.store.select('status').subscribe(({ status }) => {\n        if (status != null) {\n          // console.log('el estado actual es ', status);\n          this.currentStatus = status;\n        }\n      });\n\n    }\n  getDocuments() {\n    let url = this.URL + '/documents';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.documents;\n      })\n    );\n  }\n\n  getDocument(id: string) {\n    let url = this.URL + '/documents/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.document;\n      })\n    );\n  }\n\n  getDocumentForm(id: string) {\n    let url = this.URL + '/documents/form/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.documents;\n      })\n    );\n  }\n\n  createDocument(document: {name: string, type:string, formId: string, src: string, status: string, createDate: Date}){\n    let url = this.URL + '/documents';\n    return this.http.post( url, document);\n\n  }\n\n  updateDocument(document: Document){\n    let url = this.URL + '/documents/'+ document.id;\n    return this.http.put( url, document);\n  }\n\n  deleteDocument( id: string) {\n\n    let url = this.URL + '/documents/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n  getFile(src){\n    let url = this.URL + '/files/' + `${src}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp;\n      })\n    );\n  }\n\n  changeFile(id: string) {\n    this.dialog.open(ModalFileUploadComponent);\n    this.modalFileUploadService.showModal( 'docs', id );\n\n    this.modalFileUploadService.modalNotification\n                .subscribe( (resp: any) => {\n                  console.log(resp.document.src);\n\n                  return resp.document.src;\n\n                });\n    this.dialog.afterAllClosed.subscribe( () => {\n      // actualiza el estado si subio el archivo\n      \n      if ( this.uploadFileService.uploaded ) {\n            const std: Status = Status.fromState( this.currentStatus );\n            std.status = 'terminado';\n            // console.log('current status ', std);\n            this.store.dispatch( actions.updateStatus({ status: std }));\n         }\n    });\n  }\n\n  changeIcon(src) {\n\n    if (src == \"./uploads\") {\n      this.iconFile = '../assets/images/icon/add-file.png';\n      return this.iconFile;\n    }\n    const ext = src.split('.');\n    // console.log('extencion', ext);\n\n    if (ext[1] === 'pdf') {\n      this.iconFile = '../assets/images/icon/pdf.png';\n      }\n\n    return this.iconFile;\n\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { LegalContract } from 'src/app/models/legalContract.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegalContractService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) {}\n\n  getLegalContracts() {\n    let url = this.URL + '/legalContracts';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.legalContracts;\n      })\n    );\n  }\n\n  getLegalContract(id: string) {\n    let url = this.URL + '/legalContracts/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.legalContract;\n      })\n    );\n  }\n\n  getPCD(id: string) {\n    let url = this.URL + '/legalContracts/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.legalContract;\n      })\n    );\n  }\n\n  createLegalContract(legalContract: {code: string, description:string, responsable:string}){\n    let url = this.URL + '/legalContracts';\n    return this.http.post( url, legalContract);\n\n  }\n\n  updateLegalContract(legalContract: LegalContract){\n    let url = this.URL + '/legalContracts/'+ legalContract.id;\n    return this.http.put( url, legalContract);\n  }\n\n  deleteLegalContract( id: string) {\n\n    let url = this.URL + '/legalContracts/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Office } from 'src/app/models/office.model';\nimport { GLOBAL } from '../../config/global';\n@Injectable({\n  providedIn: 'root'\n})\nexport class OfficeService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getOffices() {\n    let url = this.URL + '/offices';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.offices;\n      })\n    );\n  }\n\n  getOffice(id: string) {\n    let url = this.URL + '/offices/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.office;\n      })\n    );\n  }\n\n  getOF(id: string) {\n    let url = this.URL + '/offices/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.office;\n      })\n    );\n  }\n\n  createOffice(office: {name: string, companyId: string,supOfficeId: string}){\n    let url = this.URL + '/offices';\n    return this.http.post( url, office);\n\n  }\n\n  updateOffice(office: Office){\n    let url = this.URL + '/offices/'+office.id;\n    return this.http.put( url, office);\n  }\n\n  deleteOffice( id: string) {\n\n    let url = this.URL + '/offices/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Position } from 'src/app/models/position.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PositionService {\n\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getPositions() {\n    let url = this.URL + '/positions';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.positions;\n      })\n    );\n  }\n\n  getPosition(id: string) {\n    let url = this.URL + '/positions/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.position;\n      })\n    );\n  }\n\n  createPosition(position: {name: string, officeId: string,active: boolean}){\n    let url = this.URL + '/positions';\n    return this.http.post( url, position);\n\n  }\n\n  updatePosition(position: Position){\n    let url = this.URL + '/positions/'+position.id;\n    return this.http.put( url, position);\n  }\n\n  deletePosition( id: string) {\n\n    let url = this.URL + '/positions/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Procedure } from 'src/app/models/procedure.model';\nimport { IProcedure } from '../../interfaces/interfaces';\nimport { GLOBAL } from '../../config/global';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcedureService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) {}\n\n  getProcedures() {\n    let url = this.URL + '/procedures';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.procedures;\n      })\n    );\n  }\n\n  getProcedure(id: string) {\n    let url = this.URL + '/procedures/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.procedure;\n      })\n    );\n  }\n\n  getProcedureByOrder(order: number) {\n    let url = this.URL + '/procedures/byorder/' + order;\n    return this.http.get<IProcedure>(url).pipe(\n      map((resp: any) => {\n       \n        return resp.procedure;\n      })\n    );\n  }\n\n  getProcedureByPosition(positionId: string) {\n    // console.log('positionId', positionId);\n    let url = this.URL + '/procedures/byposition/' + positionId;\n    // console.log('url ', url);\n    \n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        // console.log(resp.procedure);\n        return resp.procedure;\n      })\n    );\n  }\n\n  createProcedure(procedure: {positionId: string, procedureName:string, order: number}){\n    let url = this.URL + '/procedures';\n    return this.http.post( url, procedure);\n\n  }\n\n  updateProcedure(procedure: Procedure){\n    let url = this.URL + '/procedures/'+ procedure.id;\n    return this.http.put( url, procedure);\n  }\n\n  deleteProcedure( id: string) {\n\n    let url = this.URL + '/procedures/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { ProcessStart } from 'src/app/models/processStart.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessStartService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) {}\n\n  getProcessStarts() {\n    let url = this.URL + '/processStarts';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.processStarts;\n      })\n    );\n  }\n\n  getProcessStart(id: string) {\n    let url = this.URL + '/processStarts/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.processStart;\n      })\n    );\n  }\n\n  getPSD(id: string) {\n    let url = this.URL + '/processStarts/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.processStart;\n      })\n    );\n  }\n\n  createProcessStart(processStart: {category: string, startDate:Date, endDate:Date}){\n    let url = this.URL + '/processStarts';\n    return this.http.post( url, processStart);\n\n  }\n\n  updateProcessStart(processStart: ProcessStart){\n    let url = this.URL + '/processStarts/'+ processStart.id;\n    return this.http.put( url, processStart);\n  }\n\n  deleteProcessStart( id: string) {\n\n    let url = this.URL + '/processStarts/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Product } from 'src/app/models/product.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) {}\n\n  getProducts() {\n    let url = this.URL + '/products';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.products;\n      })\n    );\n  }\n\n  getProduct(id: string) {\n    let url = this.URL + '/products/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.product;\n      })\n    );\n  }\n\n  createProduct(product: {name: string, description:string, quantity: string, price: number, requestId: string}){\n    let url = this.URL + '/products';\n    return this.http.post( url, product);\n\n  }\n\n  updateProduct(product: Product){\n    let url = this.URL + '/products/'+ product.id;\n    return this.http.put( url, product);\n  }\n\n  deleteProduct( id: string) {\n\n    let url = this.URL + '/products/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { ProposalComparison } from 'src/app/models/proposalComparison.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalComparisonService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) {}\n\n  getProposalComparisons() {\n    let url = this.URL + '/proposalComparisons';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalComparisons;\n      })\n    );\n  }\n\n  getProposalComparison(id: string) {\n    let url = this.URL + '/proposalComparisons/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalComparison;\n      })\n    );\n  }\n\n  getPCD(id: string) {\n    let url = this.URL + '/proposalComparisons/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalComparison;\n      })\n    );\n  }\n\n  createProposalComparison(proposalComparison: {code: string, description:string, provider:string}){\n    let url = this.URL + '/proposalComparisons';\n    return this.http.post( url, proposalComparison);\n\n  }\n\n  updateProposalComparison(proposalComparison: ProposalComparison){\n    let url = this.URL + '/proposalComparisons/'+ proposalComparison.id;\n    return this.http.put( url, proposalComparison);\n  }\n\n  deleteProposalComparison( id: string) {\n\n    let url = this.URL + '/proposalComparisons/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { ProposalEvaluation } from 'src/app/models/proposalEvaluation.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalEvaluationService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getProposalEvaluations() {\n    let url = this.URL + '/proposalEvaluations';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalEvaluations;\n      })\n    );\n  }\n\n  getProposalEvaluation(id: string) {\n    let url = this.URL + '/proposalEvaluations/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalEvaluation;\n      })\n    );\n  }\n\n  getPEP(id: string) {\n    let url = this.URL + '/proposalEvaluations/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalEvaluation;\n      })\n    );\n  }\n\n\n  createProposalEvaluation(proposalEvaluation: {code: string}){\n    let url = this.URL + '/proposalEvaluations';\n    return this.http.post( url, proposalEvaluation);\n\n  }\n\n  updateProposalEvaluation(proposalEvaluation: ProposalEvaluation){\n    let url = this.URL + '/proposalEvaluations/'+ proposalEvaluation.id;\n    return this.http.put( url, proposalEvaluation);\n  }\n\n  deleteProposalEvaluation( id: string) {\n\n    let url = this.URL + '/proposalEvaluations/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { ProposalProvider } from 'src/app/models/proposalProvider.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalProviderService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getProposalProviders() {\n    let url = this.URL + '/proposalProviders';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalProviders;\n      })\n    );\n  }\n\n  getProposalProvider(id: string) {\n    let url = this.URL + '/proposalProviders/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalProvider;\n      })\n    );\n  }\n\n  getPPForm(id: string) {\n    let url = this.URL + '/proposalProviders/form/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.proposalProviders;\n      })\n    );\n  }\n\n\n  createProposalProvider(proposalProvider: {name: string, nit: string, date: Date, formId: string}){\n    let url = this.URL + '/proposalProviders';\n    return this.http.post( url, proposalProvider);\n\n  }\n\n  updateProposalProvider(proposalProvider: ProposalProvider){\n    let url = this.URL + '/proposalProviders/'+ proposalProvider.id;\n    return this.http.put( url, proposalProvider);\n  }\n\n  deleteProposalProvider( id: string) {\n\n    let url = this.URL + '/proposalProviders/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { PurchaseOrder } from 'src/app/models/purchaseOrder.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchaseOrderService {\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) {}\n\n  getPurchaseOrders() {\n    let url = this.URL + '/purchaseOrders';\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.purchaseOrders;\n      })\n    );\n  }\n\n  getPurchaseOrder(id: string) {\n    let url = this.URL + '/purchaseOrders/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.purchaseOrder;\n      })\n    );\n  }\n\n  getPOD(id: string) {\n    let url = this.URL + '/purchaseOrders/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.purchaseOrder;\n      })\n    );\n  }\n\n  createPurchaseOrder(purchaseOrder: {code: string, description:string}){\n    let url = this.URL + '/purchaseOrders';\n    return this.http.post( url, purchaseOrder);\n\n  }\n\n  updatePurchaseOrder(purchaseOrder: PurchaseOrder){\n    let url = this.URL + '/purchaseOrders/'+ purchaseOrder.id;\n    return this.http.put( url, purchaseOrder);\n  }\n\n  deletePurchaseOrder( id: string) {\n\n    let url = this.URL + '/purchaseOrders/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  config: MatSnackBarConfig = {\n    duration: 3000,\n    horizontalPosition: 'right',\n    verticalPosition: 'top'\n  }\n\n\n  success(msg) {\n    this.config['panelClass'] = ['notification', 'success'];\n    this.snackBar.open(msg, 'Correcto', this.config);\n  }\n\n  warn(msg) {\n    this.config['panelClass'] = ['notification', 'warn'];\n    this.snackBar.open(msg, 'Atención', this.config);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Status } from 'src/app/models/status.model';\nimport { GLOBAL } from '../../config/global';\nimport { AuthService } from '../auth.service';\nimport { User } from '../../models/user';\nimport { ProcedureService } from '../procedure/procedure.service';\nimport { IStatus } from '../../interfaces/interfaces';\nimport { PositionService } from '../position/position.service';\nimport { FormGroup, FormControl, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Observable } from 'rxjs/internal/Observable';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n  private URL = GLOBAL.uri;\n  // currentProcedure: IProcedure;\n  statuss: IStatus [] = [];\n  currentUser: User;\n  currentDate1: Date = new Date();\n  currentDate2: Date = new Date();\n  searchform: FormGroup;\n  selectedStatus: Status;\n  private user: User;\n\n  constructor(\n              private http: HttpClient,\n              private authService: AuthService,\n              private procedureService: ProcedureService,\n              private positionService: PositionService\n              ) {\n\n                this.user = JSON.parse(this.authService.getUser());\n\n                this.currentDate1.setSeconds(this.currentDate1.getSeconds() - this.currentDate1.getMinutes() * 60);\n                this.currentDate1.setTime(this.currentDate1.getTime() - (24 * 60 * 60 * 1000) * 14);\n                this.currentDate2.setSeconds(this.currentDate2.getSeconds() - this.currentDate2.getMinutes() * 60);\n\n                if (this.user) {\n\n                  this.searchform = new FormGroup({\n                    userId: new FormControl(this.user.id, Validators.required),\n                    startDate: new FormControl(this.currentDate1, [Validators.required, this.validStartDate('endDate')]),\n                    endDate: new FormControl(this.currentDate2, [Validators.required, this.validEndDate('startDate')])\n                  });\n                }\n\n\n              }\n\n  validStartDate(field_name): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        // console.log('Valor dato ', control.root.value[field_name]);\n        const isValid = control.root.value[field_name] > input;\n        if (!isValid) {return { validStartDate: {isValid}};\n        } else { return null; }\n\n    };\n  }\n\n\n  validEndDate(field_name): ValidatorFn  {\n    return (control: AbstractControl): { [key: string]: any } => {\n        const input = control.value;\n        const isValid = control.root.value[field_name] < input;\n        if (!isValid) {\n            return { validEndDate: {isValid}};\n        }\n        else {\n            return null;\n        }\n    };\n  }\n\n  reciveStatus(row) {\n    this.selectedStatus = row;\n  }\n\n  getStatuss() {\n    const url = this.URL + '/status';\n    return this.http.get<IStatus>(url).pipe(\n      map((resp: any) => {\n        return resp.status;\n      })\n    );\n  }\n\n  getStatusByPositionId(postionId: string, procedureId: string, userId: string){\n\n    const url = this.URL + '/status/positionId/' + postionId + '/' + procedureId + '/' + userId;\n    return this.http.get<IStatus>(url).pipe(\n      map((resp: any) => {\n        return resp.status;\n      })\n    );\n\n  }\n\n  getStatusByUserId(searchForm): Observable<any>{\n    const url = this.URL + '/status/statusById';\n    return this.http.post( url, searchForm);\n  }\n\n  getStatus(id: string) {\n\n    const url = this.URL + '/status/' + id;\n    return this.http.get<IStatus>(url).pipe(\n      map((resp: any) => {\n        return resp.status;\n      })\n    );\n  }\n\n  getStatusByRequest(codeRequest: string) {\n    const url = this.URL + '/status/byrequest/' + codeRequest;\n    return this.http.get<IStatus>(url).pipe(\n      map((resp: any) => {\n          return resp.status;\n      })\n    );\n  }\n\n  createStatus(status: Status) {\n    const url = this.URL + '/status';\n    return this.http.post( url, status);\n\n  }\n\n  getCurrentStatus(codeRequest: string) {\n    const url = this.URL + '/status/current/' + codeRequest;\n    return this.http.get<IStatus>(url).pipe(\n      map((resp: any) => {\n          return resp.status;\n      })\n    );\n  }\n\n  addProcedureStatus(status: Status, formId: string) {\n    let newOrder = 0 ;\n    if (status.procedureId === null ) {\n       // caso 1:\n        // no recibe nada se debe crear un estado inicial con current en false\n        // y un nuevo estado con el siguiente id de procedimiento y  con current en true y el usuario en null\n\n        newOrder = 1;\n\n        this.procedureService.getProcedureByOrder(newOrder)\n              .subscribe(\n                currentProcedure => {\n                  status.procedureId = currentProcedure.id;\n                  status.name = currentProcedure.procedureName;\n                  status.current = false;\n                  status.userId = this.user.id;\n\n                  this.createStatus(status).subscribe(\n                    (result: any) => {\n                      console.log('se ha creado correctamente el estado ', result);\n                      newOrder = currentProcedure.order + 1;\n                      this.procedureService.getProcedureByOrder(newOrder)\n                            .subscribe( nextProcedure => {\n\n                              console.log('siguiente procedimiento ', nextProcedure);\n                              status.procedureId = nextProcedure.id;\n                              status.name = nextProcedure.procedureName;\n                              status.formId = null;\n                              status.current = true;\n                              status.userId = null;\n\n                              this.createStatus(status). subscribe(\n                                nextStatus => {\n                                  console.log('Se ha creado el siguiente estado', nextStatus );\n                                }, error => console.log(error)\n                              );\n\n                            }, error => console.log(error));\n\n\n                    }, error => console.log(error)\n                  );\n\n                }, error => console.log(error));\n\n      } else {\n\n        // caso 2:\n        // existe un estado que debe actualizarse al usuario actual  y current en false\n        // y un nuevo estado con el siguiente id de procedimiento y  con current en true y el usuario en null\n\n        this.procedureService.getProcedure(status.procedureId)\n              .subscribe(\n                currentProcedure => {\n                  console.log('procedimiento actual ', currentProcedure);\n\n                  status.current = false;\n                  status.userId = this.user.id;\n                  status.formId = formId;\n                  status.dateAt = new Date('dd/MM/yyyy HH:mm:ss');\n\n                  this.updateStatus(status)\n                        .subscribe(\n                          currentStatus => {\n                            console.log('estado actualizado', currentStatus);\n                          }, error => console.log(error)\n                        );\n\n                  newOrder = currentProcedure.order + 1;\n                  this.procedureService.getProcedureByOrder(newOrder)\n                    .subscribe(\n                      res => {\n                        status.procedureId = res.id;\n                        status.name = res.procedureName;\n                        status.current = true;\n                        status.userId = null;\n\n                        this.createStatus(status).subscribe(\n                          (result: any) => {\n                            console.log('se ha creado correctamente el estado ', result);\n\n                          }, error => console.log(error)\n                        );\n\n                      }, error => console.log(error));\n                }\n              );\n\n      } // fin else\n\n  }\n\n   addStatus(codeRequest: string, formId: string, name: string) {\n\n    let status: Status;\n    this.getCurrentStatus(codeRequest).subscribe(\n      result => {\n        // console.log('result', result);\n        if (result === null){\n          status = new Status(null, null, null, formId, 'proceso', new Date('dd/MM/yyyy HH:mm:ss'), false, codeRequest, 'estado Inicial');\n\n          this.addProcedureStatus(status, formId);\n\n        }else {\n          status = result;\n          this.addProcedureStatus(status, formId);\n        }\n\n      }, error => console.log(error)\n    );\n\n\n  }\n\n  updateStatus(status: Status){\n    const url = this.URL + '/status/' + status.id;\n    return this.http.put( url, status);\n  }\n\n  deleteStatus( id: string) {\n\n    const url = this.URL + '/status/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { TechnicalEvaluation } from 'src/app/models/technicalEvaluation.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnicalEvaluationService {\n\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getTechnicalEvaluations() {\n\n    let url = this.URL + '/technicalEvaluations';\n    return this.http.get( url ).pipe(\n              map( (resp: any) => {\n                return resp.technicalEvaluations;\n              }));\n\n  }\n\n  getTechnicalEvaluation(id: string) {\n    let url = this.URL + '/technicalEvaluations/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.technicalEvaluation;\n      })\n    );\n  }\n\n  getTED(id: string) {\n    let url = this.URL + '/technicalEvaluations/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.technicalEvaluation;\n      })\n    );\n  }\n\n  createTechnicalEvaluation(technicalEvaluation: {to: string, via: string,  whose: string, number: string, date: Date}){\n    let url = this.URL + '/technicalEvaluations';\n    return this.http.post( url, technicalEvaluation);\n\n  }\n\n  updateTechnicalEvaluation(technicalEvaluation: TechnicalEvaluation){\n    let url = this.URL + '/technicalEvaluations/'+technicalEvaluation.id;\n    return this.http.put( url, technicalEvaluation);\n  }\n\n  deleteTechnicalEvaluation( id: string) {\n\n    let url = this.URL + '/technicalEvaluations/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { TechnicalReport } from 'src/app/models/technicalReport.model';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnicalReportService {\n\n  private URL = GLOBAL.uri;\n  constructor(private http: HttpClient) { }\n\n  getTechnicalReports() {\n\n    let url = this.URL + '/technicalReports';\n    return this.http.get( url ).pipe(\n              map( (resp: any) => {\n                return resp.technicalReports;\n              }));\n\n  }\n\n  getTechnicalReport(id: string) {\n    let url = this.URL + '/technicalReports/' + id;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.technicalReport;\n      })\n    );\n  }\n\n  getTR(id: string) {\n    let url = this.URL + '/technicalReports/all/' + `${id}`;\n    return this.http.get(url).pipe(\n      map((resp: any) => {\n        return resp.technicalReport;\n      })\n    );\n  }\n\n  createTechnicalReport(technicalReport: {background: string, acquisitionObjetive: string, testInspection: string, supportDocument: string, technicalQuarantee: string, technicalService: string, placeDelivery: string, deliveryTerm: string, price: string}){\n    let url = this.URL + '/technicalReports';\n    return this.http.post( url, technicalReport);\n\n  }\n\n  updateTechnicalReport(technicalReport: TechnicalReport){\n    let url = this.URL + '/technicalReports/'+technicalReport.id;\n    return this.http.put( url, technicalReport);\n  }\n\n  deleteTechnicalReport( id: string) {\n\n    let url = this.URL + '/technicalReports/' + id;\n    return this.http.delete( url ).pipe(\n      map( resp => {\n        return resp;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n  constructor( private authService: AuthService) { }\n\n  intercept(req, next) {\n    const tokenizeReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`\n      }\n    })\n    return next.handle(tokenizeReq);\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { GLOBAL } from '../../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadFileService {\n  private URL = GLOBAL.uri;\n  uploaded = false;\n  constructor() { }\n\n  uploadArch(file: File, id: string ) {\n\n\n    return new Promise(( resolve, reject ) => {\n      this.uploaded = false;\n      const formData = new FormData();\n      const xhr = new XMLHttpRequest();\n\n      formData.append('sfile', file, file.name);\n      xhr.onreadystatechange = () => {\n\n      if ( xhr.readyState === 4) {\n\n        if ( xhr.status === 200 ) {\n          // console.log ( 'El archivo se subio correctamente' );\n          this.uploaded = true;\n          resolve( JSON.parse(xhr.response)  );\n\n        } else {\n\n          console.log('Falló la subida del archivo');\n          this.uploaded = false;\n          reject( JSON.parse(xhr.response) );\n        }\n      }\n\n    };\n\n      const url = this.URL + '/files/'+ id;\n\n      xhr.open( 'PUT', url, true );\n      xhr.send( formData );\n\n  });\n\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { IUser } from '../interfaces/interfaces';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from 'lodash';\nimport { User } from '../models/user';\nimport { GLOBAL } from '../config/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor( private http: HttpClient) { this.getStorage(); }\n\n  private URL = GLOBAL.uri;\n  user: User;\n  token: string;\n\n  form: FormGroup = new FormGroup({\n    id: new FormControl(null),\n    name: new FormControl('', Validators.required),\n    lastname: new FormControl('', Validators.required),\n    email: new FormControl('', Validators.email),\n    password: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    role: new FormControl(''),\n    positionId: new FormControl('')\n  });\n\n  getStorage() {\n    if ( localStorage.getItem('token')) {\n      this.token = localStorage.getItem('token');\n      this.user = JSON.parse(localStorage.getItem('user'));\n    } else {\n      this.token = '';\n      this.user = null;\n    }\n  }\n\n  initializeFormGroup() {\n    this.form.setValue({\n      id: null,\n      name: '',\n      lastname: '',\n      email: '',\n      password: '',\n      role: '',\n      positionId: ''\n    });\n  }\n\n  getUsers() {\n\n    // return this.http.get<IUser[]>(this.URL + '/users').pipe(map(results => results['data']));\n    return this.http.get<IUser[]>(this.URL + '/users')\n            .pipe(\n                map( results => {\n                  return results['data'].map( user => User.UsersFromJson(user) );\n                  }\n                )\n              );\n  }\n\n  getUser(id) {\n    return this.http.get<IUser>(this.URL + '/users/' + id);\n  }\n\n  populateForm(user) {\n    this.form.setValue(user);\n  }\n\n  saveUser( user: User) {\n   \n    return this.http.post( this.URL + '/users/signup', user).pipe(\n      map( (resp: any) => {\n        return resp['data'];\n        })\n      );\n  }\n\n  updateUser( user: User ) {\n\n    return this.http.put( this.URL + '/users/' + user.id , user ).pipe(\n        map( (resp: any)  => {\n          // if ( user.id === this.user.id) {\n          //   const userDB: User = resp.user;\n          //   // this.user = resp.user;\n          //   this.saveStorage(resp.user._id, this.token, userDB);\n          // }\n          // alert('Usuario actualizado');\n          return true;\n        }));\n\n  }\n\n  deleteUser( id: string ) {\n\n    return this.http.delete( this.URL + '/users/' + id ).pipe(\n      map( resp => {\n        // alert('Usuario eliminado correctamente');\n        return true;\n      })\n    );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nopage-found',\n  templateUrl: './nopage-found.component.html',\n  styleUrls: ['./nopage-found.component.scss']\n})\nexport class NopageFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nopage-found works!</p>\n","export * from './statuss.actions';\nexport * from './status.actions';\n\n","import { createAction, props } from '@ngrx/store';\nimport { Status } from '../../models/status.model';\n\nexport const loadStatus = createAction(\n    '[Status] Load statuss',\n    props<{ id: string }>()\n    );\nexport const loadStatusSuccess = createAction(\n    '[Status] Load status Success',\n    props<{ status: Status }>()\n);\n\nexport const loadStatusError = createAction(\n    '[Status] Load status Error',\n    props<{ payload: any }>()\n);\n\nexport const resetStatus = createAction(\n    '[Status] Reset status'\n);\n\nexport const requestStatus = createAction(\n    '[Status] Initial Request status',\n    props<{ userId: string, procedureId: string, name: string }>()\n);\n\nexport const changeFormId = createAction(\n    '[Status] Change Form Id',\n    props<{ formId: string }>()\n);\n\nexport const initialStatus = createAction(\n    '[Status] Create Initial status',\n    props<{ status: Status }>()\n);\n\nexport const initialStatusSuccess = createAction(\n    '[Status] create initial status Success',\n    props<{ status: Status }>()\n);\n\nexport const initialStatusError = createAction(\n    '[Status] create initial status Error',\n    props<{ payload: any }>()\n);\n\nexport const createStatus = createAction(\n    '[Status] Create status',\n    props<{ status: Status }>()\n);\n\nexport const createStatusSuccess = createAction(\n    '[Status] create status Success',\n    props<{ status: Status }>()\n);\n\nexport const createStatusError = createAction(\n    '[Status] create status Error',\n    props<{ payload: any }>()\n);\n\nexport const updateStatus = createAction(\n    '[Status] Update status',\n    props<{ status: Status }>()\n);\n\nexport const updateStatusSuccess = createAction(\n    '[Status] Update status Success',\n    props<{ status: Status }>()\n);\n\nexport const updateStatusError = createAction(\n    '[Status] Update status Error',\n    props<{ payload: any }>()\n);\n","import { createAction, props } from '@ngrx/store';\nimport { Status } from '../../models/status.model';\n\nexport type validFilters = 'proceso' |'pendiente' | 'terminado';\n\nexport const loadStatuss = createAction(\n    '[Statuss] Load statuss',\n    props<{ positionId: string, procedureId: string, userId: string }>()\n    );\nexport const loadStatussSuccess = createAction(\n    '[Statuss] Load statuss Success',\n    props<{ statuss: Status[] }>()\n);\nexport const loadStatussError = createAction(\n    '[Statuss] Load statuss Error',\n    props<{ payload: any }>()\n);\nexport const setFilterStatus = createAction(\n    '[Filter] Set filter',\n    props<{ filter: validFilters }>()\n    )","import { ActionReducerMap } from '@ngrx/store';\nimport * as reducers from './reducers';\n\n\n\nexport interface AppState {\n   statuss: reducers.StatussState;\n   status: reducers.StatusState;\n}\n\n\n\nexport const appReducers: ActionReducerMap<AppState> = {\n   statuss: reducers.statussReducer,\n   status: reducers.statusReducer\n}","import { StatussEffects } from './statuss.effects';\nimport { StatusEffects } from './status.effects';\n\n\nexport const EffectsArray: any[] = [ StatussEffects, StatusEffects ];","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport * as statusActions from '../actions/';\nimport { tap, mergeMap, map, concatMap, catchError, switchMap } from 'rxjs/operators';\nimport { StatusService } from '../../services/status/status.service';\nimport { of } from 'rxjs';\nimport { Status } from '../../models/status.model';\nimport { resetStatus } from '../actions/status.actions';\n\n\n\n@Injectable()\nexport class StatusEffects {\n    constructor(\n        private actions$: Actions,\n        private statusService: StatusService\n    ) {}\n\n    loadStatus$ = createEffect(\n        () => this.actions$.pipe(\n           ofType(statusActions.loadStatus),\n        //    tap( data => console.log('effect tap ', data) ),\n        switchMap(\n               ( action ) => this.statusService.getStatus(action.id)\n                    .pipe(\n                        map( status => statusActions.loadStatusSuccess({ status })),\n                        catchError( err => of(statusActions.loadStatusError({ payload: err })) )\n                    )\n           )\n        )\n    );\n\n    initialStatus$ = createEffect(\n        () => this.actions$.pipe(\n           ofType(statusActions.initialStatus),\n        //    tap( data => console.log('effect tap ', data) ),\n        switchMap(\n               ( action ) => this.statusService.createStatus(action.status)\n                    .pipe(\n                        map( (res: any) => statusActions.initialStatusSuccess({ status: res.status }) ),\n                        catchError( err => of(statusActions.initialStatusError({ payload: err })) )\n                    )\n           )\n        )\n    );\n\n    createStatus$ = createEffect(\n        () => this.actions$.pipe(\n           ofType(statusActions.createStatus),\n        //    tap( data => console.log('effect tap ', data) ),\n        concatMap(\n               ( action ) => { return this.statusService.createStatus(action.status)\n                    .pipe(\n                        concatMap( (res: any) => [\n                            statusActions.createStatusSuccess({ status: res.status }),\n                            statusActions.resetStatus()\n                        ]),\n                        catchError( err => of(statusActions.createStatusError({ payload: err })) )\n                    )}\n           )\n        )\n    );\n\n    editStatus$ = createEffect(\n        () => this.actions$.pipe(\n           ofType(statusActions.updateStatus),\n        //    tap( data => console.log('effect tap ', data) ),\n        switchMap(\n               ( action ) => this.statusService.updateStatus(action.status)\n                    .pipe(\n                        map( (res: any) => statusActions.updateStatusSuccess({ status: res.status }) ),\n                        catchError( err => of(statusActions.updateStatusError({ payload: err })) )\n                    )\n           )\n        )\n    );\n}","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport * as statusActions from '../actions/statuss.actions';\nimport { tap, mergeMap, map, catchError } from 'rxjs/operators';\nimport { StatusService } from '../../services/status/status.service';\nimport { of } from 'rxjs';\n\n\n@Injectable()\nexport class StatussEffects {\n\n\n    constructor(\n        private actions$: Actions,\n        private statusService: StatusService\n    ) {}\n    loadStatuss$ = createEffect(\n        () => this.actions$.pipe(\n           ofType(statusActions.loadStatuss),\n        //    tap( data => console.log('effect tap ', data) ),\n           mergeMap(\n               ( action ) => this.statusService.getStatusByPositionId(action.positionId, action.procedureId, action.userId)\n                    .pipe(\n                        map( status => statusActions.loadStatussSuccess({ statuss: status }) ),\n                        catchError( err => of(statusActions.loadStatussError({ payload: err })) )\n                    )\n           )\n        )\n    );\n}","export * from './statuss.reducer';\nexport * from './status.reducer';\n","import { createReducer, on } from '@ngrx/store';\nimport { \n    loadStatus,\n    loadStatusSuccess,\n    loadStatusError,\n    resetStatus,\n    changeFormId,\n    requestStatus,\n    initialStatus,\n    initialStatusSuccess,\n    initialStatusError,\n    createStatus,\n    createStatusSuccess,\n    createStatusError,\n    updateStatus,\n    updateStatusSuccess,\n    updateStatusError\n} from '../actions';\nimport { Status } from '../../models/status.model';\n\n\n\nexport interface StatusState {\n    id: string,\n    status : Status,\n    loaded  : boolean,\n    loading : boolean,\n    error   : any\n}\n\nexport const statusInitialState: StatusState = {\n    id: null,\n    status :  null,\n    loaded  : false,\n    loading : false,\n    error   : null\n}\n\nconst _statusReducer = createReducer(statusInitialState,\n\n    on(loadStatus, (state, { id }) => ({\n        ...state,\n        loading: true,\n        id: id\n    })),\n\n    on(loadStatusSuccess, (state, { status }) => ({\n        ...state,\n        loading: false,\n        loaded: true,\n        status: { ...status }\n    })),\n    on(loadStatusError, (state, { payload }) => ({\n        ...state,\n        loading: false,\n        loaded: false,\n        error: {\n            url: payload.url,\n            name: payload.name,\n            message: payload.message\n        }\n    })),\n    on(resetStatus, state => statusInitialState),\n\n    on(requestStatus, (state, { userId, procedureId, name }) => ({\n        ...state,\n        loading: true,\n        status: {\n            id: null,\n            procedureId,\n            userId,\n            formId: null,\n            status: 'pendiente',\n            dateAt: new Date(),\n            current: true,\n            codeRequest: null,\n            name\n         }\n    })),\n\n    on(changeFormId, (state, { formId }) => ({\n        ...state,\n        loading: true,\n        status: {\n            id: null,\n            procedureId: null,\n            userId: null,\n            formId,\n            status: 'Edit',\n            dateAt: new Date(),\n            current: true,\n            codeRequest: null,\n            name: null\n         }\n    })),\n\n    on(initialStatus, (state, { status }) => ({\n        ...state,\n        loading: true,\n        status\n    })),\n\n    on(initialStatusSuccess, (state, { status }) => ({\n        ...state,\n        loading: false,\n        loaded: true,\n        status: { ...status }\n    })),\n    on(initialStatusError, (state, { payload }) => ({\n        ...state,\n        loading: false,\n        loaded: false,\n        error: {\n            url: payload.url,\n            name: payload.name,\n            message: payload.message\n        }\n    })),\n\n\n    on(createStatus, (state, { status }) => ({\n        ...state,\n        loading: true,\n        status\n    })),\n\n    on(createStatusSuccess, (state, { status }) => ({\n        ...state,\n        loading: false,\n        loaded: true,\n        status: { ...status }\n    })),\n    on(createStatusError, (state, { payload }) => ({\n        ...state,\n        loading: false,\n        loaded: false,\n        error: {\n            url: payload.url,\n            name: payload.name,\n            message: payload.message\n        }\n    })),\n\n\n    on(updateStatus, (state, { status }) => ({\n        ...state,\n        loading: true,\n        status: { ...status }\n    })),\n\n    on(updateStatusSuccess, (state, { status }) => ({\n        ...state,\n        loading: false,\n        loaded: true,\n        status: { ...status }\n    })),\n    on(updateStatusError, (state, { payload }) => ({\n        ...state,\n        loading: false,\n        loaded: false,\n        error: {\n            url: payload.url,\n            name: payload.name,\n            message: payload.message\n        }\n    })),\n);\n\nexport function statusReducer(state, action) {\n    return _statusReducer(state, action);\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { loadStatuss, loadStatussSuccess, loadStatussError, setFilterStatus, validFilters } from '../actions';\nimport { Status } from '../../models/status.model';\n\n\n\nexport interface StatussState {\n    positionId : string,\n    statuss : Status[],\n    filter : validFilters,\n    loaded  : boolean,\n    loading : boolean,\n    error   : any\n}\n\nexport const statessInitialState: StatussState = {\n    positionId: null,\n    statuss : [],\n    filter : 'proceso',\n    loaded  : false,\n    loading : false,\n    error   : null\n}\n\nconst _statussReducer = createReducer(statessInitialState,\n\n    on(loadStatuss, (state, { positionId }) => ({\n        ...state,\n        loading: true,\n        positionId: positionId\n    })),\n\n    on(loadStatussSuccess, (state, { statuss }) => ({\n        ...state,\n        loading: false,\n        loaded: true,\n        statuss: [ ...statuss ]\n    })),\n    on(loadStatussError, (state, { payload }) => ({\n        ...state,\n        loading: false,\n        loaded: false,\n        error: {\n            url: payload.url,\n            name: payload.name,\n            message: payload.message\n        }\n    })),\n    on(setFilterStatus, (state, { filter }) => ({\n        ...state,\n        loaded: true,\n        filter\n    })),\n\n);\n\nexport function statussReducer(state, action) {\n    return _statussReducer(state, action);\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}